{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/lxrdxe7o/.vscode/extensions/extensions.json","path":"/home/lxrdxe7o/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1736422190338,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.96.3","productDate":"2025-01-09T18:14:09.060Z","productCommit":"91fbdddc47bc9c09064bf7acf133d22631cbf083","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"eamodio.gitlens","uuid":"4de763bd-505d-4978-9575-2b7696ecf94e"},"manifest":{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more","version":"16.1.1","engines":{"vscode":"^1.82.0"},"license":"SEE LICENSE IN LICENSE","publisher":"eamodio","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"homepage":"https://gitkraken.com/gitlens","bugs":{"url":"https://github.com/gitkraken/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/gitkraken/vscode-gitlens.git"},"main":"./dist/gitlens.js","browser":"./dist/browser/gitlens.js","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/gitkraken--community-gitlens-blue.svg?logo=slack&labelColor=555555","href":"https://slack.gitkraken.com/","description":"Join us in the #gitlens channel"}],"categories":["Other","SCM Providers"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["onFileSystem:gitlens","onUri","onWebviewPanel:gitlens.graph","onWebviewPanel:gitlens.patchDetails","onWebviewPanel:gitlens.settings","onWebviewPanel:gitlens.timeline","onStartupFinished"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited"}},"contributes":{"configuration":[{"id":"current-line-blame","title":"Inline Blame","order":10,"properties":{"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an inline blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window","order":10},"gitlens.currentLine.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the inline blame annotation. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.currentLine.format":{"type":"string","default":"${author, }${agoOrDate}${' via  'pullRequest}${ • message|50?}","markdownDescription":"Specifies the format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting","scope":"window","order":30},"gitlens.currentLine.uncommittedChangesFormat":{"type":"string","default":null,"markdownDescription":"Specifies the uncommitted changes format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting.\n\n**NOTE**: Setting this to an empty string will disable inline blame annotations for uncommitted changes.","scope":"window","order":31},"gitlens.currentLine.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the inline blame annotation","scope":"window","order":33},"gitlens.currentLine.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the inline blame annotation","scope":"window","order":34},"gitlens.currentLine.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the inline blame annotation","scope":"window","order":35},"gitlens.currentLine.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the inline blame annotation","scope":"window","order":36},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the inline blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `#gitlens.hovers.currentLine.over#` to `line` to enable the hovers to show anywhere over the line.","scope":"window","order":40},"gitlens.currentLine.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) for the inline blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":50}}},{"id":"git-code-lens","title":"Git CodeLens","order":11,"properties":{"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window","scope":"window","order":10},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window","order":20},"gitlens.codeLens.authors.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Searches for commits within the range","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.toggleFileBlame","markdownDescription":"Specifies the command to be executed when an _authors_ CodeLens is clicked","scope":"window","order":21},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block","scope":"window","order":30},"gitlens.codeLens.recentChange.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.showQuickCommitFileDetails","markdownDescription":"Specifies the command to be executed when a _recent change_ CodeLens is clicked","scope":"window","order":31},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds CodeLens at the top of the document","Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":0,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where Git CodeLens will be shown in the document","scope":"language-overridable","order":40},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`","scope":"language-overridable","order":50},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git CodeLens on symbols that span only a single line","scope":"window","order":60},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes","scope":"window","order":70},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes","scope":"window","order":71},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes","scope":"window","order":72},"gitlens.codeLens.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":73},"gitlens.codeLens.scopesByLanguage":{"deprecationMessage":"Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead","markdownDeprecationMessage":"Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead"}}},{"id":"status-bar-blame","title":"Status Bar Blame","order":12,"properties":{"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window","order":10},"gitlens.statusBar.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.statusBar.format":{"type":"string","default":"${author}, ${agoOrDate}${' via  'pullRequest}","markdownDescription":"Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting","scope":"window","order":30},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window","order":40},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.toggleCodeLens","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Toggles Git CodeLens","Compares the current line commit with the previous","Compares the current line commit with the working tree","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window","order":50},"gitlens.statusBar.tooltipFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window","order":70},"gitlens.statusBar.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"hovers","title":"Hovers","order":13,"properties":{"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window","order":10},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window","order":20},"gitlens.hovers.avatarSize":{"type":"number","default":32,"markdownDescription":"Specifies the size of the avatar images in hovers","scope":"window","order":21},"gitlens.hovers.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.hovers.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.hovers.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window","order":40},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window","order":41},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window","order":42},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window","order":43},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window","order":50},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window","order":51},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window","order":52},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window","order":53},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window","order":70}}},{"id":"file-annotations","title":"File Annotations","order":14,"properties":{"gitlens.fileAnnotations.dismissOnEscape":{"type":"boolean","default":true,"markdownDescription":"Specifies whether pressing the `ESC` key dismisses the active file annotations","scope":"window","order":10},"gitlens.fileAnnotations.command":{"type":["string","null"],"default":null,"enum":[null,"blame","heatmap","changes"],"enumDescriptions":["Shows a menu to choose which file annotations to toggle","Toggles file blame annotations","Toggles file heatmap annotations","Toggles file changes annotations"],"markdownDescription":"Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations","scope":"window","order":20},"gitlens.fileAnnotations.preserveWhileEditing":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file annotations will be preserved while editing. Use `#gitlens.advanced.blame.delayAfterEdit#` to control how long to wait before the annotation will update while the file is still dirty","scope":"window","order":30},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit but before it is saved. Use 0 to specify an infinite wait. Only applies if the file is under the `#gitlens.advanced.sizeThresholdAfterEdit#`","scope":"window","order":90},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window","order":91}}},{"id":"file-blame","title":"File Blame","order":15,"properties":{"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file blame annotations will be toggled","scope":"window","order":10},"gitlens.blame.format":{"type":"string","default":"${message|50?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting","scope":"window","order":20},"gitlens.blame.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the file blame annotations","scope":"window","order":22},"gitlens.blame.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the file blame annotations","scope":"window","order":23},"gitlens.blame.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the file blame annotations","scope":"window","order":24},"gitlens.blame.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the file blame annotations","scope":"window","order":25},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the file blame annotations","scope":"window","order":30},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the file blame annotations","Adds a heatmap indicator on the right edge of the file blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the file blame annotations","scope":"window","order":31},"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the file blame annotations","scope":"window","order":40},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent file blame annotations","scope":"window","order":50},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window","order":60},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window","order":61},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file blame annotations will be separated by a small gap","scope":"window","order":70},"gitlens.blame.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"file-changes","title":"File Changes","order":16,"properties":{"gitlens.changes.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file changes annotations will be toggled","scope":"window","order":10},"gitlens.changes.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file changes annotations will be shown","scope":"window","order":20}}},{"id":"file-heatmap","title":"File Heatmap","order":17,"properties":{"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file heatmap annotations will be toggled","scope":"window","order":10},"gitlens.heatmap.locations":{"type":"array","default":["gutter","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file heatmap annotations will be shown","scope":"window","order":20},"gitlens.heatmap.fadeLines":{"type":"boolean","default":true,"markdownDescription":"Specifies the whether to fade out older lines","scope":"window","order":21},"gitlens.heatmap.ageThreshold":{"type":"number","default":90,"markdownDescription":"Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window","order":30},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":40},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":50}}},{"id":"graph","title":"Commit Graph (ᴘʀᴏ)","order":50,"properties":{"gitlens.graph.layout":{"type":"string","default":"panel","enum":["editor","panel"],"enumDescriptions":["Prefer showing the Commit Graph in the editor area","Prefer showing the Commit Graph in the bottom panel"],"markdownDescription":"Specifies the preferred layout of the _Commit Graph_","scope":"window","order":1},"gitlens.graph.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Commit Graph_ in the editor area","scope":"window","order":2},"gitlens.graph.minimap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a minimap of commit activity above the _Commit Graph_","scope":"window","order":100},"gitlens.graph.minimap.dataType":{"type":"string","default":"commits","enum":["commits","lines"],"enumDescriptions":["Shows the number of commits per day in the minimap","Shows the number of lines changed per day in the minimap"],"markdownDescription":"Specifies the data to show on the minimap in the _Commit Graph_","scope":"window","order":101},"gitlens.graph.minimap.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","pullRequests","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of pull requests","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":5,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the minimap in the _Commit Graph_","scope":"window","order":102},"gitlens.graph.scrollMarkers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show markers on the scrollbar in the _Commit Graph_","scope":"window","order":200},"gitlens.graph.scrollMarkers.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","pullRequests","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of pull requests","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":5,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the scrollbar in the _Commit Graph_","scope":"window","order":201},"gitlens.graph.sidebar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a sidebar on the _Commit Graph_","scope":"window","order":300},"gitlens.graph.branchesVisibility":{"type":"string","enum":["all","smart","current"],"enumDescriptions":["Shows all branches","Shows only relevant branches","Shows only the current branch"],"default":"all","markdownDescription":"Specifies the visibility of branches on the _Commit Graph_","scope":"window","order":400},"gitlens.graph.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Commit Graph_","Shows the _Commit Details_ view automatically when selection changes in the _Commit Graph_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Commit Graph_","scope":"window","order":500},"gitlens.graph.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted in the _Commit Graph_. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":600},"gitlens.graph.dateStyle":{"type":["string","null"],"default":null,"enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed in the _Commit Graph_","scope":"window","order":601},"gitlens.graph.commitOrdering":{"type":"string","default":"date","enum":["date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown on the _Commit Graph_","scope":"window","order":602},"gitlens.graph.onlyFollowFirstParent":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to only follow the first parent when showing commits on the _Commit Graph_","order":603},"gitlens.graph.dimMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to dim (deemphasize) merge commit rows in the _Commit Graph_","scope":"window","order":700},"gitlens.graph.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a local branch's upstream status in the _Commit Graph_","scope":"window","order":701},"gitlens.graph.showRemoteNames":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show remote names on remote branches in the _Commit Graph_","scope":"window","order":702},"gitlens.graph.issues.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show associated issues on branches in the _Commit Graph_. Requires a connection to a supported issue service (e.g. GitHub)","scope":"window","order":703},"gitlens.graph.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show associated pull requests on remote branches in the _Commit Graph_. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":704},"gitlens.graph.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of author initials and remote icons in the _Commit Graph_","scope":"window","order":704},"gitlens.graph.showGhostRefsOnRowHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a ghost branch / tag when hovering over or selecting a row in the _Commit Graph_","scope":"window","order":750},"gitlens.graph.highlightRowsOnRefHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight rows associated with the branch / tag when hovering over it in the _Commit Graph_","scope":"window","order":751},"gitlens.graph.defaultItemLimit":{"type":"number","default":500,"markdownDescription":"Specifies the default number of items to show in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":800},"gitlens.graph.pageItemLimit":{"type":"number","default":200,"markdownDescription":"Specifies the number of additional items to fetch when paginating in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":801},"gitlens.graph.searchItemLimit":{"type":"number","default":100,"markdownDescription":"Specifies the number of results to gather when searching in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":802},"gitlens.graph.scrollRowPadding":{"type":"number","default":0,"markdownDescription":"Specifies the number of rows from the edge at which the graph will scroll when using keyboard or search to change the selected row","scope":"window","order":900},"gitlens.graph.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Graph_ in the status bar","scope":"window","order":1000}}},{"id":"home","title":"Home","order":55,"properties":{"gitlens.home.preview.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable the new home preview","scope":"window","order":10}}},{"id":"launchpad","title":"Launchpad (ᴘʀᴏ)","order":60,"properties":{"gitlens.launchpad.ignoredRepositories":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the repositories to ignore in the _Launchpad_","scope":"window","order":10},"gitlens.launchpad.includedOrganizations":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the organizations to include in the _Launchpad_. If empty, all organizations are included","scope":"window","order":11},"gitlens.launchpad.ignoredOrganizations":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the organizations to ignore in the _Launchpad_","scope":"window","order":12},"gitlens.launchpad.staleThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the number of days after which a pull request is considered stale and moved to Other in the _Launchpad_","scope":"window","order":20},"gitlens.launchpad.indicator.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable status bar indicator for _Launchpad_","scope":"window","order":100},"gitlens.launchpad.indicator.icon":{"type":"string","enum":["default","group"],"enumDescriptions":["Shows the Launchpad icon","Shows the icon of the highest priority group"],"default":"default","markdownDescription":"Specifies the style of the  _Launchpad_ status bar indicator icon","scope":"window","order":110},"gitlens.launchpad.indicator.label":{"type":["boolean","string"],"enum":[false,"item","counts"],"enumDescriptions":["Hides the label","Shows the highest priority item which needs your attention","Shows the status counts of items which need your attention"],"default":"item","markdownDescription":"Specifies the display of the  _Launchpad_ status bar indicator label","scope":"window","order":120},"gitlens.launchpad.indicator.groups":{"type":"array","default":["mergeable","blocked","needs-review","follow-up"],"items":{"type":"string","enum":["mergeable","blocked","needs-review","follow-up"],"enumDescriptions":["Shows mergeable pull requests","Shows blocked pull requests","Shows pull requests needing your review","Shows pull requests needing follow-up"]},"minItems":1,"uniqueItems":true,"markdownDescription":"Specifies the groups of pull requests to show on the _Launchpad_ status bar indicator","scope":"window","order":130},"gitlens.launchpad.indicator.useColors":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to use colors on the _Launchpad_ status bar indicator","scope":"window","order":140},"gitlens.launchpad.indicator.polling.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the status bar indicator will fetch and display pull request data for _Launchpad_","scope":"window","order":150},"gitlens.launchpad.indicator.polling.interval":{"type":"number","default":30,"markdownDescription":"Specifies the rate (in minutes) at which the status bar indicator will fetch pull request data for _Launchpad_. Use 0 to disable automatic polling","scope":"window","order":160},"gitlens.launchpad.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Launchpad_ as an editor tab","scope":"window","order":1000},"gitlens.launchpad.experimental.queryLimit":{"type":"number","default":100,"markdownDescription":"(Experimental) Specifies a limit on the number of pull requests to be queried in the _Launchpad_","scope":"window","order":1100}}},{"id":"cloud-patches","title":"Cloud Patches (ᴘʀᴇᴠɪᴇᴡ)","order":70,"properties":{"gitlens.cloudPatches.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable the preview of _Cloud Patches_, which allow you to privately and securely share code with specific teammates and other developers","scope":"window","order":10,"tags":["preview"]},"gitlens.cloudPatches.experimental.layout":{"type":"string","default":"view","enum":["editor","view"],"enumDescriptions":["Prefer showing Cloud Patches in the editor area","Prefer showing Cloud Patches in a view"],"markdownDescription":"(Experimental) Specifies the preferred layout of for _Cloud Patches_","scope":"window","order":20,"tags":["experimental"]}}},{"id":"views","title":"Views","order":100,"properties":{"gitlens.views.scm.grouped.default":{"type":"string","default":"commits","enum":["commits","branches","remotes","stashes","tags","worktrees","contributors","repositories","searchAndCompare","launchpad"],"enumDescriptions":["Commits view","Branches view","Remotes view","Stashes view","Tags view","Worktrees view","Contributors view","Repositories view","Search & Compare view","Launchpad view"],"markdownDescription":"Specifies the default view to show when the _GitLens_ view is opened","scope":"window","order":2},"gitlens.views.scm.grouped.views":{"type":"object","default":{"commits":true,"branches":true,"remotes":true,"stashes":true,"tags":true,"worktrees":true,"contributors":true,"repositories":false,"searchAndCompare":false,"launchpad":false},"properties":{"commits":{"type":"boolean","default":true,"description":"Group the Commits view"},"branches":{"type":"boolean","default":true,"description":"Group the Branches view"},"remotes":{"type":"boolean","default":true,"description":"Group the Remotes view"},"stashes":{"type":"boolean","default":true,"description":"Group the Stashes view"},"tags":{"type":"boolean","default":true,"description":"Group the Tags view"},"worktrees":{"type":"boolean","default":true,"description":"Group the Worktrees view"},"contributors":{"type":"boolean","default":true,"description":"Group the Contributors view"},"repositories":{"type":"boolean","default":false,"description":"Group the Repositories view"},"searchAndCompare":{"type":"boolean","default":true,"description":"Group the Search & Compare view"},"launchpad":{"type":"boolean","default":false,"description":"Group the Launchpad view"}},"additionalProperties":false,"markdownDescription":"Specifies which views will be grouped into the _GitLens_ view on the Source Control side bar","scope":"window","order":3},"gitlens.views.collapseWorktreesWhenPossible":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to try to collapse the opened worktrees into a single (common) repository in the views when possible","scope":"window","order":4},"gitlens.views.showCurrentBranchOnTop":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to always show the current branch at the top of the views","scope":"window","order":5},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window","order":10},"gitlens.views.pageItemLimit":{"type":"number","default":40,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window","order":11},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window","order":20},"gitlens.views.formats.commits.label":{"type":"string","default":"${❰ tips|11? ❱➤  }${message}","markdownDescription":"Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":30},"gitlens.views.formats.commits.description":{"type":"string","default":"${author, }${agoOrDate}","markdownDescription":"Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":31},"gitlens.views.formats.commits.tooltip":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}${'&nbsp;&nbsp;'changesDetail} ${message}${\n\n---\n\nfootnotes}\n\n${tips}","markdownDescription":"Specifies the tooltip format (in markdown) of commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.commits.tooltipWithStatus":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}} ${message}${\n\n---\n\nfootnotes}\n\n${tips}","markdownDescription":"Specifies the tooltip format (in markdown) of \"file\" commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.files.label":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":40},"gitlens.views.formats.files.description":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":41},"gitlens.views.formats.stashes.label":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":50},"gitlens.views.formats.stashes.description":{"type":"string","default":"${stashOnRef, }${agoOrDate}","markdownDescription":"Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":51},"gitlens.views.formats.stashes.tooltip":{"type":"string","default":"${link}${' on `'stashOnRef`}${'\\\n&nbsp;&nbsp;'changesDetail} \\\n &nbsp;$(history) ${ago} _(${date})_ ${message}${\n\n---\n\nfootnotes}","markdownDescription":"Specifies the tooltip format (in markdown) of stashes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":52},"gitlens.views.openChangesInMultiDiffEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to open multiple changes in the multi-diff editor (single tab) or in individual diff editors (multiple tabs)","scope":"window","order":60},"gitlens.views.commitFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.commitFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.commitFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.commits.files.label#` instead"},"gitlens.views.commitDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.commits.description#` instead"},"gitlens.views.stashFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.stashFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.stashFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.stashes.files.label#` instead"},"gitlens.views.stashDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.stashes.description#` instead"},"gitlens.views.statusFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.statusFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"}}},{"id":"launchpad-view","title":"Launchpad View (ᴘʀᴏ)","order":101,"properties":{"gitlens.views.launchpad.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.launchpad.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Launchpad_ view will display files","scope":"window","order":30},"gitlens.views.launchpad.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Launchpad_ view. Only applies when `#gitlens.views.launchpad.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.launchpad.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Launchpad_ view. Only applies when `#gitlens.views.launchpad.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.launchpad.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Launchpad_ view will display file icons","scope":"window","order":33},"gitlens.views.launchpad.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Launchpad_ view","scope":"window","order":40}}},{"id":"commits-view","title":"Commits View","order":110,"properties":{"gitlens.views.commits.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ view","scope":"window","order":9},"gitlens.views.commits.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Commits_ view","scope":"window","order":10},"gitlens.views.commits.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commits.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.commits.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":23},"gitlens.views.commits.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commits.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commits_ view will display files","scope":"window","order":30},"gitlens.views.commits.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commits.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commits.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commits_ view will display file icons","scope":"window","order":33},"gitlens.views.commits.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view","scope":"window","order":40},"gitlens.views.commits.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"commit-details-view","title":"Inspect View","order":120,"properties":{"gitlens.views.commitDetails.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.views.commitDetails.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.commitDetails.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for associated pull requests. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commitDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commitDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commit Details_ view will display files","scope":"window","order":30},"gitlens.views.commitDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commitDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commitDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commit Details_ view will display file icons","scope":"window","order":33},"gitlens.views.commitDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commit Details_ view","scope":"window","order":40}}},{"id":"pull-request-view","title":"Pull Request View","order":130,"properties":{"gitlens.views.pullRequest.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.pullRequest.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Pull Request_ view will display files","scope":"window","order":30},"gitlens.views.pullRequest.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.pullRequest.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.pullRequest.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Pull Request_ view will display file icons","scope":"window","order":33},"gitlens.views.pullRequest.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Pull Request_ view","scope":"window","order":40}}},{"id":"repositories-view","title":"Repositories View","order":140,"properties":{"gitlens.views.repositories.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Repositories_ view","scope":"window","order":10},"gitlens.views.repositories.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view","scope":"window","order":11},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window","order":12},"gitlens.views.repositories.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.repositories.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.repositories.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.repositories.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view","scope":"window","order":30},"gitlens.views.repositories.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _Repositories_ view","scope":"window","order":31},"gitlens.views.repositories.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _Repositories_ view","scope":"window","order":32},"gitlens.views.repositories.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the stashes for each repository in the _Repositories_ view","scope":"window","order":33},"gitlens.views.repositories.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _Repositories_ view","scope":"window","order":34},"gitlens.views.repositories.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _Repositories_ view","scope":"window","order":35},"gitlens.views.repositories.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _Repositories_ view","scope":"window","order":36},"gitlens.views.repositories.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view","scope":"window","order":37},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window","order":40},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window","order":50},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window","order":60},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window","order":70},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window","order":80},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.repositories.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Repositories_ view will display file icons","scope":"window","order":83},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window","order":90},"gitlens.views.repositories.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ and _Branches_ sections of the _Repositories_ view","scope":"window","order":95},"gitlens.views.repositories.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _Repositories_ view","scope":"window","order":100},"gitlens.views.repositories.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"file-history-view","title":"File History View","order":150,"properties":{"gitlens.views.fileHistory.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.fileHistory.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.fileHistory.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.fileHistory.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _File History_ view will display files","scope":"window","order":30},"gitlens.views.fileHistory.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.fileHistory.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.fileHistory.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _File History_ view will display file icons","scope":"window","order":33},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window","order":20},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames","scope":"window","order":100},"gitlens.advanced.fileHistoryShowAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show commits from all branches","scope":"window","order":101},"gitlens.advanced.fileHistoryShowMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show merge commits","scope":"window","order":102}}},{"id":"visual-history","title":"Visual File History (ᴘʀᴏ)","order":155,"properties":{"gitlens.visualHistory.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Visual File History_ in the editor area","scope":"window","order":10},"gitlens.visualHistory.queryLimit":{"type":"number","default":20,"markdownDescription":"Specifies the limit on the how many commits can be queried for statistics in the _Visual File History_, because of rate limits. Only applies to virtual workspaces.","scope":"window","order":20}}},{"id":"line-history-view","title":"Line History View","order":160,"properties":{"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window","order":10},"gitlens.views.lineHistory.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"branches-view","title":"Branches View","order":170,"properties":{"gitlens.views.branches.showRemoteBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show remote branches for the default remote in the _Branches_ view","scope":"window","order":8},"gitlens.views.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Branches_ view","scope":"window","order":9},"gitlens.views.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) in the _Branches_ view","scope":"window","order":10},"gitlens.views.branches.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.branches.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.branches.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.branches.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Branches_ view will display branches","scope":"window","order":30},"gitlens.views.branches.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.branches.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Branches_ view will display files","scope":"window","order":50},"gitlens.views.branches.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.branches.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.branches.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Branches_ view will display file icons","scope":"window","order":53},"gitlens.views.branches.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view","scope":"window","order":60},"gitlens.views.branches.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":70}}},{"id":"remotes-view","title":"Remotes View","order":180,"properties":{"gitlens.views.remotes.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.remotes.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.remotes.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":12},"gitlens.views.remotes.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Remotes_ view will display branches","scope":"window","order":20},"gitlens.views.remotes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.remotes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Remotes_ view will display files","scope":"window","order":30},"gitlens.views.remotes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.remotes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.remotes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Remotes_ view will display file icons","scope":"window","order":33},"gitlens.views.remotes.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view","scope":"window","order":40},"gitlens.views.remotes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"stashes-view","title":"Stashes View","order":190,"properties":{"gitlens.views.stashes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.stashes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Stashes_ view will display files","scope":"window","order":10},"gitlens.views.stashes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `auto`","scope":"window","order":11},"gitlens.views.stashes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `tree` or `auto`","scope":"window","order":12},"gitlens.views.stashes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Stashes_ view will display file icons","scope":"window","order":13},"gitlens.views.stashes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"tags-view","title":"Tags View","order":200,"properties":{"gitlens.views.tags.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays tags as a list","Displays tags as a tree when tags names contain slashes `/`"],"markdownDescription":"Specifies how the _Tags_ view will display tags","scope":"window","order":10},"gitlens.views.tags.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.tags.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Tags_ view will display files","scope":"window","order":30},"gitlens.views.tags.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.tags.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.tags.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Tags_ view will display file icons","scope":"window","order":33},"gitlens.views.tags.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view","scope":"window","order":40},"gitlens.views.tags.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"worktrees-view","title":"Worktrees View (ᴘʀᴏ)","order":210,"properties":{"gitlens.worktrees.promptForLocation":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to prompt for a path when creating new worktrees","scope":"resource","order":10},"gitlens.worktrees.defaultLocation":{"type":"string","default":null,"markdownDescription":"Specifies the default path in which new worktrees will be created","scope":"resource","order":11},"gitlens.worktrees.openAfterCreate":{"type":"string","default":"prompt","enum":["always","alwaysNewWindow","onlyWhenEmpty","never","prompt"],"enumDescriptions":["Always open the new worktree in the current window","Always open the new worktree in a new window","Only open the new worktree in the current window when no folder is opened","Never open the new worktree","Always prompt to open the new worktree"],"markdownDescription":"Specifies how and when to open a worktree after it is created","scope":"resource","order":12},"gitlens.views.worktrees.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Worktrees_ view","scope":"window","order":19},"gitlens.views.worktrees.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the worktree branch with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag, etc) in the _Worktrees_ view","scope":"window","order":20},"gitlens.views.worktrees.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.worktrees.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.worktrees.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.worktrees.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.worktrees.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Worktrees_ view will display files","scope":"window","order":40},"gitlens.views.worktrees.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `auto`","scope":"window","order":41},"gitlens.views.worktrees.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `tree` or `auto`","scope":"window","order":42},"gitlens.views.worktrees.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Worktrees_ view will display file icons","scope":"window","order":43},"gitlens.views.worktrees.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view","scope":"window","order":50},"gitlens.views.worktrees.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":60}}},{"id":"contributors-view","title":"Contributors View","order":220,"properties":{"gitlens.views.contributors.showAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show commits from all branches in the _Contributors_ view","scope":"window","order":10},"gitlens.views.contributors.showStatistics":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size","scope":"window","order":20},"gitlens.views.contributors.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.contributors.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.contributors.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.contributors.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Contributors_ view will display files","scope":"window","order":50},"gitlens.views.contributors.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.contributors.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.contributors.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Contributors_ view will display file icons","scope":"window","order":53},"gitlens.views.contributors.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view","scope":"window","order":60},"gitlens.views.contributors.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"search-compare-view","title":"Search & Compare View","order":230,"properties":{"gitlens.views.searchAndCompare.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.searchAndCompare.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.searchAndCompare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.searchAndCompare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search & Compare_ view will display files","scope":"window","order":20},"gitlens.views.searchAndCompare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `auto`","scope":"window","order":21},"gitlens.views.searchAndCompare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `tree` or `auto`","scope":"window","order":22},"gitlens.views.searchAndCompare.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Search & Compare_ view will display file icons","scope":"window","order":33},"gitlens.views.searchAndCompare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view","scope":"window","order":30}}},{"id":"cloud-patches-view","title":"Cloud Patches View (ᴘʀᴇᴠɪᴇᴡ)","order":240,"properties":{"gitlens.views.drafts.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.drafts.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display files","scope":"window","order":30},"gitlens.views.drafts.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.drafts.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.drafts.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display file icons","scope":"window","order":33},"gitlens.views.drafts.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Cloud Patches_ view","scope":"window","order":40}}},{"id":"patch-details-view","title":"Patch Details View (ᴘʀᴇᴠɪᴇᴡ)","order":250,"properties":{"gitlens.views.patchDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.patchDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Patch Details_ view will display files","scope":"window","order":30},"gitlens.views.patchDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.patchDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.patchDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Patch Details_ view will display file icons","scope":"window","order":33},"gitlens.views.patchDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Patch Details_ view","scope":"window","order":40}}},{"id":"workspaces-view","title":"Cloud Workspaces View (ᴘʀᴇᴠɪᴇᴡ)","order":260,"properties":{"gitlens.views.workspaces.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Cloud Workspaces_ view","scope":"window","order":10},"gitlens.views.workspaces.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _Cloud Workspaces_ view","scope":"window","order":11},"gitlens.views.workspaces.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Cloud Workspaces_ view","scope":"window","order":12},"gitlens.views.workspaces.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.workspaces.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.workspaces.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.workspaces.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _Cloud Workspaces_ view","scope":"window","order":30},"gitlens.views.workspaces.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _Cloud Workspaces_ view","scope":"window","order":31},"gitlens.views.workspaces.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _Cloud Workspaces_ view","scope":"window","order":32},"gitlens.views.workspaces.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the stashes for each repository in the _Cloud Workspaces_ view","scope":"window","order":33},"gitlens.views.workspaces.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _Cloud Workspaces_ view","scope":"window","order":34},"gitlens.views.workspaces.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _Cloud Workspaces_ view","scope":"window","order":35},"gitlens.views.workspaces.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _Cloud Workspaces_ view","scope":"window","order":36},"gitlens.views.workspaces.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _Cloud Workspaces_ view","scope":"window","order":37},"gitlens.views.workspaces.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Cloud Workspaces_ view","scope":"window","order":60},"gitlens.views.workspaces.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display branches","scope":"window","order":70},"gitlens.views.workspaces.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.workspaces.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display files","scope":"window","order":80},"gitlens.views.workspaces.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Cloud Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.workspaces.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Cloud Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.workspaces.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display file icons","scope":"window","order":83},"gitlens.views.workspaces.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Cloud Workspaces_ view in a compact display density","scope":"window","order":90},"gitlens.views.workspaces.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ and _Branches_ sections of the _Cloud Workspaces_ view","scope":"window","order":9},"gitlens.views.workspaces.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _Cloud Workspaces_ view","scope":"window","order":100}}},{"id":"rebase-editor","title":"Interactive Rebase Editor","order":600,"properties":{"gitlens.rebaseEditor.ordering":{"type":"string","default":"desc","enum":["asc","desc"],"enumDescriptions":["Shows oldest commit first","Shows newest commit first"],"markdownDescription":"Specifies how Git commits are displayed in the _Interactive Rebase Editor_","scope":"window","order":10},"gitlens.rebaseEditor.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Interactive Rebase Editor_","Shows the _Commit Details_ view automatically when selection changes in the _Interactive Rebase Editor_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Interactive Rebase Editor_","scope":"window","order":20}}},{"id":"git-command-palette","title":"Git Command Palette","order":700,"properties":{"gitlens.gitCommands.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in quick pick menus when applicable","scope":"window","order":5},"gitlens.gitCommands.sortBy":{"type":"string","default":"usage","enum":["name","usage"],"enumDescriptions":["Sorts commands by name","Sorts commands by last used date"],"markdownDescription":"Specifies how Git commands are sorted in the _Git Command Palette_","scope":"window","order":10},"gitlens.gitCommands.skipConfirmations":{"type":"array","default":["fetch:command","stash-push:command"],"items":{"type":"string","enum":["branch-create:command","branch-create:menu","co-authors:command","co-authors:menu","fetch:command","fetch:menu","pull:command","pull:menu","push:command","push:menu","stash-apply:command","stash-apply:menu","stash-pop:command","stash-pop:menu","stash-push:command","stash-push:menu","switch:command","switch:menu","tag-create:command","tag-create:menu"],"enumDescriptions":["Skips branch create confirmations when run from a command, e.g. a view action","Skips branch create confirmations when run from the Git Command Palette","Skips co-author confirmations when run from a command, e.g. a view action","Skips co-author confirmations when run from the Git Command Palette","Skips fetch confirmations when run from a command, e.g. a view action","Skips fetch confirmations when run from the Git Command Palette","Skips pull confirmations when run from a command, e.g. a view action","Skips pull confirmations when run from the Git Command Palette","Skips push confirmations when run from a command, e.g. a view action","Skips push confirmations when run from the Git Command Palette","Skips stash apply confirmations when run from a command, e.g. a view action","Skips stash apply confirmations when run from the Git Command Palette","Skips stash pop confirmations when run from a command, e.g. a view action","Skips stash pop confirmations when run from the Git Command Palette","Skips stash push confirmations when run from a command, e.g. a view action","Skips stash push confirmations when run from the Git Command Palette","Skips switch confirmations when run from a command, e.g. a view action","Skips switch confirmations when run from the Git Command Palette","Skips tag create confirmations when run from a command, e.g. a view action","Skips tag create confirmations when run from the Git Command Palette"]},"minItems":0,"maxItems":14,"uniqueItems":true,"markdownDescription":"Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`","scope":"window","order":20},"gitlens.gitCommands.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":30},"gitlens.gitCommands.search.showResultsInSideBar":{"type":["boolean","null"],"default":null,"markdownDescription":"Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context","scope":"window","order":40},"gitlens.gitCommands.search.matchAll":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match all or any commit message search patterns","scope":"window","order":50},"gitlens.gitCommands.search.matchCase":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match commit search patterns with or without regard to casing","scope":"window","order":51},"gitlens.gitCommands.search.matchRegex":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to match commit search patterns using regular expressions","scope":"window","order":52},"gitlens.gitCommands.search.showResultsInView":{"deprecationMessage":"Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar","markdownDeprecationMessage":"Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`"}}},{"id":"integrations","title":"Integrations","order":800,"properties":{"gitlens.autolinks":{"type":["array","null"],"default":null,"items":{"type":"object","required":["prefix","url"],"properties":{"prefix":{"type":"string","description":"Specifies the short prefix to match to generate autolinks for the external resource, e.g. `GH-` or `JIRA-`"},"title":{"type":["string","null"],"default":null,"description":"Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number"},"url":{"type":"string","description":"Specifies the URL of the external resource you want to link to. Use `<num>` as the variable for the reference number"},"alphanumeric":{"type":"boolean","description":"Specifies whether alphanumeric characters should be allowed in `<num>`","default":false},"ignoreCase":{"type":"boolean","description":"Specifies whether case should be ignored when matching the prefix","default":false}},"additionalProperties":false},"uniqueItems":true,"markdownDescription":"Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number","scope":"window","order":10},"gitlens.integrations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable rich integrations with any supported remote services","scope":"window","order":20},"gitlens.cloudIntegrations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use cloud-based integrations when authenticating with GitHub","scope":"window","order":30},"gitlens.remotes":{"type":["array","null"],"default":null,"items":{"type":"object","required":["type"],"oneOf":[{"required":["domain"]},{"required":["regex"]}],"properties":{"type":{"type":"string","enum":["Custom","AzureDevOps","Bitbucket","BitbucketServer","Gerrit","GoogleSource","Gitea","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name used to match this custom configuration to a Git remote"},"regex":{"type":"string","description":"Specifies a regular expression used to match this custom configuration to a Git remote and capture the \"domain name\" and \"path\""},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional URL protocol for the custom remote service"},"ignoreSSLErrors":{"type":"boolean","default":false,"description":"Specifies whether to ignore invalid SSL certificate errors when connecting to the remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","markdownDescription":"Specifies the format of a repository URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path"},"branches":{"type":"string","markdownDescription":"Specifies the format of a branches URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"branch":{"type":"string","markdownDescription":"Specifies the format of a branch URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"commit":{"type":"string","markdownDescription":"Specifies the format of a commit URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${id}` &mdash; commit SHA"},"file":{"type":"string","markdownDescription":"Specifies the format of a file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","markdownDescription":"Specifies the format of a branch file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${branch}` &mdash; branch\\\n`${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","markdownDescription":"Specifies the format of a commit file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${id}` &mdash; commit SHA\\\n`${line}` &mdash; formatted line information"},"fileLine":{"type":"string","markdownDescription":"Specifies the format of a line in a file URL for the custom remote service\n\nAvailable tokens\\\n`${line}` &mdash; line"},"fileRange":{"type":"string","markdownDescription":"Specifies the format of a range in a file URL for the custom remote service\n\nAvailable tokens\\\n`${start}` &mdash; starting line\\\n`${end}` &mdash; ending line"}},"additionalProperties":false}}},"uniqueItems":true,"markdownDescription":"Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services","scope":"resource","order":30},"gitlens.partners":{"type":["object","null"],"additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean","default":true,"description":"Specifies whether the partner integration should be shown"}},"additionalProperties":true,"description":"Specifies the configuration of a partner integration"},"default":null,"description":"Specifies the configuration of a partner integration","scope":"window","order":40},"gitlens.liveshare.enabled":{"type":"boolean","default":true,"description":"Specifies whether to enable integration with Visual Studio Live Share","scope":"window","order":50},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window","order":51}}},{"id":"terminal","title":"Terminal","order":900,"properties":{"gitlens.terminalLinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more","scope":"window","order":10},"gitlens.terminalLinks.showDetailsView":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Details_ view when clicking on a commit link in the integrated terminal","scope":"window","order":20},"gitlens.terminal.overrideGitEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use VS Code as Git's `core.editor` for Gitlens terminal commands","scope":"window","order":100}}},{"id":"ai","title":"AI (ᴘʀᴇᴠɪᴇᴡ)","order":1000,"tags":["preview"],"properties":{"gitlens.ai.model":{"type":["string","null"],"default":null,"pattern":"^((anthropic|github|google|huggingface|openai|xai):([\\w.-]+)|vscode)$","markdownDescription":"Specifies the AI model to use for GitLens' AI features. Should be formatted as `provider:model` (e.g. `openai:gpt-4o` or `anthropic:claude-3-5-sonnet-latest`), or `vscode` for models provided by the VS Code extension API (e.g. Copilot)","scope":"window","order":10,"tags":["preview"]},"gitlens.ai.vscode.model":{"type":["string","null"],"default":null,"pattern":"^(.*):(.*)$","markdownDescription":"Specifies the VS Code provided model to use for GitLens' AI features, formatted as `vendor:family`","scope":"window","order":20,"tags":["preview"]},"gitlens.ai.openai.url":{"type":["string","null"],"default":null,"markdownDescription":"Specifies a custom URL to use for access to an OpenAI model via Azure. Azure URLs should be in the following format: https://{your-resource-name}.openai.azure.com/openai/deployments/{deployment-id}/chat/completions?api-version={api-version}","scope":"window","order":30,"tags":["preview"]},"gitlens.ai.explainChanges.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a summary of changes","scope":"window","order":100,"tags":["preview"]},"gitlens.ai.generateCommitMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a commit message","scope":"window","order":200,"tags":["preview"]},"gitlens.ai.generateCommitMessage.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens' AI-powered, on-demand commit message generation","scope":"window","order":210,"tags":["preview"]},"gitlens.ai.generateCloudPatchMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a cloud patch title and description","scope":"window","order":300,"tags":["preview"]},"gitlens.ai.generateCodeSuggestMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a code suggest title and description","scope":"window","order":400,"tags":["preview"]}}},{"id":"date-times","title":"Date & Times","order":1100,"properties":{"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window","order":10},"gitlens.defaultDateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":20},"gitlens.defaultDateLocale":{"type":["string","null"],"default":null,"markdownDescription":"Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, `ja-JP` = Japanese, etc.","scope":"window","order":21},"gitlens.defaultDateShortFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":22},"gitlens.defaultTimeFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":30},"gitlens.defaultDateSource":{"type":"string","default":"authored","enum":["authored","committed"],"enumDescriptions":["Uses the date when the changes were authored (i.e. originally written)","Uses the date when the changes were committed"],"markdownDescription":"Specifies whether commit dates should use the authored or committed date","scope":"window","order":40}}},{"id":"sorting","title":"Sorting","order":1200,"properties":{"gitlens.sortRepositoriesBy":{"type":"string","default":"discovered","enum":["discovered","lastFetched:desc","lastFetched:asc","name:asc","name:desc"],"enumDescriptions":["Sorts repositories by discovery or workspace order","Sorts repositories by last fetched date in descending order","Sorts repositories by last fetched date in ascending order","Sorts repositories by name in ascending order","Sorts repositories by name in descending order"],"markdownDescription":"Specifies how repositories are sorted in quick pick menus and views","scope":"window","order":10},"gitlens.sortBranchesBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts branches by the most recent commit date in descending order","Sorts branches by the most recent commit date in ascending order","Sorts branches by name in ascending order","Sorts branches by name in descending order"],"markdownDescription":"Specifies how branches are sorted in quick pick menus and views","scope":"window","order":20},"gitlens.sortTagsBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts tags by date in descending order","Sorts tags by date in ascending order","Sorts tags by name in ascending order","Sorts tags by name in descending order"],"markdownDescription":"Specifies how tags are sorted in quick pick menus and views","scope":"window","order":30},"gitlens.sortContributorsBy":{"type":"string","default":"count:desc","enum":["count:desc","count:asc","date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts contributors by commit count in descending order","Sorts contributors by commit count in ascending order","Sorts contributors by the most recent commit date in descending order","Sorts contributors by the most recent commit date in ascending order","Sorts contributors by name in ascending order","Sorts contributors by name in descending order"],"markdownDescription":"Specifies how contributors are sorted in quick pick menus and views","scope":"window","order":40}}},{"id":"menus-toolbars","title":"Menus & Toolbars","order":1300,"properties":{"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorGutter":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"ghpr":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"worktree":{"type":"boolean"}}}]},"scm":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"graph":{"type":"boolean"}}}]},"scmRepositoryInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"graph":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmRepository":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"authors":{"type":"boolean"},"generateCommitMessage":{"type":"boolean"},"graph":{"type":"boolean"},"patch":{"type":"boolean"}}}]},"scmGroupInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"patch":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmItemInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"},"stash":{"type":"boolean"}}}]}},"additionalProperties":false}],"default":{"editor":{"blame":true,"clipboard":true,"compare":true,"history":true,"remote":true},"editorGroup":{"blame":true,"compare":true},"editorGutter":{"compare":true,"remote":true,"share":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"ghpr":{"worktree":true},"scm":{"graph":true},"scmRepositoryInline":{"graph":true,"stash":false},"scmRepository":{"authors":true,"generateCommitMessage":true,"patch":true,"graph":false},"scmGroupInline":{"stash":true},"scmGroup":{"compare":true,"openClose":true,"patch":true,"stash":true},"scmItemInline":{"stash":false},"scmItem":{"clipboard":true,"compare":true,"history":true,"patch":true,"remote":true,"share":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window","order":10}}},{"id":"keyboard","title":"Keyboard Shortcuts","order":1400,"properties":{"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Shift+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window","order":10}}},{"id":"modes","title":"Modes","order":1500,"properties":{"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window","order":10},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window","order":11},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window","order":20},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","changes","heatmap"],"enumDescriptions":["Shows the file blame annotations","Shows the file changes annotations","Shows the file heatmap annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window","order":30}}},{"id":"gitkraken","title":"GitKraken","order":9000,"properties":{"gitlens.gitKraken.activeOrganizationId":{"type":"string","markdownDescription":"Specifies the ID of the user's active GitKraken organization in GitLens","scope":"window","order":1}}},{"id":"advanced","title":"Advanced","order":10000,"properties":{"gitlens.detectNestedRepositories":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to attempt to detect nested repositories when opening files","scope":"resource","order":0},"gitlens.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow GitLens to send product usage telemetry.\n\n_**Note:** For GitLens to send any telemetry BOTH this setting and VS Code telemetry must be enabled. If either one is disabled no telemetry will be sent._","scope":"window","order":1},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressCreatePullRequestPrompt":false,"suppressDebugLoggingWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitMissingWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressRebaseSwitchToTextWarning":false,"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":false,"suppressIntegrationRequestFailed500Warning":false,"suppressIntegrationRequestTimedOutWarning":false,"suppressBlameInvalidIgnoreRevsFileWarning":false,"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false,"description":"Commit Has No Previous Commit Warning"},"suppressCommitNotFoundWarning":{"type":"boolean","default":false,"description":"Commit Not Found Warning"},"suppressCreatePullRequestPrompt":{"type":"boolean","default":false,"description":"Create Pull Request Prompt"},"suppressDebugLoggingWarning":{"type":"boolean","default":false,"description":"Debug Logging Warning"},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false,"description":"File Not Under Source Control Warning"},"suppressGitDisabledWarning":{"type":"boolean","default":false,"description":"Git Disabled Warning"},"suppressGitMissingWarning":{"type":"boolean","default":false,"description":"Git Missing Warning"},"suppressGitVersionWarning":{"type":"boolean","default":false,"description":"Git Version Warning"},"suppressLineUncommittedWarning":{"type":"boolean","default":false,"description":"Line Uncommitted Warning"},"suppressNoRepositoryWarning":{"type":"boolean","default":false,"description":"No Repository Warning"},"suppressRebaseSwitchToTextWarning":{"type":"boolean","default":false,"description":"Rebase Switch To Text Warning"},"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":{"type":"boolean","default":false,"description":"Integration Disconnected; Too Many Failed Requests Warning"},"suppressIntegrationRequestFailed500Warning":{"type":"boolean","default":false,"description":"Integration Request Failed (500 status code) Warning"},"suppressIntegrationRequestTimedOutWarning":{"type":"boolean","default":false,"description":"Integration Request Timed Out Warning"},"suppressBlameInvalidIgnoreRevsFileWarning":{"type":"boolean","default":false,"description":"Invalid Blame IgnoreRevs File Warning"},"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":{"type":"boolean","default":false,"description":"Invalid Revision in Blame IgnoreRevs File Warning"}},"additionalProperties":false,"markdownDescription":"Specifies which messages should be suppressed","scope":"window","order":5},"gitlens.advanced.repositorySearchDepth":{"type":["number","null"],"default":null,"markdownDescription":"Specifies how many folders deep to search for repositories. Defaults to `#git.repositoryScanMaxDepth#`","scope":"resource","order":10},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":7,"markdownDescription":"Specifies the length of abbreviated commit SHAs","scope":"window","order":20},"gitlens.advanced.abbreviateShaOnCopy":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `#gitlens.advanced.abbreviatedShaLength#`.","scope":"window","order":21},"gitlens.advanced.commitOrdering":{"type":["string","null"],"default":null,"enum":[null,"date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order","Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order","scope":"window","order":30},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource","order":40},"gitlens.advanced.blame.customArguments":{"type":["array","null"],"default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource","order":41},"gitlens.advanced.similarityThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename","scope":"window","order":50},"gitlens.advanced.externalDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":60},"gitlens.advanced.externalDirectoryDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":61},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":70},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window","order":80},"gitlens.advanced.maxSearchItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a search. Use 0 to specify no maximum","scope":"window","order":81},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window","order":90},"gitlens.advanced.caching.gitPath":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to cache (per-workspace) the path to the Git executable to use for GitLens","scope":"window","order":91},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window","order":100},"gitlens.deepLinks.schemeOverride":{"type":["boolean","string"],"default":false,"markdownDescription":"Specifies whether to override the default deep link scheme (vscode://) with the environment value or a specified value","scope":"window","order":110},"gitlens.advanced.useSymmetricDifferenceNotation":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDescription":"Deprecated. This setting is no longer used"}}},{"id":"general","title":"General","order":0,"properties":{"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the What's New notification after upgrading to new feature releases","scope":"window","order":20},"gitlens.outputLevel":{"type":"string","default":"warn","enum":["off","error","warn","info","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs errors and warnings","Logs errors, warnings, and messages","Logs verbose errors, warnings, and messages. Best for issue reporting."],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window","order":30},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window","order":40},"gitlens.proxy":{"type":["object","null"],"default":null,"items":{"type":"object","required":["url","strictSSL"],"properties":{"url":{"type":["string","null"],"default":null,"description":"Specifies the URL of the proxy server to use"},"strictSSL":{"type":"boolean","description":"Specifies whether the proxy server certificate should be verified against the list of supplied CAs","default":true}},"additionalProperties":false},"uniqueItems":true,"description":"Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings","scope":"window","order":55},"gitlens.plusFeatures.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to hide or show features that require a trial or GitLens Pro and are not accessible given the opened repositories and current trial or plan","scope":"window","order":60},"gitlens.virtualRepositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable virtual repositories support","scope":"window","order":70},"gitlens.insiders":{"deprecationMessage":"Deprecated. Use the pre-release edition of GitLens instead","markdownDeprecationMessage":"Deprecated. Use the pre-release of GitLens instead"}}}],"configurationDefaults":{"[ansible][azure-pipelines][css][dockerfile][dockercompose][html][json][jsonc][less][postcss][scss][stylus][vue][yaml]":{"gitlens.codeLens.scopes":["document"]},"[python]":{"gitlens.codeLens.symbolScopes":["!Module"]}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the file blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the file blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the file blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the inline blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the inline blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the scroll bar color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}},{"id":"gitlens.openAutolinkedIssueIconColor","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"},"description":"Specifies the icon color of open issues in the GitLens views"},{"id":"gitlens.closedAutolinkedIssueIconColor","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"},"description":"Specifies the icon color of closed issues in the GitLens views"},{"id":"gitlens.closedPullRequestIconColor","description":"Specifies the icon color of closed pull requests in the GitLens views","defaults":{"dark":"#f85149","light":"#cf222e","highContrast":"#ff544b"}},{"id":"gitlens.openPullRequestIconColor","description":"Specifies the icon color of open pull requests in the GitLens views","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"}},{"id":"gitlens.mergedPullRequestIconColor","description":"Specifies the icon color of merged pull requests in the GitLens views","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"}},{"id":"gitlens.unpublishedChangesIconColor","description":"Specifies the icon color of unpublished changes in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpublishedCommitIconColor","description":"Specifies the icon color of unpublished commits in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpulledChangesIconColor","description":"Specifies the icon color of unpulled changes in the GitLens views","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.addedForegroundColor","description":"Specifies the decoration foreground color of added files","defaults":{"light":"gitDecoration.addedResourceForeground","dark":"gitDecoration.addedResourceForeground","highContrast":"gitDecoration.addedResourceForeground"}},{"id":"gitlens.decorations.copiedForegroundColor","description":"Specifies the decoration foreground color of copied files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.deletedForegroundColor","description":"Specifies the decoration foreground color of deleted files","defaults":{"light":"gitDecoration.deletedResourceForeground","dark":"gitDecoration.deletedResourceForeground","highContrast":"gitDecoration.deletedResourceForeground"}},{"id":"gitlens.decorations.ignoredForegroundColor","description":"Specifies the decoration foreground color of ignored files","defaults":{"light":"gitDecoration.ignoredResourceForeground","dark":"gitDecoration.ignoredResourceForeground","highContrast":"gitDecoration.ignoredResourceForeground"}},{"id":"gitlens.decorations.modifiedForegroundColor","description":"Specifies the decoration foreground color of modified files","defaults":{"light":"gitDecoration.modifiedResourceForeground","dark":"gitDecoration.modifiedResourceForeground","highContrast":"gitDecoration.modifiedResourceForeground"}},{"id":"gitlens.decorations.untrackedForegroundColor","description":"Specifies the decoration foreground color of untracked files","defaults":{"light":"gitDecoration.untrackedResourceForeground","dark":"gitDecoration.untrackedResourceForeground","highContrast":"gitDecoration.untrackedResourceForeground"}},{"id":"gitlens.decorations.renamedForegroundColor","description":"Specifies the decoration foreground color of renamed files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.branchAheadForegroundColor","description":"Specifies the decoration foreground color of branches that are ahead of their upstream","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.branchBehindForegroundColor","description":"Specifies the decoration foreground color of branches that are behind their upstream","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.branchDivergedForegroundColor","description":"Specifies the decoration foreground color of branches that are both ahead and behind their upstream","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.branchUpToDateForegroundColor","description":"Specifies the decoration foreground color of branches that are up to date with their upstream","defaults":{"dark":"sideBar.foreground","light":"sideBar.foreground","highContrast":"sideBar.foreground"}},{"id":"gitlens.decorations.branchUnpublishedForegroundColor","description":"Specifies the decoration foreground color of branches that are not yet published to an upstream","defaults":{"dark":"sideBar.foreground","light":"sideBar.foreground","highContrast":"sideBar.foreground"}},{"id":"gitlens.decorations.branchMissingUpstreamForegroundColor","description":"Specifies the decoration foreground color of branches that have a missing upstream","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingConflictForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation with conflicts","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.workspaceRepoMissingForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are missing a local path","defaults":{"dark":"#909090","light":"#949494","highContrast":"#d3d3d3"}},{"id":"gitlens.decorations.workspaceCurrentForegroundColor","description":"Specifies the decoration foreground color of workspaces which are currently open as a Code Workspace file","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.workspaceRepoOpenForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are open in the current workspace","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.worktreeHasUncommittedChangesForegroundColor","description":"Specifies the decoration foreground color for worktrees that have uncommitted changes","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D"}},{"id":"gitlens.decorations.worktreeMissingForegroundColor","description":"Specifies the decoration foreground color for worktrees cannot be found on disk","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.graphLane1Color","description":"Specifies the color for the first commit lane of the _Commit Graph_ visualization","defaults":{"light":"#15a0bf","dark":"#15a0bf","highContrast":"#15a0bf"}},{"id":"gitlens.graphLane2Color","description":"Specifies the color for the second commit lane of the _Commit Graph_ visualization","defaults":{"light":"#0669f7","dark":"#0669f7","highContrast":"#0669f7"}},{"id":"gitlens.graphLane3Color","description":"Specifies the color for the third commit lane of the _Commit Graph_ visualization","defaults":{"light":"#8e00c2","dark":"#8e00c2","highContrast":"#8e00c2"}},{"id":"gitlens.graphLane4Color","description":"Specifies the color for the fourth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#c517b6","dark":"#c517b6","highContrast":"#c517b6"}},{"id":"gitlens.graphLane5Color","description":"Specifies the color for the fifth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#d90171","dark":"#d90171","highContrast":"#d90171"}},{"id":"gitlens.graphLane6Color","description":"Specifies the color for the sixth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#cd0101","dark":"#cd0101","highContrast":"#cd0101"}},{"id":"gitlens.graphLane7Color","description":"Specifies the color for the seventh commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f25d2e","dark":"#f25d2e","highContrast":"#f25d2e"}},{"id":"gitlens.graphLane8Color","description":"Specifies the color for the eighth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f2ca33","dark":"#f2ca33","highContrast":"#f2ca33"}},{"id":"gitlens.graphLane9Color","description":"Specifies the color for the ninth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#7bd938","dark":"#7bd938","highContrast":"#7bd938"}},{"id":"gitlens.graphLane10Color","description":"Specifies the color for the tenth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#2ece9d","dark":"#2ece9d","highContrast":"#2ece9d"}},{"id":"gitlens.graphChangesColumnAddedColor","description":"Specifies the color for denoting lines added in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#2da44e","highContrastLight":"#2da44e","dark":"#347d39","highContrast":"#347d39"}},{"id":"gitlens.graphChangesColumnDeletedColor","description":"Specifies the color for denoting lines deleted in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#cf222e","highContrastLight":"#cf222e","dark":"#c93c37","highContrast":"#c93c37"}},{"id":"gitlens.graphMinimapMarkerHeadColor","description":"Specifies the color marking HEAD on the minimap of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphScrollMarkerHeadColor","description":"Specifies the color marking HEAD on the scrollbar of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphMinimapMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the minimap of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphScrollMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the scrollbar of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphMinimapMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the minimap of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphScrollMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the scrollbar of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphMinimapMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the minimap of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphScrollMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphMinimapMarkerPullRequestsColor","description":"Specifies the color marking pull requests on the minimap of the _Commit Graph_","defaults":{"light":"#ff8f18","highContrastLight":"#ff8f18","dark":"#c76801","highContrast":"#c76801"}},{"id":"gitlens.graphScrollMarkerPullRequestsColor","description":"Specifies the color marking pull requests on the scrollbar of the _Commit Graph_","defaults":{"light":"#ff8f18","highContrastLight":"#ff8f18","dark":"#c76801","highContrast":"#c76801"}},{"id":"gitlens.graphMinimapMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the minimap of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphScrollMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphMinimapMarkerStashesColor","description":"Specifies the color marking stashes on the minimap of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphScrollMarkerStashesColor","description":"Specifies the color marking stashes on the scrollbar of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphMinimapMarkerTagsColor","description":"Specifies the color marking tags on the minimap of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.graphScrollMarkerTagsColor","description":"Specifies the color marking tags on the scrollbar of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.launchpadIndicatorMergeableColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorMergeableHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorBlockedColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorBlockedHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorAttentionColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}},{"id":"gitlens.launchpadIndicatorAttentionHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}}],"commands":[{"command":"gitlens.addAuthors","title":"Add Co-authors...","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.annotations.nextChange","title":"Next Change","icon":"$(arrow-down)"},{"command":"gitlens.annotations.previousChange","title":"Previous Change","icon":"$(arrow-up)"},{"command":"gitlens.applyPatchFromClipboard","title":"Apply Copied Changes (Patch)","category":"GitLens"},{"command":"gitlens.associateIssueWithBranch","title":"Associate Issue with Branch...","category":"GitLens"},{"command":"gitlens.browseRepoAtRevision","title":"Browse Repository from Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","title":"Browse Repository from Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoBeforeRevision","title":"Browse Repository from Before Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","title":"Browse Repository from Before Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.compareHeadWith","title":"Compare HEAD with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareWith","title":"Compare References...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareWorkingWith","title":"Compare Working Tree with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.connectRemoteProvider","title":"Connect Remote Integration","category":"GitLens","icon":"$(plug)"},{"command":"gitlens.copyCurrentBranch","title":"Copy Current Branch Name","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToBranch","title":"Copy Link to Branch","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToCommit","title":"Copy Link to Commit","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToComparison","title":"Copy Link to Comparison","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFile","title":"Copy Link to File","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFileAtRevision","title":"Copy Link to File at Revision...","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToLines","title":"Copy Link to Code","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToRepo","title":"Copy Link to Repository","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToTag","title":"Copy Link to Tag","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToWorkspace","title":"Copy Link to Workspace","icon":"$(copy)"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Message","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyPatchToClipboard","title":"Copy Changes (Patch)","category":"GitLens"},{"command":"gitlens.copyRelativePathToClipboard","title":"Copy Relative Path","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteBranchesUrl","title":"Copy Remote Branches URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteBranchUrl","title":"Copy Remote Branch URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteCommitUrl","title":"Copy Remote Commit URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteComparisonUrl","title":"Copy Remote Comparison URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlFrom","title":"Copy Remote File URL From...","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote File URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","title":"Copy Remote File URL","icon":"$(copy)"},{"command":"gitlens.copyRemotePullRequestUrl","title":"Copy Pull Request URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteRepositoryUrl","title":"Copy Remote Repository URL","icon":"$(copy)"},{"command":"gitlens.copyShaToClipboard","title":"Copy SHA","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree...","category":"GitLens"},{"command":"gitlens.createCloudPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.createPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.createPullRequestOnRemote","title":"Create Pull Request on Remote","category":"GitLens","icon":"$(git-pull-request-create)"},{"command":"gitlens.diffDirectory","title":"Open Directory Compare (difftool) with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Open Directory Compare (difftool)","category":"GitLens"},{"command":"gitlens.diffFolderWithRevision","title":"Open Folder Changes with Revision...","category":"GitLens"},{"command":"gitlens.diffFolderWithRevisionFrom","title":"Open Folder Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithNextInDiffLeft","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithNextInDiffRight","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffLeft","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffRight","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":"$(gitlens-prev-commit-menu)"},{"command":"gitlens.diffWithRevisionFrom","title":"Open Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffLeft","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffRight","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.disableDebugLogging","title":"Disable Debug Logging","category":"GitLens"},{"command":"gitlens.disableRebaseEditor","title":"Disable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.disconnectRemoteProvider","title":"Disconnect Remote Integration","category":"GitLens","icon":"$(gitlens-unplug)"},{"command":"gitlens.enableDebugLogging","title":"Enable Debug Logging","category":"GitLens"},{"command":"gitlens.enableRebaseEditor","title":"Enable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.externalDiff","title":"Open Changes (difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (difftool)","category":"GitLens"},{"command":"gitlens.fetchRepositories","title":"Fetch","category":"GitLens","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.generateCommitMessage","title":"Generate Commit Message...","category":"GitLens"},{"command":"gitlens.getStarted","title":"Get Started","category":"GitLens"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","title":"Checkout Pull Request in Worktree (GitLens)...","enablement":"!operationInProgress"},{"command":"gitlens.gitCommands","title":"Git Command Palette","category":"GitLens"},{"command":"gitlens.gitCommands.branch","title":"Git Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.create","title":"Git Create Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.delete","title":"Git Delete Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.prune","title":"Git Prune Branches...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.rename","title":"Git Rename Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.checkout","title":"Git Checkout...","category":"GitLens"},{"command":"gitlens.gitCommands.cherryPick","title":"Git Cherry Pick...","category":"GitLens"},{"command":"gitlens.gitCommands.history","title":"Git History (log)...","category":"GitLens"},{"command":"gitlens.gitCommands.merge","title":"Git Merge...","category":"GitLens"},{"command":"gitlens.gitCommands.rebase","title":"Git Rebase...","category":"GitLens"},{"command":"gitlens.gitCommands.remote","title":"Git Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.add","title":"Git Add Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.prune","title":"Git Prune Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.remove","title":"Git Remove Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.reset","title":"Git Reset...","category":"GitLens"},{"command":"gitlens.gitCommands.revert","title":"Git Revert...","category":"GitLens"},{"command":"gitlens.gitCommands.show","title":"Git Show...","category":"GitLens"},{"command":"gitlens.gitCommands.stash","title":"Git Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.drop","title":"Git Drop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.list","title":"Git Stash List...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.pop","title":"Git Pop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.push","title":"Git Push Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.rename","title":"Git Rename Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.status","title":"Git Status...","category":"GitLens"},{"command":"gitlens.gitCommands.switch","title":"Git Switch to...","category":"GitLens"},{"command":"gitlens.gitCommands.tag","title":"Git Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.create","title":"Git Create Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.delete","title":"Git Delete Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree","title":"Git Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.create","title":"Git Create Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.delete","title":"Git Delete Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.open","title":"Git Open Worktree...","category":"GitLens"},{"command":"gitlens.gk.switchOrganization","title":"Switch Organization...","category":"GitLens"},{"command":"gitlens.graph.addAuthor","title":"Add as Co-author","icon":"$(person-add)"},{"command":"gitlens.graph.associateIssueWithBranch","title":"Associate Issue with Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.cherryPick","title":"Cherry Pick Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.columnAuthorOff","title":"Hide Author Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnAuthorOn","title":"Show Author Column"},{"command":"gitlens.graph.columnChangesOff","title":"Hide Changes Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnChangesOn","title":"Show Changes Column"},{"command":"gitlens.graph.columnDateTimeOff","title":"Hide Date Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnDateTimeOn","title":"Show Date Column"},{"command":"gitlens.graph.columnGraphCompact","title":"Use Compact Graph Column"},{"command":"gitlens.graph.columnGraphDefault","title":"Use Expanded Graph Column"},{"command":"gitlens.graph.columnGraphOff","title":"Hide Graph Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnGraphOn","title":"Show Graph Column"},{"command":"gitlens.graph.columnMessageOff","title":"Hide Commit Message Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnMessageOn","title":"Show Commit Message Column"},{"command":"gitlens.graph.columnRefOff","title":"Hide Branch / Tag Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnRefOn","title":"Show Branch / Tag Column"},{"command":"gitlens.graph.columnShaOff","title":"Hide SHA Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnShaOn","title":"Show SHA Column"},{"command":"gitlens.graph.commitViaSCM","title":"Commit via Source Control..."},{"command":"gitlens.graph.compareAncestryWithWorking","title":"Compare Working Tree to Common Base"},{"command":"gitlens.graph.compareBranchWithHead","title":"Compare with HEAD","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareSelectedCommits.multi","title":"Compare Selected Commits","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareWithHead","title":"Compare to/from HEAD","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareWithMergeBase","title":"Compare with Common Base"},{"command":"gitlens.graph.compareWithUpstream","title":"Compare with Upstream"},{"command":"gitlens.graph.compareWithWorking","title":"Compare Working Tree to Here","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.graph.copy","title":"Copy","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToBranch","title":"Copy Link to Branch","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToCommit","title":"Copy Link to Commit","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToRepo","title":"Copy Link to Repository","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToTag","title":"Copy Link to Tag","icon":"$(copy)"},{"command":"gitlens.graph.copyMessage","title":"Copy Message","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteBranchUrl","title":"Copy Remote Branch URL","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl","title":"Copy Remote Commit URL","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","icon":"$(copy)"},{"command":"gitlens.graph.copySha","title":"Copy SHA","icon":"$(copy)"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree..."},{"command":"gitlens.graph.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createCloudPatch","title":"Create Patch..."},{"command":"gitlens.graph.createPatch","title":"Create Patch..."},{"command":"gitlens.graph.createPullRequest","title":"Create Pull Request...","icon":"$(git-pull-request-create)"},{"command":"gitlens.graph.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteBranch","title":"Delete Branch...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteTag","title":"Delete Tag...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.fetch","title":"Fetch","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.generateCommitMessage","title":"Generate Commit Message..."},{"command":"gitlens.graph.hideLocalBranch","title":"Hide Local Branch"},{"command":"gitlens.graph.hideRefGroup","title":"Hide"},{"command":"gitlens.graph.hideRemote","title":"Hide Remote"},{"command":"gitlens.graph.hideRemoteBranch","title":"Hide Remote Branch"},{"command":"gitlens.graph.hideTag","title":"Hide Tag"},{"command":"gitlens.graph.mergeBranchInto","title":"Merge Branch into Current Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.openBranchOnRemote","title":"Open Branch on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","title":"Open All Changes Individually"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree Individually"},{"command":"gitlens.graph.openChangedFileRevisions","title":"Open Files at Revision"},{"command":"gitlens.graph.openChangedFiles","title":"Open Files"},{"command":"gitlens.graph.openCommitOnRemote","title":"Open Commit on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openCommitOnRemote.multi","title":"Open Commits on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openInWorktree","title":"Open in Worktree","icon":"$(window)"},{"command":"gitlens.graph.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files"},{"command":"gitlens.graph.openPullRequest","title":"Open Pull Request","icon":"$(git-pull-request)"},{"command":"gitlens.graph.openPullRequestChanges","title":"Open Pull Request Changes","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openPullRequestComparison","title":"Compare Pull Request","icon":"$(compare-changes)"},{"command":"gitlens.graph.openPullRequestOnRemote","title":"Open Pull Request on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openWorktree","title":"Open Worktree","icon":"$(window)"},{"command":"gitlens.graph.openWorktreeInNewWindow","title":"Open Worktree in New Window","icon":"$(empty-window)"},{"command":"gitlens.graph.publishBranch","title":"Publish Branch","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.graph.pull","title":"Pull","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.graph.push","title":"Push","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.graph.pushWithForce","title":"Push (force)","icon":"$(repo-force-push)","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","enablement":"!operationInProgress"},{"command":"gitlens.graph.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.graph.renameBranch","title":"Rename Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetColumnsCompact","title":"Reset Columns to Compact Layout"},{"command":"gitlens.graph.resetColumnsDefault","title":"Reset Columns to Default Layout"},{"command":"gitlens.graph.resetCommit","title":"Reset Current Branch to Previous Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToCommit","title":"Reset Current Branch to Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToTag","title":"Reset Current Branch to Tag...","icon":"$(gitlens-reset)","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToTip","title":"Reset Current Branch to Tip...","enablement":"!operationInProgress"},{"command":"gitlens.graph.revert","title":"Revert Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","title":"Hide Local Branch Markers"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","title":"Show Local Branch Markers"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","title":"Hide Pull Request Markers"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","title":"Show Pull Request Markers"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","title":"Hide Remote Branch Markers"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","title":"Show Remote Branch Markers"},{"command":"gitlens.graph.scrollMarkerStashOff","title":"Hide Stash Markers"},{"command":"gitlens.graph.scrollMarkerStashOn","title":"Show Stash Markers"},{"command":"gitlens.graph.scrollMarkerTagOff","title":"Hide Tag Markers"},{"command":"gitlens.graph.scrollMarkerTagOn","title":"Show Tag Markers"},{"command":"gitlens.graph.shareAsCloudPatch","title":"Share as Cloud Patch..."},{"command":"gitlens.graph.showInDetailsView","title":"Inspect Details","icon":"$(eye)"},{"command":"gitlens.graph.split","title":"Split Commit Graph","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.graph.stash.apply","title":"Apply Stash...","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.delete","title":"Drop Stash...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.rename","title":"Rename Stash...","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.save","title":"Stash All Changes...","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToAnotherBranch","title":"Switch to Another Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToBranch","title":"Switch to Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToCommit","title":"Switch to Commit...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToEditorLayout","title":"Prefer Commit Graph in Editor","category":"GitLens","enablement":"config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","title":"Prefer Commit Graph in Panel","category":"GitLens","enablement":"config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.switchToTag","title":"Switch to Tag...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.undoCommit","title":"Undo Commit","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.inviteToLiveShare","title":"Invite to Live Share","icon":"$(live-share)"},{"command":"gitlens.launchpad.indicator.toggle","title":"Toggle Launchpad Indicator","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.openAssociatedPullRequestOnRemote","title":"Open Associated Pull Request","category":"GitLens","icon":"$(git-pull-request)"},{"command":"gitlens.openBlamePriorToChange","title":"Open Blame Prior to Change","category":"GitLens","icon":"$(versions)"},{"command":"gitlens.openBranchesOnRemote","title":"Open Branches on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openBranchOnRemote","title":"Open Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openCloudPatch","title":"Open Cloud Patch..."},{"command":"gitlens.openCommitOnRemote","title":"Open Commit on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openComparisonOnRemote","title":"Open Comparison on Remote","icon":"$(globe)"},{"command":"gitlens.openCurrentBranchOnRemote","title":"Open Current Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileFromRemote","title":"Open File from Remote","category":"GitLens"},{"command":"gitlens.openFileHistory","title":"Open File History","category":"GitLens"},{"command":"gitlens.openFileOnRemote","title":"Open File on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileOnRemoteFrom","title":"Open File on Remote From...","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileRevision","title":"Open File at Revision...","category":"GitLens","icon":"$(gitlens-open-revision)"},{"command":"gitlens.openFileRevisionFrom","title":"Open File at Revision from...","category":"GitLens","icon":"$(gitlens-open-revision)"},{"command":"gitlens.openFolderHistory","title":"Open Folder History"},{"command":"gitlens.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openPatch","title":"Open Patch...","category":"GitLens"},{"command":"gitlens.openPullRequestOnRemote","title":"Open Pull Request on Remote","icon":"$(globe)"},{"command":"gitlens.openRepoOnRemote","title":"Open Repository on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openRevisionFile","title":"Open File at Revision","category":"GitLens","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.openRevisionFileInDiffLeft","title":"Open File at Revision","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.openRevisionFileInDiffRight","title":"Open File at Revision","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ "},{"command":"gitlens.openWorkingFile","title":"Open File","category":"GitLens","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffLeft","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffRight","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.pastePatchFromClipboard","title":"Paste Copied Changes (Patch)","category":"GitLens"},{"command":"gitlens.plus.cloudIntegrations.connect","title":"Connect Integrations..."},{"command":"gitlens.plus.cloudIntegrations.manage","title":"Manage Integrations...","category":"GitLens"},{"command":"gitlens.plus.hide","title":"Hide Pro Features","category":"GitLens"},{"command":"gitlens.plus.login","title":"Sign In to GitKraken...","category":"GitLens"},{"command":"gitlens.plus.logout","title":"Sign Out of GitKraken","category":"GitLens"},{"command":"gitlens.plus.manage","title":"Manage Your Account...","category":"GitLens"},{"command":"gitlens.plus.reactivateProTrial","title":"Reactivate Pro Trial","category":"GitLens"},{"command":"gitlens.plus.refreshRepositoryAccess","title":"Refresh Repository Access","category":"GitLens"},{"command":"gitlens.plus.restore","title":"Restore Pro Features","category":"GitLens"},{"command":"gitlens.plus.signUp","title":"Sign Up for GitKraken...","category":"GitLens"},{"command":"gitlens.plus.simulateSubscription","title":"Simulate Subscription (Debugging)","category":"GitLens"},{"command":"gitlens.plus.startPreviewTrial","title":"Preview Pro","category":"GitLens"},{"command":"gitlens.plus.upgrade","title":"Upgrade to Pro...","category":"GitLens"},{"command":"gitlens.pullRepositories","title":"Pull","category":"GitLens","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.pushRepositories","title":"Push","category":"GitLens","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.quickOpenFileHistory","title":"Quick Open File History","category":"GitLens"},{"command":"gitlens.reset","title":"Reset Stored Data...","category":"GitLens"},{"command":"gitlens.resetAIKey","title":"Reset Stored AI Keys...","category":"GitLens"},{"command":"gitlens.resetViewsLayout","title":"Reset Views Layout","category":"GitLens"},{"command":"gitlens.revealCommitInView","title":"Reveal Commit in Side Bar","category":"GitLens"},{"command":"gitlens.scm.generateCommitMessage","title":"Generate Commit Message with GitLens..."},{"command":"gitlens.shareAsCloudPatch","title":"Share as Cloud Patch...","category":"GitLens"},{"command":"gitlens.showAccountView","title":"Show Account on Home","category":"GitLens"},{"command":"gitlens.showBranchesView","title":"Show Branches View","category":"GitLens"},{"command":"gitlens.showCommitDetailsView","title":"Show Inspect View","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Inspect Commit Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":"$(search)"},{"command":"gitlens.showCommitsInView","title":"Search for Commits within Selection","category":"GitLens"},{"command":"gitlens.showCommitsView","title":"Show Commits View","category":"GitLens"},{"command":"gitlens.showContributorsView","title":"Show Contributors View","category":"GitLens"},{"command":"gitlens.showDraftsView","title":"Show Cloud Patches View","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Open File History"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showGraph","title":"Show Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showGraphPage","title":"Show Commit Graph in Editor","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showGraphView","title":"Show Commit Graph View","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showHomeView","title":"Show Home View","category":"GitLens"},{"command":"gitlens.showInCommitGraph","title":"Open in Commit Graph","icon":"$(gitlens-graph)"},{"command":"gitlens.showInCommitGraphView","title":"Open in Commit Graph","icon":"$(gitlens-graph)"},{"command":"gitlens.showInDetailsView","title":"Inspect Details","icon":"$(eye)"},{"command":"gitlens.showInTimeline","title":"Open Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showLaunchpad","title":"Open Launchpad","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showLaunchpadView","title":"Show Launchpad View","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showLineCommitInView","title":"Inspect Line Commit Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showPatchDetailsPage","title":"Show Patch Details","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Quick Show Commit"},{"command":"gitlens.showQuickCommitFileDetails","title":"Quick Show Line Commit","category":"GitLens"},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Commit","category":"GitLens","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","title":"Show Revision Commit","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","title":"Show Revision Commit","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickStashList","title":"Show Stashes","category":"GitLens"},{"command":"gitlens.showRemotesView","title":"Show Remotes View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchAndCompareView","title":"Show Search And Compare Commits View","category":"GitLens"},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!autolinks","title":"Configure Autolinks","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!branches-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commit-graph","title":"Open Commit Graph Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commits-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!contributors-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-annotations","title":"Open File Annotation Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-history-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!line-history-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!remotes-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!repositories-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!search-compare-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!stashes-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!tags-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!views","title":"Open Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!worktrees-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showStashesView","title":"Show Stashes View","category":"GitLens"},{"command":"gitlens.showTagsView","title":"Show Tags View","category":"GitLens"},{"command":"gitlens.showTimelinePage","title":"Show Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.showTimelineView","title":"Show Visual File History View","category":"GitLens"},{"command":"gitlens.showWorkspacesView","title":"Show Cloud Workspaces View","category":"GitLens"},{"command":"gitlens.showWorktreesView","title":"Show Worktrees View","category":"GitLens"},{"command":"gitlens.startWork","title":"Start Work","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.stashApply","title":"Apply a Stash...","category":"GitLens","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.stashSave","title":"Stash All Changes...","category":"GitLens","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.stashSaveFiles","title":"Stash Changes...","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.switchAIModel","title":"Switch AI Model","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.timeline.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.timeline.split","title":"Split Visual File History","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git CodeLens","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffLeft","title":"Toggle File Blame","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffRight","title":"Toggle File Blame","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChanges","title":"Toggle File Changes","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChangesOnly","title":"Toggle File Changes","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","title":"Toggle File Heatmap","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffRight","title":"Toggle File Heatmap","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleGraph","title":"Toggle Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame","category":"GitLens"},{"command":"gitlens.toggleMaximizedGraph","title":"Toggle Maximized Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.views.addAuthor","title":"Add as Co-author","icon":"$(person-add)"},{"command":"gitlens.views.addAuthor.multi","title":"Add as Co-authors","icon":"$(person-add)"},{"command":"gitlens.views.addAuthors","title":"Add Co-authors...","icon":"$(person-add)"},{"command":"gitlens.views.addRemote","title":"Add Remote...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","enablement":"!operationInProgress"},{"command":"gitlens.views.associateIssueWithBranch","title":"Associate Issue with Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.branches.copy","title":"Copy"},{"command":"gitlens.views.branches.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.branches.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.branches.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.branches.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","title":"Hide Branch Comparisons"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","title":"Show Branch Comparisons"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","title":"Hide Remote Branches"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","title":"Show Remote Branches"},{"command":"gitlens.views.branches.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.branches.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.browseRepoAtRevision","title":"Repository from Here","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","title":"Repository from Here in New Window","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevision","title":"Repository from Before Here","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","title":"Repository from Before Here in New Window","icon":"$(folder-opened)"},{"command":"gitlens.views.cherryPick","title":"Cherry Pick Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.cherryPick.multi","title":"Cherry Pick Commits...","enablement":"!operationInProgress"},{"command":"gitlens.views.clearComparison","title":"Clear Comparison","icon":"$(close)"},{"command":"gitlens.views.clearReviewed","title":"Clear Reviewed Files"},{"command":"gitlens.views.closeRepository","title":"Close Repository"},{"command":"gitlens.views.collapseNode","title":"Collapse"},{"command":"gitlens.views.commitDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.commits.copy","title":"Copy"},{"command":"gitlens.views.commits.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.commits.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","title":"Filter Commits by Author...","icon":"$(filter)"},{"command":"gitlens.views.commits.setCommitsFilterOff","title":"Clear Filter","icon":"$(filter-filled)"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.commits.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.commits.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.commits.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.commits.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","title":"Hide Current Branch Pull Request"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","title":"Show Current Branch Pull Request"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.commits.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.commits.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Working Tree to Common Base"},{"command":"gitlens.views.compareBranchWithHead","title":"Compare with HEAD","icon":"$(compare-changes)"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected"},{"command":"gitlens.views.compareWithHead","title":"Compare to/from HEAD","icon":"$(compare-changes)"},{"command":"gitlens.views.compareWithMergeBase","title":"Compare with Common Base"},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected"},{"command":"gitlens.views.compareWithUpstream","title":"Compare with Upstream"},{"command":"gitlens.views.compareWithWorking","title":"Compare Working Tree to Here","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.contributors.copy","title":"Copy"},{"command":"gitlens.views.contributors.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.contributors.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.contributors.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","title":"View Current Branch Only"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","title":"View All Branches"},{"command":"gitlens.views.contributors.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.contributors.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.contributors.setShowStatisticsOff","title":"Hide Statistics"},{"command":"gitlens.views.contributors.setShowStatisticsOn","title":"Show Statistics"},{"command":"gitlens.views.copy","title":"Copy","icon":"$(copy)"},{"command":"gitlens.views.copyAsMarkdown","title":"Copy as Markdown","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl","title":"Copy Remote Commit URL","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","icon":"$(copy)"},{"command":"gitlens.views.copyUrl","title":"Copy URL","icon":"$(copy)"},{"command":"gitlens.views.copyUrl.multi","title":"Copy URLs","icon":"$(copy)"},{"command":"gitlens.views.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.createPullRequest","title":"Create Pull Request...","icon":"$(git-pull-request-create)"},{"command":"gitlens.views.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch","title":"Delete Branch...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch.multi","title":"Delete Branches...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag","title":"Delete Tag...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag.multi","title":"Delete Tags...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree","title":"Delete Worktree...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree.multi","title":"Delete Worktrees...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.dismissNode","title":"Dismiss","icon":"$(close)"},{"command":"gitlens.views.draft.open","title":"Open","icon":"$(eye)"},{"command":"gitlens.views.draft.openOnWeb","title":"Open on gitkraken.dev","icon":"$(globe)"},{"command":"gitlens.views.drafts.copy","title":"Copy"},{"command":"gitlens.views.drafts.create","title":"Create Cloud Patch...","icon":"$(add)"},{"command":"gitlens.views.drafts.delete","title":"Delete Cloud Patch...","icon":"$(trash)"},{"command":"gitlens.views.drafts.info","title":"Learn about Cloud Patches...","icon":"$(info)"},{"command":"gitlens.views.drafts.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.drafts.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.drafts.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.editNode","title":"Edit...","icon":"$(edit)"},{"command":"gitlens.views.expandNode","title":"Expand"},{"command":"gitlens.views.fetch","title":"Fetch","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","icon":"$(history)"},{"command":"gitlens.views.fileHistory.copy","title":"Copy"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","title":"View File History","icon":"$(list-selection)","enablement":"gitlens:views:fileHistory:editorFollowing || gitlens:views:fileHistory:cursorFollowing"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","title":"View Line History","icon":"$(file)","enablement":"gitlens:views:fileHistory:editorFollowing"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pin the Current History","icon":"$(pin)"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Unpin the Current History","icon":"$(pinned)"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","title":"View History for Current Branch Only"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","title":"View History for All Branches"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.graph.openInTab","title":"Open in Editor","icon":"$(link-external)"},{"command":"gitlens.views.graph.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.graphDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.highlightChanges","title":"Highlight All Changes Since Before this Commit"},{"command":"gitlens.views.highlightRevisionChanges","title":"Highlight Changes from this Commit"},{"command":"gitlens.views.home.disablePreview","title":"Revert to Old Home View","icon":"$(discard)"},{"command":"gitlens.views.home.discussions","title":"GitHub Discussions","icon":"$(comment-discussion)"},{"command":"gitlens.views.home.enablePreview","title":"Switch to New Home View","icon":"$(redo)"},{"command":"gitlens.views.home.help","title":"Help Center","icon":"$(question)"},{"command":"gitlens.views.home.info","title":"Learn about Home View","icon":"$(question)"},{"command":"gitlens.views.home.issues","title":"GitHub Issues","icon":"$(feedback)"},{"command":"gitlens.views.home.previewFeedback","title":"New Home View Feedback","icon":"$(feedback)"},{"command":"gitlens.views.home.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.home.whatsNew","title":"What's New (Release Notes)","icon":"$(megaphone)"},{"command":"gitlens.views.launchpad.copy","title":"Copy"},{"command":"gitlens.views.launchpad.info","title":"Learn about Launchpad...","icon":"$(info)"},{"command":"gitlens.views.launchpad.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.launchpad.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","icon":"$(history)"},{"command":"gitlens.views.lineHistory.copy","title":"Copy"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pin the Current History","icon":"$(pin)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Unpin the Current History","icon":"$(pinned)"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.loadAllChildren","title":"Load All","icon":"$(gitlens-expand)"},{"command":"gitlens.views.loadMoreChildren","title":"Load More"},{"command":"gitlens.views.mergeBranchInto","title":"Merge Branch into Current Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.openBranchOnRemote","title":"Open Branch on Remote","icon":"$(globe)"},{"command":"gitlens.views.openBranchOnRemote.multi","title":"Open Branches on Remote","icon":"$(globe)"},{"command":"gitlens.views.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsIndividually","title":"Open All Changes, Individually"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree, Individually"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Files at Revision"},{"command":"gitlens.views.openChangedFiles","title":"Open Files"},{"command":"gitlens.views.openChanges","title":"Open Changes","icon":"$(compare-changes)"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.openCommitOnRemote","title":"Open Commit on Remote","icon":"$(globe)"},{"command":"gitlens.views.openCommitOnRemote.multi","title":"Open Commits on Remote","icon":"$(globe)"},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Comparison"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Directory Compare Working Tree to Here"},{"command":"gitlens.views.openFile","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.views.openFileRevision","title":"Open File at Revision","icon":"$(gitlens-open-revision)"},{"command":"gitlens.views.openInIntegratedTerminal","title":"Open in Integrated Terminal"},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal"},{"command":"gitlens.views.openInWorktree","title":"Open in Worktree","icon":"$(empty-window)"},{"command":"gitlens.views.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files"},{"command":"gitlens.views.openPreviousChangesWithWorking","title":"Open Previous Changes with Working File"},{"command":"gitlens.views.openPullRequest","title":"Open Pull Request","icon":"$(git-pull-request)"},{"command":"gitlens.views.openPullRequestChanges","title":"Open Pull Request Changes","icon":"$(diff-multiple)"},{"command":"gitlens.views.openPullRequestComparison","title":"Compare Pull Request","icon":"$(compare-changes)"},{"command":"gitlens.views.openUrl","title":"Open URL","icon":"$(globe)"},{"command":"gitlens.views.openUrl.multi","title":"Open URLs","icon":"$(globe)"},{"command":"gitlens.views.openWorktree","title":"Open Worktree","icon":"$(window)"},{"command":"gitlens.views.openWorktreeInNewWindow","title":"Open Worktree in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","title":"Open Worktrees in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.patchDetails.close","title":"Close Patch","icon":"$(close)"},{"command":"gitlens.views.patchDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.pruneRemote","title":"Prune","enablement":"!operationInProgress"},{"command":"gitlens.views.publishBranch","title":"Publish Branch","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.publishRepository","title":"Publish Repository","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.pull","title":"Pull","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.views.pullRequest.close","title":"Close","icon":"$(close)"},{"command":"gitlens.views.pullRequest.copy","title":"Copy"},{"command":"gitlens.views.pullRequest.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.push","title":"Push","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.pushToCommit","title":"Push to Commit...","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.pushWithForce","title":"Push (force)","icon":"$(repo-force-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","enablement":"!operationInProgress"},{"command":"gitlens.views.refreshNode","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.remotes.copy","title":"Copy"},{"command":"gitlens.views.remotes.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.remotes.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.remotes.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.removeRemote","title":"Remove Remote...","enablement":"!operationInProgress"},{"command":"gitlens.views.renameBranch","title":"Rename Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.repositories.copy","title":"Copy"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.repositories.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","title":"View Branches as List","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","title":"View Branches as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","title":"Hide Branch Comparisons"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","title":"Show Branch Comparisons"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.repositories.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.repositories.setShowBranchesOff","title":"Hide Branches"},{"command":"gitlens.views.repositories.setShowBranchesOn","title":"Show Branches"},{"command":"gitlens.views.repositories.setShowCommitsOff","title":"Hide Commits"},{"command":"gitlens.views.repositories.setShowCommitsOn","title":"Show Commits"},{"command":"gitlens.views.repositories.setShowContributorsOff","title":"Hide Contributors"},{"command":"gitlens.views.repositories.setShowContributorsOn","title":"Show Contributors"},{"command":"gitlens.views.repositories.setShowRemotesOff","title":"Hide Remotes"},{"command":"gitlens.views.repositories.setShowRemotesOn","title":"Show Remotes"},{"command":"gitlens.views.repositories.setShowSectionOff","title":"Hide"},{"command":"gitlens.views.repositories.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.repositories.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.repositories.setShowTagsOff","title":"Hide Tags"},{"command":"gitlens.views.repositories.setShowTagsOn","title":"Show Tags"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","title":"Hide Current Branch Status"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","title":"Show Current Branch Status"},{"command":"gitlens.views.repositories.setShowWorktreesOff","title":"Hide Worktrees"},{"command":"gitlens.views.repositories.setShowWorktreesOn","title":"Show Worktrees"},{"command":"gitlens.views.resetCommit","title":"Reset Current Branch to Previous Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToCommit","title":"Reset Current Branch to Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToTip","title":"Reset Current Branch to Tip...","enablement":"!operationInProgress"},{"command":"gitlens.views.restore","title":"Restore (Checkout)","icon":"$(gitlens-switch)"},{"command":"gitlens.views.revealRepositoryInExplorer","title":"Reveal in File Explorer"},{"command":"gitlens.views.revealWorktreeInExplorer","title":"Reveal in File Explorer"},{"command":"gitlens.views.revert","title":"Revert Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.scm.grouped.branches","title":"Branches","icon":"$(gitlens-branches-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.branches.detach","title":"Detach Branches View","icon":"$(gitlens-branches-view)"},{"command":"gitlens.views.scm.grouped.branches.regroup","title":"Regroup Branches View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.commits","title":"Commits","icon":"$(gitlens-commits-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.commits.detach","title":"Detach Commits View","icon":"$(gitlens-commits-view)"},{"command":"gitlens.views.scm.grouped.commits.regroup","title":"Regroup Commits View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.contributors","title":"Contributors","icon":"$(gitlens-contributors-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.contributors.detach","title":"Detach Contributors View","icon":"$(gitlens-contributors-view)"},{"command":"gitlens.views.scm.grouped.contributors.regroup","title":"Regroup Contributors View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.detachAll","title":"Detach All Views","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad","title":"Launchpad","icon":"$(gitlens-launchpad-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad.detach","title":"Detach Launchpad View","icon":"$(gitlens-launchpad-view)"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","title":"Regroup Launchpad View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.refresh","title":"Refresh","icon":"$(refresh)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.regroupAll","title":"Regroup All Views","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes","title":"Remotes","icon":"$(gitlens-remotes-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes.detach","title":"Detach Remotes View","icon":"$(gitlens-remotes-view)"},{"command":"gitlens.views.scm.grouped.remotes.regroup","title":"Regroup Remotes View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.repositories","title":"Repositories","icon":"$(gitlens-repositories-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.repositories.detach","title":"Detach Repositories View","icon":"$(gitlens-repositories-view)"},{"command":"gitlens.views.scm.grouped.repositories.regroup","title":"Regroup Repositories View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.searchAndCompare","title":"Search & Compare","icon":"$(gitlens-search-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","title":"Detach Search & Compare View","icon":"$(gitlens-search-view)"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","title":"Regroup Search & Compare View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.stashes","title":"Stashes","icon":"$(gitlens-stashes-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.stashes.detach","title":"Detach Stashes View","icon":"$(gitlens-stashes-view)"},{"command":"gitlens.views.scm.grouped.stashes.regroup","title":"Regroup Stashes View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.tags","title":"Tags","icon":"$(gitlens-tags-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.tags.detach","title":"Detach Tags View","icon":"$(gitlens-tags-view)"},{"command":"gitlens.views.scm.grouped.tags.regroup","title":"Regroup Tags View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.worktrees","title":"Worktrees","icon":"$(gitlens-worktrees-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.worktrees.detach","title":"Detach Worktrees View","icon":"$(gitlens-worktrees-view)"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","title":"Regroup Worktrees View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.searchAndCompare.clear","title":"Clear Results","icon":"$(clear-all)"},{"command":"gitlens.views.searchAndCompare.copy","title":"Copy"},{"command":"gitlens.views.searchAndCompare.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.searchAndCompare.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.searchAndCompare.searchCommits","title":"Search Commits...","icon":"$(search)"},{"command":"gitlens.views.searchAndCompare.selectForCompare","title":"Compare References...","icon":"$(compare-changes)"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","title":"Clear Filter"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","title":"Show Left-side Files Only","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","title":"Show Right-side Files Only","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.searchAndCompare.swapComparison","title":"Swap Comparison","icon":"$(arrow-swap)","enablement":"viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare"},{"command":"gitlens.views.setAsDefault","title":"Set as Default"},{"command":"gitlens.views.setBranchComparisonToBranch","title":"Compare with Branch (HEAD)","icon":"$(compare-changes)"},{"command":"gitlens.views.setBranchComparisonToWorking","title":"Compare with Working Tree","icon":"$(compare-changes)"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","title":"Filter Commits by Author...","icon":"$(filter)"},{"command":"gitlens.views.setResultsCommitsFilterOff","title":"Clear Filter","icon":"$(filter-filled)"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","title":"Hide Date Markers"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","title":"Show Date Markers"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.stageFile","title":"Stage Changes","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.star","title":"Add to Favorites","icon":"$(star-empty)"},{"command":"gitlens.views.star.multi","title":"Add to Favorites","icon":"$(star-empty)"},{"command":"gitlens.views.stash.apply","title":"Apply Stash...","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete","title":"Drop Stash...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete.multi","title":"Drop Stashes...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.rename","title":"Rename Stash...","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.views.stashes.copy","title":"Copy"},{"command":"gitlens.views.stashes.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.stashes.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.stashes.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.switchToAnotherBranch","title":"Switch to Another Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToBranch","title":"Switch to Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToCommit","title":"Checkout Commit...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToTag","title":"Checkout Tag...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.tags.copy","title":"Copy"},{"command":"gitlens.views.tags.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.tags.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.tags.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.tags.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.timeline.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.title.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.undoCommit","title":"Undo Commit","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default"},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstar","title":"Remove from Favorites","icon":"$(star-full)"},{"command":"gitlens.views.unstar.multi","title":"Remove from Favorites","icon":"$(star-full)"},{"command":"gitlens.views.workspaces.addRepos","title":"Add Repositories...","icon":"$(add)"},{"command":"gitlens.views.workspaces.addReposFromLinked","title":"Add Repositories from Linked Workspace..."},{"command":"gitlens.views.workspaces.changeAutoAddSetting","title":"Change Linked Workspace Auto-Add Behavior..."},{"command":"gitlens.views.workspaces.convert","title":"Convert to Cloud Workspace...","icon":"$(cloud-upload)"},{"command":"gitlens.views.workspaces.copy","title":"Copy"},{"command":"gitlens.views.workspaces.create","title":"Create Cloud Workspace...","category":"GitLens","icon":"$(add)"},{"command":"gitlens.views.workspaces.createLocal","title":"Create VS Code Workspace...","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.delete","title":"Delete Workspace...","icon":"$(trash)"},{"command":"gitlens.views.workspaces.info","title":"Learn about Cloud Workspaces...","icon":"$(info)"},{"command":"gitlens.views.workspaces.locateAllRepos","title":"Locate Repositories...","icon":"$(location)"},{"command":"gitlens.views.workspaces.openLocal","title":"Open VS Code Workspace in Current Window...","icon":"$(window)"},{"command":"gitlens.views.workspaces.openLocalNewWindow","title":"Open VS Code Workspace in New Window...","icon":"$(window)"},{"command":"gitlens.views.workspaces.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.workspaces.repo.addToWindow","title":"Add Repository to VS Code Workspace"},{"command":"gitlens.views.workspaces.repo.locate","title":"Locate Repository...","icon":"$(location)"},{"command":"gitlens.views.workspaces.repo.open","title":"Open Repository","icon":"$(window)"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","title":"Open Repository in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.repo.remove","title":"Remove from Workspace...","icon":"$(trash)"},{"command":"gitlens.views.worktrees.copy","title":"Copy"},{"command":"gitlens.views.worktrees.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.worktrees.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.worktrees.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.worktrees.setShowStashesOn","title":"Show Stashes"}],"icons":{"gitlens-commit-horizontal":{"description":"commit-horizontal icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f101"}},"gitlens-graph":{"description":"graph icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f102"}},"gitlens-next-commit":{"description":"next-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f103"}},"gitlens-prev-commit-menu":{"description":"prev-commit-menu icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f104"}},"gitlens-prev-commit":{"description":"prev-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f105"}},"gitlens-compare-ref-working":{"description":"compare-ref-working icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f106"}},"gitlens-branches-view":{"description":"branches-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f107"}},"gitlens-commit-view":{"description":"commit-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f108"}},"gitlens-commits-view":{"description":"commits-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f109"}},"gitlens-compare-view":{"description":"compare-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10a"}},"gitlens-contributors-view":{"description":"contributors-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10b"}},"gitlens-history-view":{"description":"history-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-history":{"description":"history icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-remotes-view":{"description":"remotes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10d"}},"gitlens-repositories-view":{"description":"repositories-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10e"}},"gitlens-search-view":{"description":"search-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10f"}},"gitlens-stashes-view":{"description":"stashes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-stashes":{"description":"stashes icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-tags-view":{"description":"tags-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f111"}},"gitlens-worktrees-view":{"description":"worktrees-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f112"}},"gitlens-gitlens":{"description":"gitlens icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f113"}},"gitlens-stash-pop":{"description":"stash-pop icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f114"}},"gitlens-stash-save":{"description":"stash-save icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f115"}},"gitlens-unplug":{"description":"unplug icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f116"}},"gitlens-open-revision":{"description":"open-revision icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f117"}},"gitlens-switch":{"description":"switch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f118"}},"gitlens-expand":{"description":"expand icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f119"}},"gitlens-list-auto":{"description":"list-auto icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11a"}},"gitlens-pinned-filled":{"description":"pinned-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11c"}},"gitlens-clock":{"description":"clock icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11d"}},"gitlens-provider-azdo":{"description":"provider-azdo icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11e"}},"gitlens-provider-bitbucket":{"description":"provider-bitbucket icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11f"}},"gitlens-provider-gerrit":{"description":"provider-gerrit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f120"}},"gitlens-provider-gitea":{"description":"provider-gitea icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f121"}},"gitlens-provider-github":{"description":"provider-github icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f122"}},"gitlens-provider-gitlab":{"description":"provider-gitlab icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f123"}},"gitlens-gitlens-inspect":{"description":"gitlens-inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f124"}},"gitlens-workspaces-view":{"description":"workspaces-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f125"}},"gitlens-confirm-checked":{"description":"confirm-checked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f126"}},"gitlens-confirm-unchecked":{"description":"confirm-unchecked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f127"}},"gitlens-cloud-patch":{"description":"cloud-patch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f128"}},"gitlens-cloud-patch-share":{"description":"cloud-patch-share icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f129"}},"gitlens-inspect":{"description":"inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12a"}},"gitlens-repository-filled":{"description":"repository-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12b"}},"gitlens-gitlens-filled":{"description":"gitlens-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12c"}},"gitlens-code-suggestion":{"description":"code-suggestion icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12d"}},"gitlens-provider-jira":{"description":"provider-jira icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f133"}},"gitlens-play-button":{"description":"play-button icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f134"}},"gitlens-rocket-filled":{"description":"rocket-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f135"}},"gitlens-branches-view-filled":{"description":"branches-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f136"}},"gitlens-commits-view-filled":{"description":"commits-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f137"}},"gitlens-contributors-view-filled":{"description":"contributors-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f138"}},"gitlens-remotes-view-filled":{"description":"remotes-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f139"}},"gitlens-repositories-view-filled":{"description":"repositories-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13a"}},"gitlens-search-view-filled":{"description":"search-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13b"}},"gitlens-stashes-view-filled":{"description":"stashes-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13c"}},"gitlens-tags-view-filled":{"description":"tags-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13d"}},"gitlens-worktrees-view-filled":{"description":"worktrees-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13e"}},"gitlens-launchpad-view":{"description":"launchpad-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13f"}},"gitlens-launchpad-view-filled":{"description":"launchpad-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f140"}},"gitlens-merge-target":{"description":"merge-target icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f141"}}},"menus":{"commandPalette":[{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.annotations.nextChange","when":"false"},{"command":"gitlens.annotations.previousChange","when":"false"},{"command":"gitlens.applyPatchFromClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.associateIssueWithBranch","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.browseRepoAtRevision","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoBeforeRevision","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.compareHeadWith","when":"gitlens:enabled"},{"command":"gitlens.compareWith","when":"gitlens:enabled"},{"command":"gitlens.compareWorkingWith","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.connectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected"},{"command":"gitlens.copyCurrentBranch","when":"gitlens:enabled"},{"command":"gitlens.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.copyDeepLinkToComparison","when":"false"},{"command":"gitlens.copyDeepLinkToFile","when":"false"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"false"},{"command":"gitlens.copyDeepLinkToLines","when":"false"},{"command":"gitlens.copyDeepLinkToRepo","when":"gitlens:enabled"},{"command":"gitlens.copyDeepLinkToTag","when":"false"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"false"},{"command":"gitlens.copyMessageToClipboard","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.copyRelativePathToClipboard","when":"gitlens:enabled"},{"command":"gitlens.copyRemoteBranchesUrl","when":"false"},{"command":"gitlens.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.copyRemoteCommitUrl","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteComparisonUrl","when":"false"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"false"},{"command":"gitlens.copyRemotePullRequestUrl","when":"false"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"false"},{"command":"gitlens.copyShaToClipboard","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.copyWorkingChangesToWorktree","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.createCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.createPatch","when":"false && gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.createPullRequestOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffFolderWithRevision","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffLineWithPrevious","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.diffLineWithWorking","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.diffWithNext","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"},{"command":"gitlens.diffWithNextInDiffLeft","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"},{"command":"gitlens.diffWithPrevious","when":"resource in gitlens:tabs:tracked && !isInDiffEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","when":"resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"resource in gitlens:tabs:tracked && isInDiffRightEditor"},{"command":"gitlens.diffWithRevision","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithRevisionFrom","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithWorking","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"false"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"false"},{"command":"gitlens.disableDebugLogging","when":"config.gitlens.outputLevel == debug"},{"command":"gitlens.disableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.disconnectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrationsConnected"},{"command":"gitlens.enableDebugLogging","when":"config.gitlens.outputLevel != debug"},{"command":"gitlens.enableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.externalDiff","when":"!gitlens:hasVirtualFolders && resource in gitlens:tabs:tracked"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.fetchRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"false"},{"command":"gitlens.gitCommands","when":"!gitlens:disabled"},{"command":"gitlens.gitCommands.branch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.checkout","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.cherryPick","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.history","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.merge","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.rebase","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.add","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.remove","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.reset","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.revert","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.show","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.drop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.list","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.pop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.push","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.status","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.switch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.open","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gk.switchOrganization","when":"gitlens:gk:hasOrganizations"},{"command":"gitlens.graph.addAuthor","when":"false"},{"command":"gitlens.graph.associateIssueWithBranch","when":"false"},{"command":"gitlens.graph.cherryPick","when":"false"},{"command":"gitlens.graph.columnAuthorOff","when":"false"},{"command":"gitlens.graph.columnAuthorOn","when":"false"},{"command":"gitlens.graph.columnChangesOff","when":"false"},{"command":"gitlens.graph.columnChangesOn","when":"false"},{"command":"gitlens.graph.columnDateTimeOff","when":"false"},{"command":"gitlens.graph.columnDateTimeOn","when":"false"},{"command":"gitlens.graph.columnGraphCompact","when":"false"},{"command":"gitlens.graph.columnGraphDefault","when":"false"},{"command":"gitlens.graph.columnGraphOff","when":"false"},{"command":"gitlens.graph.columnGraphOn","when":"false"},{"command":"gitlens.graph.columnMessageOff","when":"false"},{"command":"gitlens.graph.columnMessageOn","when":"false"},{"command":"gitlens.graph.columnRefOff","when":"false"},{"command":"gitlens.graph.columnRefOn","when":"false"},{"command":"gitlens.graph.columnShaOff","when":"false"},{"command":"gitlens.graph.columnShaOn","when":"false"},{"command":"gitlens.graph.commitViaSCM","when":"false"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"false"},{"command":"gitlens.graph.compareBranchWithHead","when":"false"},{"command":"gitlens.graph.compareSelectedCommits.multi","when":"false"},{"command":"gitlens.graph.compareWithHead","when":"false"},{"command":"gitlens.graph.compareWithMergeBase","when":"false"},{"command":"gitlens.graph.compareWithUpstream","when":"false"},{"command":"gitlens.graph.compareWithWorking","when":"false"},{"command":"gitlens.graph.copy","when":"false"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"false"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"false"},{"command":"gitlens.graph.copyMessage","when":"false"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.graph.copySha","when":"false"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"false"},{"command":"gitlens.graph.createBranch","when":"false"},{"command":"gitlens.graph.createCloudPatch","when":"false"},{"command":"gitlens.graph.createPatch","when":"false"},{"command":"gitlens.graph.createPullRequest","when":"false"},{"command":"gitlens.graph.createTag","when":"false"},{"command":"gitlens.graph.createWorktree","when":"false"},{"command":"gitlens.graph.deleteBranch","when":"false"},{"command":"gitlens.graph.deleteTag","when":"false"},{"command":"gitlens.graph.fetch","when":"false"},{"command":"gitlens.graph.generateCommitMessage","when":"false"},{"command":"gitlens.graph.hideLocalBranch","when":"false"},{"command":"gitlens.graph.hideRefGroup","when":"false"},{"command":"gitlens.graph.hideRemote","when":"false"},{"command":"gitlens.graph.hideRemoteBranch","when":"false"},{"command":"gitlens.graph.hideTag","when":"false"},{"command":"gitlens.graph.mergeBranchInto","when":"false"},{"command":"gitlens.graph.openBranchOnRemote","when":"false"},{"command":"gitlens.graph.openChangedFileDiffs","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileRevisions","when":"false"},{"command":"gitlens.graph.openChangedFiles","when":"false"},{"command":"gitlens.graph.openCommitOnRemote","when":"false"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.graph.openInWorktree","when":"false"},{"command":"gitlens.graph.openOnlyChangedFiles","when":"false"},{"command":"gitlens.graph.openPullRequest","when":"false"},{"command":"gitlens.graph.openPullRequestChanges","when":"false"},{"command":"gitlens.graph.openPullRequestComparison","when":"false"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"false"},{"command":"gitlens.graph.openWorktree","when":"false"},{"command":"gitlens.graph.openWorktreeInNewWindow","when":"false"},{"command":"gitlens.graph.publishBranch","when":"false"},{"command":"gitlens.graph.pull","when":"false"},{"command":"gitlens.graph.push","when":"false"},{"command":"gitlens.graph.pushWithForce","when":"false"},{"command":"gitlens.graph.rebaseOntoBranch","when":"false"},{"command":"gitlens.graph.rebaseOntoCommit","when":"false"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"false"},{"command":"gitlens.graph.refresh","when":"false"},{"command":"gitlens.graph.renameBranch","when":"false"},{"command":"gitlens.graph.resetColumnsCompact","when":"false"},{"command":"gitlens.graph.resetColumnsDefault","when":"false"},{"command":"gitlens.graph.resetCommit","when":"false"},{"command":"gitlens.graph.resetToCommit","when":"false"},{"command":"gitlens.graph.resetToTag","when":"false"},{"command":"gitlens.graph.resetToTip","when":"false"},{"command":"gitlens.graph.revert","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","when":"false"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"false"},{"command":"gitlens.graph.shareAsCloudPatch","when":"false"},{"command":"gitlens.graph.showInDetailsView","when":"false"},{"command":"gitlens.graph.split","when":"gitlens:enabled && config.gitlens.graph.allowMultiple"},{"command":"gitlens.graph.stash.apply","when":"false"},{"command":"gitlens.graph.stash.delete","when":"false"},{"command":"gitlens.graph.stash.rename","when":"false"},{"command":"gitlens.graph.stash.save","when":"false"},{"command":"gitlens.graph.switchToAnotherBranch","when":"false"},{"command":"gitlens.graph.switchToBranch","when":"false"},{"command":"gitlens.graph.switchToCommit","when":"false"},{"command":"gitlens.graph.switchToEditorLayout","when":"gitlens:enabled && config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","when":"gitlens:enabled && config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.switchToTag","when":"false"},{"command":"gitlens.graph.undoCommit","when":"false"},{"command":"gitlens.inviteToLiveShare","when":"false"},{"command":"gitlens.launchpad.indicator.toggle","when":"gitlens:enabled"},{"command":"gitlens.openAssociatedPullRequestOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openBlamePriorToChange","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openBranchesOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openBranchOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openCloudPatch","when":"false"},{"command":"gitlens.openCommitOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openComparisonOnRemote","when":"false"},{"command":"gitlens.openCurrentBranchOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileFromRemote","when":"gitlens:enabled"},{"command":"gitlens.openFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFileOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileOnRemoteFrom","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileRevision","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFileRevisionFrom","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFolderHistory","when":"false"},{"command":"gitlens.openOnlyChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openPatch","when":"false && gitlens:enabled"},{"command":"gitlens.openPullRequestOnRemote","when":"false"},{"command":"gitlens.openRepoOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openRevisionFile","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"false"},{"command":"gitlens.openRevisionFileInDiffRight","when":"false"},{"command":"gitlens.openWorkingFile","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"false"},{"command":"gitlens.openWorkingFileInDiffRight","when":"false"},{"command":"gitlens.pastePatchFromClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.plus.cloudIntegrations.connect","when":"false"},{"command":"gitlens.plus.cloudIntegrations.manage","when":"gitlens:plus"},{"command":"gitlens.plus.hide","when":"config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.login","when":"!gitlens:plus"},{"command":"gitlens.plus.manage","when":"gitlens:plus"},{"command":"gitlens.plus.reactivateProTrial","when":"gitlens:plus:state == 5"},{"command":"gitlens.plus.refreshRepositoryAccess","when":"gitlens:enabled"},{"command":"gitlens.plus.restore","when":"!config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.signUp","when":"!gitlens:plus"},{"command":"gitlens.plus.simulateSubscription","when":"gitlens:enabled && gitlens:debugging"},{"command":"gitlens.plus.startPreviewTrial","when":"false && !gitlens:plus"},{"command":"gitlens.pullRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.pushRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.quickOpenFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.resetAIKey","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.revealCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.scm.generateCommitMessage","when":"false"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.showBranchesView","when":"gitlens:enabled"},{"command":"gitlens.showCommitDetailsView","when":"gitlens:enabled"},{"command":"gitlens.showCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showCommitsInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showCommitsView","when":"gitlens:enabled"},{"command":"gitlens.showContributorsView","when":"gitlens:enabled"},{"command":"gitlens.showDraftsView","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled"},{"command":"gitlens.showFileHistoryInView","when":"false"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showGraph","when":"gitlens:enabled"},{"command":"gitlens.showGraphPage","when":"gitlens:enabled"},{"command":"gitlens.showGraphView","when":"gitlens:enabled"},{"command":"gitlens.showInCommitGraph","when":"false"},{"command":"gitlens.showInCommitGraphView","when":"false"},{"command":"gitlens.showInDetailsView","when":"false"},{"command":"gitlens.showInTimeline","when":"gitlens:enabled && resource in gitlens:tabs:tracked"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showLaunchpad","when":"gitlens:enabled"},{"command":"gitlens.showLaunchpadView","when":"gitlens:enabled"},{"command":"gitlens.showLineCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showPatchDetailsPage","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickCommitDetails","when":"false"},{"command":"gitlens.showQuickCommitFileDetails","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showQuickFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"false"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"false"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.showRemotesView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showSearchAndCompareView","when":"gitlens:enabled"},{"command":"gitlens.showSettingsPage!branches-view","when":"false"},{"command":"gitlens.showSettingsPage!commit-graph","when":"false"},{"command":"gitlens.showSettingsPage!commits-view","when":"false"},{"command":"gitlens.showSettingsPage!contributors-view","when":"false"},{"command":"gitlens.showSettingsPage!file-annotations","when":"false"},{"command":"gitlens.showSettingsPage!file-history-view","when":"false"},{"command":"gitlens.showSettingsPage!line-history-view","when":"false"},{"command":"gitlens.showSettingsPage!remotes-view","when":"false"},{"command":"gitlens.showSettingsPage!repositories-view","when":"false"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"false"},{"command":"gitlens.showSettingsPage!stashes-view","when":"false"},{"command":"gitlens.showSettingsPage!tags-view","when":"false"},{"command":"gitlens.showSettingsPage!views","when":"false"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"false"},{"command":"gitlens.showStashesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showTagsView","when":"gitlens:enabled"},{"command":"gitlens.showTimelinePage","when":"gitlens:enabled"},{"command":"gitlens.showTimelineView","when":"gitlens:enabled"},{"command":"gitlens.showWorkspacesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showWorktreesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.startWork","when":"gitlens:enabled"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.switchAIModel","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.timeline.refresh","when":"false"},{"command":"gitlens.timeline.split","when":"gitlens:enabled && config.gitlens.visualHistory.allowMultiple"},{"command":"gitlens.toggleCodeLens","when":"!gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable || config.gitlens.blame.toggleMode == window"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"false"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"false"},{"command":"gitlens.toggleFileChanges","when":"(resource in gitlens:tabs:blameable  || config.gitlens.changes.toggleMode == window) && !gitlens:hasVirtualFolders"},{"command":"gitlens.toggleFileChangesOnly","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable || config.gitlens.heatmap.toggleMode == window"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"false"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"false"},{"command":"gitlens.toggleGraph","when":"gitlens:enabled"},{"command":"gitlens.toggleLineBlame","when":"!gitlens:disabled"},{"command":"gitlens.toggleMaximizedGraph","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.views.addAuthor","when":"false"},{"command":"gitlens.views.addAuthor.multi","when":"false"},{"command":"gitlens.views.addAuthors","when":"false"},{"command":"gitlens.views.addRemote","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.associateIssueWithBranch","when":"false"},{"command":"gitlens.views.branches.copy","when":"false"},{"command":"gitlens.views.branches.refresh","when":"false"},{"command":"gitlens.views.branches.regroup","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setLayoutToList","when":"false"},{"command":"gitlens.views.branches.setLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"false"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"false"},{"command":"gitlens.views.branches.setShowStashesOff","when":"false"},{"command":"gitlens.views.branches.setShowStashesOn","when":"false"},{"command":"gitlens.views.browseRepoAtRevision","when":"false"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevision","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","when":"false"},{"command":"gitlens.views.cherryPick","when":"false"},{"command":"gitlens.views.cherryPick.multi","when":"false"},{"command":"gitlens.views.clearComparison","when":"false"},{"command":"gitlens.views.clearReviewed","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.collapseNode","when":"false"},{"command":"gitlens.views.commitDetails.refresh","when":"false"},{"command":"gitlens.views.commits.copy","when":"false"},{"command":"gitlens.views.commits.refresh","when":"false"},{"command":"gitlens.views.commits.regroup","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.commits.setShowStashesOff","when":"false"},{"command":"gitlens.views.commits.setShowStashesOn","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareBranchWithHead","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithMergeBase","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.compareWithUpstream","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.contributors.copy","when":"false"},{"command":"gitlens.views.contributors.refresh","when":"false"},{"command":"gitlens.views.contributors.regroup","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"false"},{"command":"gitlens.views.copy","when":"false"},{"command":"gitlens.views.copyAsMarkdown","when":"false"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.views.copyUrl","when":"false"},{"command":"gitlens.views.copyUrl.multi","when":"false"},{"command":"gitlens.views.createBranch","when":"false"},{"command":"gitlens.views.createPullRequest","when":"false"},{"command":"gitlens.views.createTag","when":"false"},{"command":"gitlens.views.createWorktree","when":"false"},{"command":"gitlens.views.deleteBranch","when":"false"},{"command":"gitlens.views.deleteBranch.multi","when":"false"},{"command":"gitlens.views.deleteTag","when":"false"},{"command":"gitlens.views.deleteTag.multi","when":"false"},{"command":"gitlens.views.deleteWorktree","when":"false"},{"command":"gitlens.views.deleteWorktree.multi","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.draft.open","when":"false"},{"command":"gitlens.views.draft.openOnWeb","when":"false"},{"command":"gitlens.views.drafts.copy","when":"false"},{"command":"gitlens.views.drafts.create","when":"false"},{"command":"gitlens.views.drafts.delete","when":"false"},{"command":"gitlens.views.drafts.info","when":"false"},{"command":"gitlens.views.drafts.refresh","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.editNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.copy","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.graph.openInTab","when":"false"},{"command":"gitlens.views.graph.refresh","when":"false"},{"command":"gitlens.views.graphDetails.refresh","when":"false"},{"command":"gitlens.views.highlightChanges","when":"false"},{"command":"gitlens.views.highlightRevisionChanges","when":"false"},{"command":"gitlens.views.home.disablePreview","when":"false"},{"command":"gitlens.views.home.discussions","when":"false"},{"command":"gitlens.views.home.enablePreview","when":"false"},{"command":"gitlens.views.home.help","when":"false"},{"command":"gitlens.views.home.info","when":"false"},{"command":"gitlens.views.home.issues","when":"false"},{"command":"gitlens.views.home.previewFeedback","when":"false"},{"command":"gitlens.views.home.refresh","when":"false"},{"command":"gitlens.views.home.whatsNew","when":"false"},{"command":"gitlens.views.launchpad.copy","when":"false"},{"command":"gitlens.views.launchpad.info","when":"false"},{"command":"gitlens.views.launchpad.refresh","when":"false"},{"command":"gitlens.views.launchpad.regroup","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.copy","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.loadAllChildren","when":"false"},{"command":"gitlens.views.loadMoreChildren","when":"false"},{"command":"gitlens.views.mergeBranchInto","when":"false"},{"command":"gitlens.views.openBranchOnRemote","when":"false"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"false"},{"command":"gitlens.views.openChangedFileDiffs","when":"false"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openCommitOnRemote","when":"false"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openInIntegratedTerminal","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.openInWorktree","when":"false"},{"command":"gitlens.views.openOnlyChangedFiles","when":"false"},{"command":"gitlens.views.openPreviousChangesWithWorking","when":"false"},{"command":"gitlens.views.openPullRequest","when":"false"},{"command":"gitlens.views.openPullRequestChanges","when":"false"},{"command":"gitlens.views.openPullRequestComparison","when":"false"},{"command":"gitlens.views.openUrl","when":"false"},{"command":"gitlens.views.openUrl.multi","when":"false"},{"command":"gitlens.views.openWorktree","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"false"},{"command":"gitlens.views.patchDetails.close","when":"false"},{"command":"gitlens.views.patchDetails.refresh","when":"false"},{"command":"gitlens.views.pruneRemote","when":"false"},{"command":"gitlens.views.publishBranch","when":"false"},{"command":"gitlens.views.publishRepository","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.pullRequest.close","when":"false"},{"command":"gitlens.views.pullRequest.copy","when":"false"},{"command":"gitlens.views.pullRequest.refresh","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushToCommit","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.rebaseOntoBranch","when":"false"},{"command":"gitlens.views.rebaseOntoCommit","when":"false"},{"command":"gitlens.views.rebaseOntoUpstream","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"},{"command":"gitlens.views.remotes.copy","when":"false"},{"command":"gitlens.views.remotes.refresh","when":"false"},{"command":"gitlens.views.remotes.regroup","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.removeRemote","when":"false"},{"command":"gitlens.views.renameBranch","when":"false"},{"command":"gitlens.views.repositories.copy","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.regroup","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"false"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"false"},{"command":"gitlens.views.resetCommit","when":"false"},{"command":"gitlens.views.resetToCommit","when":"false"},{"command":"gitlens.views.resetToTip","when":"false"},{"command":"gitlens.views.restore","when":"false"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"false"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"false"},{"command":"gitlens.views.revert","when":"false"},{"command":"gitlens.views.scm.grouped.branches","when":"false"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"false"},{"command":"gitlens.views.scm.grouped.branches.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.commits","when":"false"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"false"},{"command":"gitlens.views.scm.grouped.commits.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.contributors","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.detachAll","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.refresh","when":"false"},{"command":"gitlens.views.scm.grouped.regroupAll","when":"false"},{"command":"gitlens.views.scm.grouped.remotes","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.repositories","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.stashes","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.tags","when":"false"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"false"},{"command":"gitlens.views.scm.grouped.tags.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","when":"false"},{"command":"gitlens.views.searchAndCompare.clear","when":"false"},{"command":"gitlens.views.searchAndCompare.copy","when":"false"},{"command":"gitlens.views.searchAndCompare.refresh","when":"false"},{"command":"gitlens.views.searchAndCompare.regroup","when":"false"},{"command":"gitlens.views.searchAndCompare.searchCommits","when":"false"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"false"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.star.multi","when":"false"},{"command":"gitlens.views.stash.apply","when":"false"},{"command":"gitlens.views.stash.delete","when":"false"},{"command":"gitlens.views.stash.delete.multi","when":"false"},{"command":"gitlens.views.stash.rename","when":"false"},{"command":"gitlens.views.stashes.copy","when":"false"},{"command":"gitlens.views.stashes.refresh","when":"false"},{"command":"gitlens.views.stashes.regroup","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.switchToAnotherBranch","when":"false"},{"command":"gitlens.views.switchToBranch","when":"false"},{"command":"gitlens.views.switchToCommit","when":"false"},{"command":"gitlens.views.switchToTag","when":"false"},{"command":"gitlens.views.tags.copy","when":"false"},{"command":"gitlens.views.tags.refresh","when":"false"},{"command":"gitlens.views.tags.regroup","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setLayoutToList","when":"false"},{"command":"gitlens.views.tags.setLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.timeline.refresh","when":"false"},{"command":"gitlens.views.title.createBranch","when":"false"},{"command":"gitlens.views.title.createTag","when":"false"},{"command":"gitlens.views.title.createWorktree","when":"false"},{"command":"gitlens.views.undoCommit","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.unstar.multi","when":"false"},{"command":"gitlens.views.workspaces.addRepos","when":"false"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"false"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"false"},{"command":"gitlens.views.workspaces.convert","when":"false"},{"command":"gitlens.views.workspaces.copy","when":"false"},{"command":"gitlens.views.workspaces.create","when":"gitlens:plus"},{"command":"gitlens.views.workspaces.createLocal","when":"false"},{"command":"gitlens.views.workspaces.delete","when":"false"},{"command":"gitlens.views.workspaces.info","when":"false"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"false"},{"command":"gitlens.views.workspaces.openLocal","when":"false"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"false"},{"command":"gitlens.views.workspaces.refresh","when":"false"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.locate","when":"false"},{"command":"gitlens.views.workspaces.repo.open","when":"false"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.remove","when":"false"},{"command":"gitlens.views.worktrees.copy","when":"false"},{"command":"gitlens.views.worktrees.refresh","when":"false"},{"command":"gitlens.views.worktrees.regroup","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"false"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"false"}],"editor/context":[{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens && editorTextFocus && config.gitlens.menus.editor.compare","group":"1_z_gitlens@0"},{"submenu":"gitlens/editor/context/changes","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.compare","group":"1_z_gitlens_open@1"},{"submenu":"gitlens/editor/context/openOn","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.remote && gitlens:repos:withRemotes","group":"1_z_gitlens_open@2"},{"submenu":"gitlens/editor/annotations","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:blameable && editorTextFocus && config.gitlens.menus.editor.blame","group":"1_z_gitlens_open_file@1"},{"submenu":"gitlens/editor/history","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && config.gitlens.menus.editor.history","group":"1_z_gitlens_open_file@2"}],"editor/context/copy":[{"command":"gitlens.copyRelativePathToClipboard","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@1"},{"command":"gitlens.copyDeepLinkToLines","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard && editorHasSelection","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFile","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@3"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@4"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteCommitUrl","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@3"},{"command":"gitlens.copyShaToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"3_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"3_gitlens@2"}],"editor/lineNumber/context":[{"submenu":"gitlens/editor/lineNumber/context/share","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.share && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"submenu":"gitlens/editor/lineNumber/context/changes","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.compare","group":"3_gitlens@1"},{"submenu":"gitlens/editor/lineNumber/context/openOn","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.remote && gitlens:repos:withRemotes","group":"3_gitlens@2"}],"editor/title":[{"command":"gitlens.graph.refresh","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-99"},{"command":"gitlens.timeline.refresh","when":"activeWebviewPanelId === gitlens.timeline","group":"navigation@-99"},{"submenu":"gitlens/graph/configuration","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-98"},{"command":"gitlens.graph.split","when":"activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple","group":"navigation@-97"},{"command":"gitlens.timeline.split","when":"activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple","group":"navigation@-97"},{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated == computed || (resource in gitlens:tabs:annotated && resource not in gitlens:tabs:annotated:computing)) && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated == computing || resource in gitlens:tabs:annotated:computing) && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == blame","group":"navigation@100","alt":"gitlens.toggleFileHeatmap"},{"command":"gitlens.toggleFileChanges","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == changes && !gitlens:hasVirtualFolders","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == heatmap","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"submenu":"gitlens/editor/annotations","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && !config.gitlens.fileAnnotations.command && !gitlens:window:annotated","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.diffWithPreviousInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.showQuickRevisionDetails","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == git && gitlens:enabled && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.diffWithWorking","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.openWorkingFile","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.openRevisionFileInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.openPatch","when":"false && editorLangId == diff"}],"editor/title/context":[{"command":"gitlens.graph.split","when":"activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.timeline.split","when":"activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens && resourceScheme in gitlens:schemes:trackable","group":"2_a_gitlens@0"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes","group":"1_cutcopypaste@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes","group":"1_cutcopypaste@101"},{"submenu":"gitlens/editor/changes","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"2_a_gitlens_open@1"},{"submenu":"gitlens/editor/openOn","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.remote && gitlens:repos:withRemotes","group":"2_a_gitlens_open@2"},{"submenu":"gitlens/editor/history","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.history","group":"2_a_gitlens_open_file@1"}],"explorer/context":[{"submenu":"gitlens/explorer/changes","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"4_t_gitlens@0"},{"submenu":"gitlens/explorer/openOn","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.remote && gitlens:repos:withRemotes","group":"4_t_gitlens@1"},{"submenu":"gitlens/explorer/history","when":"gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_timeline@0"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes","group":"6_copypath@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes","group":"6_copypath@101"}],"extension/context":[{"command":"gitlens.getStarted","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@3"}],"git.commit":[{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && config.gitlens.menus.scmRepository.authors","group":"4_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@3"},{"command":"gitlens.scm.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage","group":"4_gitlens@4"}],"gitlens/commit/browse":[{"command":"gitlens.views.browseRepoAtRevision","group":"1_gitlens@1"},{"command":"gitlens.views.browseRepoBeforeRevision","group":"1_gitlens@2"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","group":"1_gitlens@3"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","group":"1_gitlens@4"}],"gitlens/commit/changes":[{"command":"gitlens.views.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@2"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","group":"1_gitlens@3"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@4"},{"command":"gitlens.views.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.views.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/commit/copy":[{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@2"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@3"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"1_gitlens@4"}],"gitlens/commit/file/changes":[{"command":"gitlens.views.openPreviousChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|stashed|staged|unstaged)\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_@1"},{"command":"gitlens.views.highlightChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/","group":"2_gitlens@1"},{"command":"gitlens.views.highlightRevisionChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/","group":"2_gitlens@2"}],"gitlens/commit/file/commit":[{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@2"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && gitlens:repos:withRemotes","group":"navigation@3","alt":"gitlens.copyRemoteCommitUrl"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@4"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@0"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.createPatch","when":"false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && config.gitlens.cloudPatches.enabled && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@4"}],"gitlens/commit/file/history":[{"command":"gitlens.openFileHistory","when":"view != gitlens.views.fileHistory/","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/comparison/results/files/filter":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filter/inline":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered/inline":[{"command":"gitlens.views.searchAndCompare.setFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.searchAndCompare.setFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/editor/annotations":[{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)","group":"1_gitlens@1"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable && !isInDiffEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"resource in gitlens:tabs:blameable && isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable && !isInDiffEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"resource in gitlens:tabs:blameable && isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileChanges","when":"resource in gitlens:tabs:blameable && !gitlens:hasVirtualFolders","group":"2_gitlens@3"},{"command":"gitlens.showSettingsPage!file-annotations","when":"resource in gitlens:tabs:blameable","group":"8_gitlens@1"}],"gitlens/editor/changes":[{"command":"gitlens.diffWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"}],"gitlens/editor/context/changes":[{"command":"gitlens.diffLineWithPrevious","when":"resource in gitlens:tabs:tracked && editorTextFocus","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"resource in gitlens:tabs:tracked && editorTextFocus","group":"1_gitlens@2"},{"command":"gitlens.diffWithPrevious","group":"2_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"2_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"2_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"2_gitlens@4"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@1"},{"command":"gitlens.showCommitsInView","when":"editorTextFocus && editorHasSelection","group":"3_gitlens@2"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@2"},{"command":"gitlens.showQuickRevisionDetails","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"3_gitlens_1@1"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"3_gitlens_1@1"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"3_gitlens_1@1"}],"gitlens/editor/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/editor/lineNumber/context/changes":[{"command":"gitlens.diffLineWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","group":"1_gitlens@2"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@1"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@2"}],"gitlens/editor/lineNumber/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/lineNumber/context/share":[{"command":"gitlens.copyDeepLinkToLines","group":"1_gitlens@1"},{"command":"gitlens.copyDeepLinkToFile","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"resource in gitlens:tabs:tracked","group":"1_gitlens@3"},{"command":"gitlens.copyRemoteFileUrlToClipboard","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteFileUrlFrom","group":"1_gitlens_remote@3"},{"command":"gitlens.copyRemoteCommitUrl","group":"1_gitlens_remote_commit@1"}],"gitlens/editor/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/explorer/changes":[{"command":"gitlens.diffFolderWithRevision","when":"explorerResourceIsFolder && !gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsFolder","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"explorerResourceIsFolder && !gitlens:hasVirtualFolders","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsFolder","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevisionFrom","when":"!explorerResourceIsFolder","group":"1_gitlens@3"}],"gitlens/explorer/history":[{"command":"gitlens.openFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens@1"},{"command":"gitlens.openFolderHistory","when":"explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled","group":"1_gitlens_quick@1"}],"gitlens/explorer/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/graph/commit/changes":[{"command":"gitlens.graph.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@2"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"webviewItem != gitlens:wip","group":"1_gitlens@3"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@4"},{"command":"gitlens.graph.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.graph.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.graph.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/graph/configuration":[{"command":"gitlens.graph.switchToEditorLayout","group":"1_gitlens@1"},{"command":"gitlens.graph.switchToPanelLayout","group":"1_gitlens@1"},{"command":"gitlens.showSettingsPage!commit-graph","group":"9_gitlens@1"}],"gitlens/graph/markers":[{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:enabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:disabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:enabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:disabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:enabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:disabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:enabled\\b/","group":"4_settings@4"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:disabled\\b/","group":"4_settings@4"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:enabled\\b/","group":"4_settings@5"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:disabled\\b/","group":"4_settings@5"}],"gitlens/scm/resourceFolder/changes":[{"command":"gitlens.diffFolderWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"}],"gitlens/scm/resourceGroup/changes":[{"command":"gitlens.externalDiffAll","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"},{"command":"gitlens.diffDirectoryWithHead","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@2"},{"command":"gitlens.diffDirectory","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@3"}],"gitlens/scm/resourceState/changes":[{"command":"gitlens.diffWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"},{"command":"gitlens.externalDiff","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"}],"gitlens/scm/resourceState/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/scm/resourceState/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/share":[{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"command":"gitlens.copyDeepLinkToBranch","when":"viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|status:upstream(?!:none))\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.copyDeepLinkToRepo","when":"viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|remote|repo-folder|repository|status:upstream(?!:none))\\b/ && !listMultiSelection","group":"1_gitlens@99"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.shareAsCloudPatch","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b)|stash|compare:results(?!:))\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_a_gitlens@1"},{"command":"gitlens.copyDeepLinkToCommit","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.copyDeepLinkToComparison","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.copyRemoteComparisonUrl","when":"viewItem =~ /gitlens:compare:(results(:commits|(?!:))|branch\\b(?=.*?\\b\\+comparing\\b))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.copyDeepLinkToFile","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"1_gitlens@26"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"1_gitlens@27"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"viewItem =~ /gitlens:(remote|repo-folder|repository)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@99"},{"command":"gitlens.copyDeepLinkToTag","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"viewItem =~ /gitlens:workspace\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection","group":"1_gitlens@99"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.graph.shareAsCloudPatch","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_a_gitlens@1"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"}],"gitlens/view/repositories/sections":[{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"!config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"!config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"!config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"!config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"!config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"!config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"!config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"!config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"!config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"}],"gitlens/view/searchAndCompare/new":[{"command":"gitlens.views.searchAndCompare.searchCommits","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"navigation@11"}],"gitlens/views/grouped/branches":[{"command":"gitlens.views.switchToAnotherBranch","when":"gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"3_gitlens@1"},{"command":"gitlens.views.title.createBranch","when":"gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"3_gitlens@2"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == branches","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","when":"gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.default != branches","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"gitlens:views:scm:grouped:view == branches","group":"9_gitlens@3"}],"gitlens/views/grouped/commits":[{"command":"gitlens.pushRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.pullRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@3"},{"command":"gitlens.views.switchToAnotherBranch","when":"gitlens:views:scm:grouped:view == commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions_@0"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"gitlens:views:scm:grouped:view == commits && gitlens:views:commits:filtered","group":"8_gitlens_@0"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"gitlens:views:scm:grouped:view == commits","group":"8_gitlens_@1"},{"command":"gitlens.showGraph","when":"gitlens:views:scm:grouped:view == commits && gitlens:plus:enabled","group":"8_gitlens_toggles@0"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == commits","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","when":"gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.default != commits","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"gitlens:views:scm:grouped:view == commits","group":"9_gitlens@3"}],"gitlens/views/grouped/contributors":[{"command":"gitlens.views.addAuthors","when":"gitlens:views:scm:grouped:view == contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","when":"gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.default != contributors","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@3"}],"gitlens/views/grouped/launchpad":[{"command":"gitlens.views.launchpad.info","when":"gitlens:views:scm:grouped:view == launchpad","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == launchpad","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","when":"gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.default != launchpad","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"gitlens:views:scm:grouped:view == launchpad","group":"9_gitlens@3"}],"gitlens/views/grouped/more":[{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.branches.setLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"submenu":"gitlens/view/repositories/sections","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories","group":"4_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !gitlens:views:commits:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && gitlens:views:commits:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && !config.gitlens.views.launchpad.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.remotes.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && !config.gitlens.views.repositories.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && !config.gitlens.views.tags.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view =~ /(branches|commits|contributors|remotes|repositories|tags|worktrees)/ && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@10"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view =~ /(branches|commits|contributors|remotes|repositories|tags|worktrees)/ && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@10"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.branches.setShowStashesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.branches.setShowStashesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.commits.setShowStashesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.commits.setShowStashesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.showSettingsPage!branches-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!commits-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!contributors-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!remotes-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!repositories-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!stashes-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!tags-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@1"}],"gitlens/views/grouped/remotes":[{"command":"gitlens.views.addRemote","when":"gitlens:views:scm:grouped:view == remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","when":"gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.default != remotes","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@3"}],"gitlens/views/grouped/repositories":[{"command":"gitlens.pushRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.pullRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@3"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","when":"gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.default != repositories","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@3"}],"gitlens/views/grouped/searchAndCompare":[{"command":"gitlens.views.searchAndCompare.clear","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"2_gitlens_actions_@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","when":"gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.default != searchAndCompare","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@3"},{"command":"gitlens.views.searchAndCompare.searchCommits","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"2_gitlens_actions@1"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"2_gitlens_actions@2"}],"gitlens/views/grouped/stashes":[{"command":"gitlens.stashSave","when":"gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","when":"gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.default != stashes","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@3"}],"gitlens/views/grouped/tags":[{"command":"gitlens.views.title.createTag","when":"gitlens:views:scm:grouped:view == tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == tags","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","when":"gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.default != tags","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"gitlens:views:scm:grouped:view == tags","group":"9_gitlens@3"}],"gitlens/views/grouped/worktrees":[{"command":"gitlens.views.title.createWorktree","when":"gitlens:views:scm:grouped:view == worktrees","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","when":"gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.default != workspaces","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@3"}],"menuBar/edit/copy":[{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard","group":"1_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard","group":"1_gitlens@2"}],"scm/resourceFolder/context":[{"submenu":"gitlens/scm/resourceFolder/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"2_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroupInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.stashSave","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_modification@100"},{"submenu":"gitlens/scm/resourceGroup/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"2_gitlens@1"},{"command":"gitlens.openChangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@2"},{"command":"gitlens.openOnlyChangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@3"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.shareAsCloudPatch","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@98"}],"scm/resourceState/context":[{"submenu":"gitlens/scm/resourceState/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"submenu":"gitlens/scm/resourceState/openOn","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.remote && gitlens:repos:withRemotes","group":"navigation"},{"command":"gitlens.stashSaveFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItemInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"submenu":"gitlens/scm/resourceState/history","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_a_gitlens@2"},{"command":"gitlens.stashSaveFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_modification@2"},{"submenu":"gitlens/share","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.share","group":"7_a_gitlens_share@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.copyRelativePathToClipboard","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.clipboard && gitlens:repos:withRemotes","group":"7_cutcopypaste@98"}],"scm/sourceControl":[{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scm.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"6_gitlens@1"}],"scm/title":[{"command":"gitlens.stashSave","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@-1001"},{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"navigation@-1000"},{"command":"gitlens.addAuthors","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.authors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_z_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@3"},{"command":"gitlens.scm.generateCommitMessage","when":"scmProvider == git && gitlens:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage && gitlens:gk:organization:ai:enabled && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_z_gitlens@4"},{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"2_z_gitlens@5"}],"timeline/item/context":[{"command":"gitlens.openCommitOnRemote","when":"false && gitlens:enabled && gitlens:repos:withRemotes && timelineItem =~ /git:file:commit\\b/","group":"inline@99","alt":"gitlens.copyRemoteCommitUrl"}],"view/item/context":[{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"viewItem =~ /pullrequest(:local)?:nonactive|description/ && view == pr:github && config.gitlens.menus.ghpr.worktree && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens@1"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:(?=(autolinked:item\\b|branch|commit|contributor|file(?!.*?\\b\\+(staged|unstaged))\\b|folder|history:line|launchpad:item|pullrequest|remote|repository|repo-folder|search:results|stash|tag|workspace|worktree)\\b)/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!(file|message|date-marker)\\b)/","group":"9_gitlens_z@99"},{"command":"gitlens.views.openUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"inline@99","alt":"gitlens.views.copyUrl"},{"command":"gitlens.views.openUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection","group":"1_gitlens_actions@99"},{"command":"gitlens.views.openUrl.multi","when":"viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection","group":"1_gitlens_actions@99"},{"command":"gitlens.views.copyUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyUrl.multi","when":"viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected","group":"inline@98"},{"command":"gitlens.showSettingsPage!autolinks","when":"viewItem =~ /gitlens:autolinked:items\\b/","group":"inline@99"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected","group":"6_gitlens_actions@1"},{"command":"gitlens.showSettingsPage!autolinks","when":"viewItem =~ /gitlens:autolinked:items\\b/ && !listMultiSelection","group":"8_gitlens_actions@99"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !gitlens:hasVirtualFolders","group":"inline@7","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@7"},{"command":"gitlens.views.switchToBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@7"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8","alt":"gitlens.views.pull"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8","alt":"gitlens.views.fetch"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"inline@9"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && gitlens:hasVirtualFolders","group":"inline@97"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"inline@97"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@1"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.views.switchToBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@2"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@3"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.mergeBranchInto","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetToTip","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.rebaseOntoBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoUpstream","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.renameBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.views.deleteBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.deleteBranch.multi","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout)\\b)(?!.*?\\b\\+closed\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.associateIssueWithBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@8"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_@7"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_@8"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_@9"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"1_gitlens_actions_@10"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"submenu":"gitlens/commit/browse","when":"viewItem =~ /gitlens:(branch|commit|file\\b(?=.*?\\b\\+committed\\b)|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"3_gitlens_explore@10"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"3_gitlens_explore@11"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"3_gitlens_explore@12"},{"command":"gitlens.views.compareWithUpstream","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@1"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithMergeBase","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@4"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@5"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && gitlens:views:canCompare","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@99"},{"submenu":"gitlens/share","when":"viewItem =~ /gitlens:(branch|commit|compare:(branch(?=.*?\\b\\+comparing\\b)|results(:commits(?!:)|(?!:)))|remote|repo-folder|repository|stash|status:upstream|tag|workspace|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"7_gitlens_a_share@1"},{"submenu":"gitlens/commit/copy","when":"viewItem =~ /gitlens:(branch|commit|remote|repo-folder|repository|stash|tag|file\\b(?=.*?\\b\\+committed\\b))\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@10"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"viewItem =~ /gitlens:(compare:branch(?=.*?\\b\\+root\\b)|branches|branch(?=.*?\\b\\+commits\\b)|reflog|remotes|stashes|status:upstream|tags)\\b/ && view == gitlens.views.repositories && !listMultiSelection","group":"8_gitlens_toggles@99"},{"command":"gitlens.views.collapseNode","when":"viewItem =~ /gitlens:(branch|compare|folder|grouping|results|search|status|tag)\\b/ && !listMultiSelection","group":"9_gitlens@1"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(branch|compare|folder|grouping|results|search|status|tag)\\b/ && !listMultiSelection","group":"9_gitlens@2"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@10"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@11"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"inline@98","alt":"gitlens.copyRemoteBranchesUrl"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && !config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@78"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@79","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@80"},{"command":"gitlens.views.openChangedFileDiffs","when":"viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled && !listMultiSelection","group":"inline@90","alt":"gitlens.views.openChangedFileDiffsWithWorking"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(commit|stash|tag)\\b/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.views.copyRemoteCommitUrl"},{"command":"gitlens.views.cherryPick","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.cherryPick.multi","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@4"},{"submenu":"gitlens/commit/changes","when":"viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"3_gitlens_explore@0"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:commit\\b/ && view =~ /gitlens\\.views\\.(?!commits|branches\\b)/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"viewItem =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@4"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"viewItem == gitlens:commits:current-branch && !gitlens:views:commits:filtered","group":"inline@50"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"viewItem == gitlens:commits:current-branch && gitlens:views:commits:filtered","group":"inline@50"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/","group":"inline@2"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@96"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/","group":"inline@96"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/","group":"inline@97"},{"command":"gitlens.views.clearComparison","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@99"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/ && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/ && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@3"},{"command":"gitlens.views.clearComparison","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@4"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:(branch\\b(?=.*?\\b\\+comparing\\b)|results(?!:))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@1"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:compare:(branch|results(?!:))\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"7_gitlens_filter@1"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b/ && !listMultiSelection","group":"7_gitlens_filter@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.branches && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.commits && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch(?!.*?\\b\\+root\\b)\\b/ && view == gitlens.views.repositories && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/ && !listMultiSelection","group":"1_gitlens_actions@98"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"inline@96"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:compare:results(?!:)/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.copyRemoteComparisonUrl"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@0"},{"command":"gitlens.inviteToLiveShare","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && gitlens:vsls && gitlens:vsls != guest","group":"inline@1"},{"command":"gitlens.views.addAuthor","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.inviteToLiveShare","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && gitlens:vsls && gitlens:vsls != guest","group":"1_gitlens_actions@1"},{"command":"gitlens.views.addAuthor","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.addAuthor.multi","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:contributor\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.views.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"viewItem == gitlens:date-marker && config.gitlens.views.showRelativeDateMarkers && !listMultiSelection","group":"1_gitlens@0"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"inline@99"},{"command":"gitlens.views.draft.open","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@2"},{"command":"gitlens.views.drafts.delete","when":"viewItem =~ /gitlens:draft\\b(?=.*?\\b\\+mine\\b)/ && gitlens:plus","group":"6_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file(:results|\\b(?=.*?\\b\\+(committed|stashed)\\b))/","group":"inline@1","alt":"gitlens.views.openFile"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(?!fileHistory|lineHistory)\\b/","group":"inline@96"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|unstaged)\\b)/","group":"inline@96"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/","group":"inline@96"},{"command":"gitlens.views.stageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.unstageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.stashSaveFiles","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.restore","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"submenu":"gitlens/commit/file/changes","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen_file@3"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/ && !listMultiSelection","group":"2_gitlens_quickopen_file@4"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen_file@5","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"submenu":"gitlens/commit/file/commit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"submenu":"gitlens/commit/file/history","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection && gitlens:views:canCompare:file","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !listMultiSelection","group":"4_gitlens_compare@99"},{"command":"gitlens.copyRelativePathToClipboard","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:file(\\b(?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@98"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"8_gitlens_actions@1"},{"command":"gitlens.views.restore","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"8_gitlens_actions@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"5_gitlens_open@2","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.views.openPullRequestChanges","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && config.multiDiffEditor.experimental.enabled","group":"inline@2"},{"command":"gitlens.openPullRequestOnRemote","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/","group":"inline@98","alt":"gitlens.copyRemotePullRequestUrl"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"inline@99"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openPullRequestChanges","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && config.multiDiffEditor.experimental.enabled && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.openPullRequestOnRemote","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openPullRequestComparison","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"4_gitlens_compare@1"},{"command":"gitlens.plus.login","when":"viewItem == gitlens:message:signin","group":"inline@1"},{"command":"gitlens.views.loadAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"inline@1"},{"command":"gitlens.views.loadAllChildren","when":"viewItem =~ /gitlens:pager\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.openPullRequest","when":"viewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1","group":"inline@1"},{"command":"gitlens.views.openPullRequest","when":"viewItem =~ /gitlens:pullrequest\\b/ && !listMultiSelection && gitlens:action:openPullRequest > 1","group":"1_gitlens_actions@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:remote\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled","group":"inline@98"},{"command":"gitlens.disconnectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled","group":"inline@98"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@99","alt":"gitlens.copyRemoteRepositoryUrl"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pruneRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection","group":"5_gitlens_open@1"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection","group":"5_gitlens_open@2"},{"command":"gitlens.views.removeRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"6_gitlens_terminal@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection","group":"8_gitlens_actions@2"},{"command":"gitlens.disconnectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection","group":"8_gitlens_actions@2"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:remotes\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:remotes\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.showGraph","when":"viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled","group":"inline@100"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"(view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"inline@101"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.stashSave","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@2"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@3"},{"command":"gitlens.showGraph","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:plus:enabled","group":"3_gitlens_explore@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection","group":"8_gitlens_actions_@2"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"8_gitlens_filter_@1"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b/","group":"8_gitlens_filter_@2"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"inline@1"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+linked\\b)(?=.*?\\b\\+current\\b)/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"viewItem =~ /(gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)|gitlens:repositories\\b(?=.*?\\b\\+linked\\b))/ && !listMultiSelection","group":"2_gitlens_quickopen@6"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"inline@100","alt":"gitlens.views.workspaces.repo.open"},{"command":"gitlens.views.workspaces.repo.open","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@3"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_2gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection","group":"0_2gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.remove","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection","group":"0_3gitlens_actions@1"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.stashSave","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@4"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@2"},{"submenu":"gitlens/comparison/results/files/filter/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/","group":"inline@99"},{"submenu":"gitlens/comparison/results/files/filtered/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/","group":"inline@99"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:results:files\\b/ && !listMultiSelection","group":"1_gitlens@1"},{"submenu":"gitlens/comparison/results/files/filter","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"submenu":"gitlens/comparison/results/files/filtered","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@1"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@97"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stash.apply","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.stash.rename","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.stash.delete","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.stash.apply","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stash.rename","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.stash.delete","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.stash.delete.multi","when":"viewItem == gitlens:stash && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.stashSave","when":"viewItem =~ /^gitlens:(stashes|status:files)$/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.stashSave","when":"viewItem =~ /^gitlens:(stashes|status:files)$/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stashes && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(?!(missing|none))/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:ahead/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:behind/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.publishRepository","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:none/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen_terminal@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen_terminal@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen_remote@1"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.push","when":"viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"viewItem == gitlens:status:upstream:behind && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:status:upstream:same/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:status:upstream:same/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97","alt":"gitlens.copyRemoteBranchUrl"},{"command":"gitlens.views.switchToTag","when":"viewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@10"},{"command":"gitlens.views.switchToTag","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.deleteTag","when":"viewItem == gitlens:tag && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.deleteTag.multi","when":"viewItem == gitlens:tag && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:tags\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:tags\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.addRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/","group":"inline@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@2"},{"command":"gitlens.views.workspaces.createLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?!.*?\\b\\+hasPath\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@3"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/","group":"inline@3","alt":"gitlens.views.workspaces.openLocal"},{"command":"gitlens.views.workspaces.addRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.workspaces.createLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.workspaces.openLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@4"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@5"},{"command":"gitlens.views.workspaces.delete","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection","group":"6_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/","group":"inline@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.remove","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection","group":"6_gitlens_actions@1"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"viewItem =~ /gitlens:worktree\\b/ && listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"viewItem =~ /gitlens:worktree\\b/ && !listMultiSelection","group":"3_gitlens@1"},{"command":"gitlens.views.deleteWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && !listMultiSelection && !gitlens:readonly","group":"6_gitlens_actions@1"},{"command":"gitlens.views.deleteWorktree.multi","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && listMultiSelection && !gitlens:readonly","group":"6_gitlens_actions@1"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:worktrees\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:worktrees\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"}],"view/title":[{"command":"gitlens.views.switchToAnotherBranch","when":"view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.title.createBranch","when":"view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@11"},{"command":"gitlens.views.branches.setLayoutToList","when":"view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.branches.setLayoutToTree","when":"view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.branches.refresh","when":"view == gitlens.views.branches","group":"navigation@98"},{"command":"gitlens.views.branches.regroup","when":"view == gitlens.views.branches","group":"navigation@99"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view =~ /^gitlens\\.views\\.(branches|commits|contributors|fileHistory|lineHistory|remotes|repositories|tags|worktrees)/ && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@10"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view =~ /^gitlens\\.views\\.(branches|commits|contributors|fileHistory|lineHistory|remotes|repositories|tags|worktrees)/ && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@10"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.branches.setShowStashesOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.branches.setShowStashesOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.branches.regroup","when":"view == gitlens.views.branches","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!branches-view","when":"view == gitlens.views.branches","group":"9_gitlens@1"},{"command":"gitlens.views.commitDetails.refresh","when":"view == gitlens.views.commitDetails","group":"navigation@99"},{"command":"gitlens.pushRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@3"},{"command":"gitlens.views.switchToAnotherBranch","when":"view == gitlens.views.commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.showGraph","when":"view == gitlens.views.commits && gitlens:plus:enabled","group":"navigation@11"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view == gitlens.views.commits && gitlens:views:commits:filtered","group":"navigation@50"},{"command":"gitlens.views.commits.refresh","when":"view == gitlens.views.commits","group":"navigation@98"},{"command":"gitlens.views.commits.regroup","when":"view == gitlens.views.commits","group":"navigation@99"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view == gitlens.views.commits && gitlens:views:commits:filtered","group":"2_gitlens@0"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"view == gitlens.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"view == gitlens.views.commits && !gitlens:views:commits:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"view == gitlens.views.commits && gitlens:views:commits:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowStashesOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.commits.setShowStashesOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.showGraph","when":"view == gitlens.views.commits && gitlens:plus:enabled","group":"8_gitlens_toggles@0"},{"command":"gitlens.showRepositoriesView","when":"view == gitlens.views.commits && !gitlens:hasVirtualFolders","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.commits.regroup","when":"view == gitlens.views.commits","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!commits-view","when":"view == gitlens.views.commits","group":"9_gitlens@1"},{"command":"gitlens.views.addAuthors","when":"view == gitlens.views.contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.contributors.refresh","when":"view == gitlens.views.contributors","group":"navigation@98"},{"command":"gitlens.views.contributors.regroup","when":"view == gitlens.views.contributors","group":"navigation@99"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"view == gitlens.views.contributors && !gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"view == gitlens.views.contributors && gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@0"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.regroup","when":"view == gitlens.views.contributors","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!contributors-view","when":"view == gitlens.views.contributors","group":"9_gitlens@1"},{"command":"gitlens.views.drafts.create","when":"view == gitlens.views.drafts && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.drafts.refresh","when":"view == gitlens.views.drafts","group":"navigation@99"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"view == gitlens.views.drafts && config.gitlens.views.drafts.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"view == gitlens.views.drafts && !config.gitlens.views.drafts.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.drafts.info","when":"view == gitlens.views.drafts","group":"8_info@1"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view == gitlens.views.fileHistory && gitlens:views:fileHistory:canPin && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view == gitlens.views.fileHistory && gitlens:views:fileHistory:canPin && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"view == gitlens.views.fileHistory && gitlens:views:fileHistory:cursorFollowing && !gitlens:hasVirtualFolders","group":"navigation@11"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders && !gitlens:views:fileHistory:cursorFollowing","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view == gitlens.views.fileHistory","group":"navigation@99"},{"command":"gitlens.views.fileHistory.changeBase","when":"view == gitlens.views.fileHistory","group":"1_gitlens@0"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"view == gitlens.views.fileHistory && config.gitlens.views.fileHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"view == gitlens.views.fileHistory && !config.gitlens.views.fileHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.showLineHistoryView","when":"view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders","group":"8_gitlens_toggles@0"},{"command":"gitlens.showSettingsPage!file-history-view","when":"view == gitlens.views.fileHistory","group":"9_gitlens@1"},{"command":"gitlens.views.graph.openInTab","when":"view == gitlens.views.graph","group":"navigation@-100"},{"command":"gitlens.views.graph.refresh","when":"view == gitlens.views.graph","group":"navigation@-99"},{"submenu":"gitlens/graph/configuration","when":"view == gitlens.views.graph","group":"navigation@-98"},{"command":"gitlens.views.graphDetails.refresh","when":"view == gitlens.views.graphDetails","group":"navigation@99"},{"command":"gitlens.views.home.whatsNew","when":"view == gitlens.views.home","group":"navigation@1"},{"command":"gitlens.views.home.previewFeedback","when":"view == gitlens.views.home","group":"navigation@96"},{"command":"gitlens.views.home.disablePreview","when":"view == gitlens.views.home && config.gitlens.home.preview.enabled","group":"navigation@97"},{"command":"gitlens.views.home.enablePreview","when":"view == gitlens.views.home && !config.gitlens.home.preview.enabled","group":"navigation@97"},{"command":"gitlens.views.home.info","when":"view == gitlens.views.home","group":"navigation@98"},{"command":"gitlens.views.home.refresh","when":"view == gitlens.views.home","group":"navigation@99"},{"command":"gitlens.views.home.help","when":"view == gitlens.views.home","group":"1_gitlens@97"},{"command":"gitlens.views.home.issues","when":"view == gitlens.views.home","group":"2_gitlens@98"},{"command":"gitlens.views.home.discussions","when":"view == gitlens.views.home","group":"2_gitlens@99"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == tree","group":"navigation@50"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == auto","group":"navigation@50"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == list","group":"navigation@50"},{"command":"gitlens.views.launchpad.refresh","when":"view == gitlens.views.launchpad","group":"navigation@98"},{"command":"gitlens.views.launchpad.regroup","when":"view == gitlens.views.launchpad","group":"navigation@99"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"view == gitlens.views.launchpad && !config.gitlens.views.launchpad.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.launchpad.info","when":"view == gitlens.views.launchpad","group":"8_info@1"},{"command":"gitlens.views.launchpad.regroup","when":"view == gitlens.views.launchpad","group":"9_gitlens@0"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view == gitlens.views.lineHistory && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view == gitlens.views.lineHistory && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.refresh","when":"view == gitlens.views.lineHistory","group":"navigation@99"},{"command":"gitlens.views.lineHistory.changeBase","when":"view == gitlens.views.lineHistory","group":"1_gitlens@0"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"view == gitlens.views.lineHistory && config.gitlens.views.lineHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"view == gitlens.views.lineHistory && !config.gitlens.views.lineHistory.avatars","group":"5_gitlens@0"},{"command":"gitlens.showSettingsPage!line-history-view","when":"view == gitlens.views.lineHistory","group":"9_gitlens@1"},{"command":"gitlens.views.patchDetails.refresh","when":"view == gitlens.views.patchDetails","group":"navigation@98"},{"command":"gitlens.views.patchDetails.close","when":"view == gitlens.views.patchDetails","group":"navigation@99"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == tree","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == auto","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == list","group":"navigation@50"},{"command":"gitlens.views.pullRequest.refresh","when":"view == gitlens.views.pullRequest","group":"navigation@98"},{"command":"gitlens.views.pullRequest.close","when":"view == gitlens.views.pullRequest","group":"navigation@99"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"view == gitlens.views.pullRequest && !config.gitlens.views.pullRequest.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.addRemote","when":"view == gitlens.views.remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.views.remotes.setLayoutToList","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.remotes.refresh","when":"view == gitlens.views.remotes","group":"navigation@98"},{"command":"gitlens.views.remotes.regroup","when":"view == gitlens.views.remotes","group":"navigation@99"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"view == gitlens.views.remotes && !config.gitlens.views.remotes.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"view == gitlens.views.remotes && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.regroup","when":"view == gitlens.views.remotes","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!remotes-view","when":"view == gitlens.views.remotes","group":"9_gitlens@1"},{"command":"gitlens.pushRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@3"},{"command":"gitlens.views.repositories.refresh","when":"view == gitlens.views.repositories","group":"navigation@98"},{"command":"gitlens.views.repositories.regroup","when":"view == gitlens.views.repositories","group":"navigation@99"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@0"},{"submenu":"gitlens/view/repositories/sections","when":"view == gitlens.views.repositories","group":"4_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"view == gitlens.views.repositories && !config.gitlens.views.repositories.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.repositories.regroup","when":"view == gitlens.views.repositories","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!repositories-view","when":"view == gitlens.views.repositories","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits && (gitlens:views:scm:grouped:view != commits || gitlens:views:scm:grouped:welcome)","group":"navigation@1","alt":"gitlens.views.scm.grouped.commits.detach"},{"submenu":"gitlens/views/grouped/commits","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.views.commits && !gitlens:views:scm:grouped:welcome","group":"navigation@1"},{"command":"gitlens.views.scm.grouped.branches","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches && (gitlens:views:scm:grouped:view != branches || gitlens:views:scm:grouped:welcome)","group":"navigation@2","alt":"gitlens.views.scm.grouped.branches.detach"},{"submenu":"gitlens/views/grouped/branches","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.views.branches && !gitlens:views:scm:grouped:welcome","group":"navigation@2"},{"command":"gitlens.views.scm.grouped.remotes","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes && (gitlens:views:scm:grouped:view != remotes || gitlens:views:scm:grouped:welcome)","group":"navigation@3","alt":"gitlens.views.scm.grouped.remotes.detach"},{"submenu":"gitlens/views/grouped/remotes","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.views.remotes && !gitlens:views:scm:grouped:welcome","group":"navigation@3"},{"command":"gitlens.views.scm.grouped.stashes","when":"!gitlens:hasVirtualFolders && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes && (gitlens:views:scm:grouped:view != stashes || gitlens:views:scm:grouped:welcome)","group":"navigation@4","alt":"gitlens.views.scm.grouped.stashes.detach"},{"submenu":"gitlens/views/grouped/stashes","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome","group":"navigation@4"},{"command":"gitlens.views.scm.grouped.tags","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags && (gitlens:views:scm:grouped:view != tags || gitlens:views:scm:grouped:welcome)","group":"navigation@5","alt":"gitlens.views.scm.grouped.tags.detach"},{"submenu":"gitlens/views/grouped/tags","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.views.tags && !gitlens:views:scm:grouped:welcome","group":"navigation@5"},{"command":"gitlens.views.scm.grouped.worktrees","when":"!gitlens:hasVirtualFolders && gitlens:plus:enabled && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && (gitlens:views:scm:grouped:view != worktrees || gitlens:views:scm:grouped:welcome)","group":"navigation@6","alt":"gitlens.views.scm.grouped.worktrees.detach"},{"submenu":"gitlens/views/grouped/worktrees","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome","group":"navigation@6"},{"command":"gitlens.views.scm.grouped.contributors","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors && (gitlens:views:scm:grouped:view != contributors || gitlens:views:scm:grouped:welcome)","group":"navigation@7","alt":"gitlens.views.scm.grouped.contributors.detach"},{"submenu":"gitlens/views/grouped/contributors","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.views.contributors && !gitlens:views:scm:grouped:welcome","group":"navigation@7"},{"command":"gitlens.views.scm.grouped.repositories","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories && (gitlens:views:scm:grouped:view != repositories || gitlens:views:scm:grouped:welcome)","group":"navigation@8","alt":"gitlens.views.scm.grouped.repositories.detach"},{"submenu":"gitlens/views/grouped/repositories","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.views.repositories && !gitlens:views:scm:grouped:welcome","group":"navigation@8"},{"command":"gitlens.views.scm.grouped.searchAndCompare","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare && (gitlens:views:scm:grouped:view != searchAndCompare || gitlens:views:scm:grouped:welcome)","group":"navigation@9","alt":"gitlens.views.scm.grouped.searchAndCompare.detach"},{"submenu":"gitlens/views/grouped/searchAndCompare","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.views.searchAndCompare && !gitlens:views:scm:grouped:welcome","group":"navigation@9"},{"command":"gitlens.views.scm.grouped.launchpad","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad && (gitlens:views:scm:grouped:view != launchpad || gitlens:views:scm:grouped:welcome)","group":"navigation@10","alt":"gitlens.views.scm.grouped.launchpad.detach"},{"submenu":"gitlens/views/grouped/launchpad","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.views.launchpad && !gitlens:views:scm:grouped:welcome","group":"navigation@10"},{"command":"gitlens.views.scm.grouped.refresh","when":"view == gitlens.views.scm.grouped","group":"navigation@98"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.branches.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.remotes.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.stashes.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.tags.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.contributors.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.repositories.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad","group":"2_gitlens@10"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.launchpad","group":"2_gitlens@10"},{"command":"gitlens.views.scm.grouped.detachAll","when":"view == gitlens.views.scm.grouped","group":"9_gitlens@98"},{"command":"gitlens.views.scm.grouped.regroupAll","when":"view == gitlens.views.scm.grouped","group":"9_gitlens@99"},{"submenu":"gitlens/view/searchAndCompare/new","when":"view == gitlens.views.searchAndCompare","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.clear","when":"view == gitlens.views.searchAndCompare","group":"navigation@98"},{"command":"gitlens.views.searchAndCompare.refresh","when":"view == gitlens.views.searchAndCompare","group":"navigation@98"},{"command":"gitlens.views.searchAndCompare.regroup","when":"view == gitlens.views.searchAndCompare","group":"navigation@99"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"view == gitlens.views.searchAndCompare && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.searchAndCompare.regroup","when":"view == gitlens.views.searchAndCompare","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"view == gitlens.views.searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.stashSave","when":"view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.stashApply","when":"view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@11"},{"command":"gitlens.views.stashes.refresh","when":"view == gitlens.views.stashes","group":"navigation@98"},{"command":"gitlens.views.stashes.regroup","when":"view == gitlens.views.stashes","group":"navigation@99"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.regroup","when":"view == gitlens.views.stashes","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!stashes-view","when":"view == gitlens.views.stashes","group":"9_gitlens@1"},{"command":"gitlens.views.title.createTag","when":"view == gitlens.views.tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.tags.setLayoutToList","when":"view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.tags.setLayoutToTree","when":"view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.tags.refresh","when":"view == gitlens.views.tags","group":"navigation@98"},{"command":"gitlens.views.tags.regroup","when":"view == gitlens.views.tags","group":"navigation@99"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"view == gitlens.views.tags && config.gitlens.views.tags.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"view == gitlens.views.tags && !config.gitlens.views.tags.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.tags.regroup","when":"view == gitlens.views.tags","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!tags-view","when":"view == gitlens.views.tags","group":"9_gitlens@1"},{"command":"gitlens.views.timeline.refresh","when":"view == gitlens.views.timeline","group":"navigation@99"},{"command":"gitlens.views.workspaces.create","when":"view == gitlens.views.workspaces && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.workspaces.refresh","when":"view == gitlens.views.workspaces","group":"navigation@99"},{"command":"gitlens.views.workspaces.info","when":"view == gitlens.views.workspaces","group":"8_info@1"},{"command":"gitlens.views.title.createWorktree","when":"view == gitlens.views.worktrees","group":"navigation@10"},{"command":"gitlens.views.worktrees.refresh","when":"view == gitlens.views.worktrees","group":"navigation@98"},{"command":"gitlens.views.worktrees.regroup","when":"view == gitlens.views.worktrees","group":"navigation@99"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@0"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@11"},{"command":"gitlens.views.worktrees.regroup","when":"view == gitlens.views.worktrees","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"view == gitlens.views.worktrees","group":"9_gitlens@1"}],"webview/context":[{"command":"gitlens.graph.openWorktree","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@1"},{"command":"gitlens.graph.switchToAnotherBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.graph.switchToBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.graph.openWorktreeInNewWindow","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@2"},{"command":"gitlens.graph.openInWorktree","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@3"},{"command":"gitlens.graph.publishBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.pull","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.push","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.mergeBranchInto","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.resetToTip","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.rebaseOntoBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.renameBranch","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.graph.deleteBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.graph.associateIssueWithBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@8"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_@7"},{"command":"gitlens.graph.createTag","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_@8"},{"command":"gitlens.graph.createWorktree","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_@9"},{"command":"gitlens.graph.createPullRequest","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"1_gitlens_actions_@10"},{"command":"gitlens.graph.openBranchOnRemote","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"3_gitlens_explore@11"},{"command":"gitlens.graph.compareWithUpstream","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.compareBranchWithHead","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.graph.compareWithMergeBase","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@3"},{"command":"gitlens.graph.compareWithWorking","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@4"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@5"},{"submenu":"gitlens/share","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_a_share@1"},{"command":"gitlens.graph.copy","when":"webviewItem =~ /gitlens:(branch|commit|contributor|launchpad:item|pullrequest|stash|tag)\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.graph.copySha","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.graph.copyMessage","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.graph.hideRemote","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.hideLocalBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|remote)\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.hideRemoteBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.cherryPick","when":"webviewItem =~ /gitlens:commit\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.undoCommit","when":"webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.revert","when":"webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.resetToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.resetCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.rebaseOntoCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.graph.switchToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.graph.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.graph.createCloudPatch","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.graph.createTag","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@4"},{"submenu":"gitlens/graph/commit/changes","when":"webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.showInDetailsView","when":"webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection","group":"3_gitlens_explore@0"},{"command":"gitlens.graph.openCommitOnRemote","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.graph.compareWithHead","when":"webviewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.copyPatchToClipboard","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_cutcopypaste@97"},{"command":"gitlens.graph.addAuthor","when":"webviewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"submenu":"gitlens/graph/markers","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"0_markers@0"},{"command":"gitlens.graph.columnAuthorOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:visible\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnAuthorOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:hidden\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnRefOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:visible\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnRefOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:hidden\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnChangesOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:visible\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnChangesOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:hidden\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnMessageOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:visible\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnMessageOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:hidden\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnDateTimeOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:visible\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnDateTimeOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:hidden\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnGraphOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnGraphOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:hidden\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnShaOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:visible\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnShaOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:hidden\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnGraphCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible(?![^,]*\\+compact\\b)/","group":"2_columns@1"},{"command":"gitlens.graph.columnGraphDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible[^,]*\\+compact\\b/","group":"2_columns@1"},{"command":"gitlens.graph.resetColumnsDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@1"},{"command":"gitlens.graph.resetColumnsCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@2"},{"command":"gitlens.graph.openPullRequestChanges","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.openPullRequest","when":"webviewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1","group":"1_gitlens_actions@98"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"webviewItem =~ /gitlens:pullrequest\\b/","group":"1_gitlens_actions@99"},{"command":"gitlens.graph.openPullRequestComparison","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.stash.apply","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.stash.rename","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.stash.delete","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.switchToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.resetToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.deleteTag","when":"webviewItem == gitlens:tag && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.hideTag","when":"webviewItem =~ /gitlens:tag\\b/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.push","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.pull","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.commitViaSCM","when":"webviewItem == gitlens:wip && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.graph.generateCommitMessage","when":"webviewItem == gitlens:wip && config.gitlens.ai.generateCommitMessage.enabled && !listMultiSelection && gitlens:gk:organization:ai:enabled && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens@2"},{"command":"gitlens.graph.stash.save","when":"webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.hideRefGroup","when":"webviewItemGroup =~ /gitlens:refGroup\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@12"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.graph.compareSelectedCommits.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listDoubleSelection","group":"4_gitlens_compare@2"}]},"submenus":[{"id":"gitlens/commit/browse","label":"Browse"},{"id":"gitlens/commit/changes","label":"Open Changes"},{"id":"gitlens/commit/copy","label":"Copy As"},{"id":"gitlens/commit/file/changes","label":"Open Changes with"},{"id":"gitlens/commit/file/commit","label":"Commit"},{"id":"gitlens/commit/file/history","label":"File History"},{"id":"gitlens/comparison/results/files/filter","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filter/inline","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filtered","label":"Filter Files","icon":"$(filter-filled)"},{"id":"gitlens/comparison/results/files/filtered/inline","label":"Filter Files","icon":"$(filter-filled)"},{"id":"gitlens/editor/annotations","label":"File Annotations","icon":"$(gitlens-gitlens)"},{"id":"gitlens/editor/changes","label":"Open Changes"},{"id":"gitlens/editor/context/changes","label":"Open Changes"},{"id":"gitlens/editor/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/history","label":"File History"},{"id":"gitlens/editor/lineNumber/context/changes","label":"Open Changes"},{"id":"gitlens/editor/lineNumber/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/lineNumber/context/share","label":"Share"},{"id":"gitlens/editor/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/explorer/changes","label":"Open Changes"},{"id":"gitlens/explorer/history","label":"File History"},{"id":"gitlens/explorer/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/graph/commit/changes","label":"Open Changes"},{"id":"gitlens/graph/configuration","label":"Commit Graph Settings","icon":"$(gear)"},{"id":"gitlens/graph/markers","label":"Scroll Markers"},{"id":"gitlens/scm/resourceFolder/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceGroup/changes","label":"Open Changes"},{"id":"gitlens/scm/resourceState/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceState/history","label":"File History"},{"id":"gitlens/scm/resourceState/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/share","label":"Share"},{"id":"gitlens/view/repositories/sections","label":"Sections"},{"id":"gitlens/view/searchAndCompare/new","label":"New Search or Compare","icon":"$(add)"},{"id":"gitlens/views/grouped/branches","label":"Branches","icon":"$(gitlens-branches-view-filled)"},{"id":"gitlens/views/grouped/commits","label":"Commits","icon":"$(gitlens-commits-view-filled)"},{"id":"gitlens/views/grouped/contributors","label":"Contributors","icon":"$(gitlens-contributors-view-filled)"},{"id":"gitlens/views/grouped/launchpad","label":"Launchpad","icon":"$(gitlens-launchpad-view-filled)"},{"id":"gitlens/views/grouped/more","label":"View Options","icon":"$(ellipsis)"},{"id":"gitlens/views/grouped/remotes","label":"Remotes","icon":"$(gitlens-remotes-view-filled)"},{"id":"gitlens/views/grouped/repositories","label":"Repositories","icon":"$(gitlens-repositories-view-filled)"},{"id":"gitlens/views/grouped/searchAndCompare","label":"Search & Compare","icon":"$(gitlens-search-view-filled)"},{"id":"gitlens/views/grouped/stashes","label":"Stashes","icon":"$(gitlens-stashes-view-filled)"},{"id":"gitlens/views/grouped/tags","label":"Tags","icon":"$(gitlens-tags-view-filled)"},{"id":"gitlens/views/grouped/worktrees","label":"Worktrees","icon":"$(gitlens-worktrees-view-filled)"}],"keybindings":[{"command":"gitlens.key.alt+,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key.alt+.","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.alt+enter","key":"alt+enter","when":"gitlens:key:alt+enter"},{"command":"gitlens.key.alt+left","key":"alt+left","when":"gitlens:key:alt+left"},{"command":"gitlens.key.alt+right","key":"alt+right","when":"gitlens:key:alt+right"},{"command":"gitlens.key.ctrl+enter","key":"ctrl+enter","when":"gitlens:key:ctrl+enter"},{"command":"gitlens.key.ctrl+left","key":"ctrl+left","when":"gitlens:key:ctrl+left","mac":"cmd+left"},{"command":"gitlens.key.ctrl+right","key":"ctrl+right","when":"gitlens:key:ctrl+right","mac":"cmd+right"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"ctrl+shift+g"},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !quickFixWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !referenceSearchVisible && !codeActionMenuVisible && !parameterHintsVisible && !isInEmbeddedEditor"},{"command":"gitlens.key.left","key":"left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"right","when":"gitlens:key:right"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked","mac":"cmd+alt+g shift+,"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithNextInDiffLeft","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffLeft","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithNextInDiffRight","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/","mac":"cmd+alt+g shift+."},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.gitCommands","key":"alt+/","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.gitCommands","key":"ctrl+shift+g /","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g /"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled","mac":"cmd+alt+g c"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g h"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g shift+h"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g s"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens","mac":"cmd+alt+g shift+b"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:blameable"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:blameable","mac":"cmd+alt+g b"},{"command":"gitlens.views.branches.copy","key":"ctrl+c","when":"focusedView == gitlens.views.branches","mac":"cmd+c"},{"command":"gitlens.views.commits.copy","key":"ctrl+c","when":"focusedView == gitlens.views.commits","mac":"cmd+c"},{"command":"gitlens.views.contributors.copy","key":"ctrl+c","when":"focusedView == gitlens.views.contributors","mac":"cmd+c"},{"command":"gitlens.views.drafts.copy","key":"ctrl+c","when":"focusedView == gitlens.views.drafts","mac":"cmd+c"},{"command":"gitlens.views.fileHistory.copy","key":"ctrl+c","when":"focusedView == gitlens.views.fileHistory","mac":"cmd+c"},{"command":"gitlens.views.lineHistory.copy","key":"ctrl+c","when":"focusedView == gitlens.views.lineHistory","mac":"cmd+c"},{"command":"gitlens.views.pullRequest.copy","key":"ctrl+c","when":"focusedView == gitlens.views.pullRequest","mac":"cmd+c"},{"command":"gitlens.views.remotes.copy","key":"ctrl+c","when":"focusedView == gitlens.views.remotes","mac":"cmd+c"},{"command":"gitlens.views.repositories.copy","key":"ctrl+c","when":"focusedView == gitlens.views.repositories","mac":"cmd+c"},{"command":"gitlens.views.scm.grouped.branches","key":"2","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches"},{"command":"gitlens.views.scm.grouped.commits","key":"1","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits"},{"command":"gitlens.views.scm.grouped.contributors","key":"7","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors"},{"command":"gitlens.views.scm.grouped.launchpad","key":"0","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad"},{"command":"gitlens.views.scm.grouped.remotes","key":"3","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes"},{"command":"gitlens.views.scm.grouped.repositories","key":"8","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories"},{"command":"gitlens.views.scm.grouped.searchAndCompare","key":"9","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare"},{"command":"gitlens.views.scm.grouped.stashes","key":"4","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes"},{"command":"gitlens.views.scm.grouped.tags","key":"5","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags"},{"command":"gitlens.views.scm.grouped.worktrees","key":"6","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees"},{"command":"gitlens.views.searchAndCompare.copy","key":"ctrl+c","when":"focusedView == gitlens.views.searchAndCompare","mac":"cmd+c"},{"command":"gitlens.views.stashes.copy","key":"ctrl+c","when":"focusedView == gitlens.views.stashes","mac":"cmd+c"},{"command":"gitlens.views.tags.copy","key":"ctrl+c","when":"focusedView == gitlens.views.tags","mac":"cmd+c"},{"command":"gitlens.views.workspaces.copy","key":"ctrl+c","when":"focusedView == gitlens.views.workspaces","mac":"cmd+c"},{"command":"gitlens.views.worktrees.copy","key":"ctrl+c","when":"focusedView == gitlens.views.worktrees","mac":"cmd+c"}],"customEditors":[{"viewType":"gitlens.rebase","displayName":"GitLens Interactive Rebase Editor","selector":[{"filenamePattern":"git-rebase-todo"}]}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${query.ref})","normalizeDriveLetter":true,"tildify":true,"workspaceSuffix":"GitLens"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"$(gitlens-gitlens)"},{"id":"gitlensInspect","title":"GitLens Inspect","icon":"$(gitlens-gitlens-inspect)"},{"id":"gitlensPatch","title":"GitLens Patch","icon":"$(gitlens-cloud-patch)"}],"panel":[{"id":"gitlensPanel","title":"GitLens","icon":"$(gitlens-graph)"}]},"viewsWelcome":[{"view":"gitlens.views.drafts","contents":"Cloud Patches ᴘʀᴇᴠɪᴇᴡ — privately and securely share code with specific teammates and other developers, accessible from anywhere. Enhance collaboration without adding noise to your repositories."},{"view":"gitlens.views.drafts","contents":"[Create Cloud Patch](command:gitlens.views.drafts.create)","when":"gitlens:plus"},{"view":"gitlens.views.drafts","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22cloud-patches%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22cloud-patches%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.drafts","contents":"An account is required and may require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/) in the future.","when":"gitlens:plus:state != 6"},{"view":"gitlens.views.launchpad","contents":"[Launchpad](command:gitlens.views.launchpad.info \"Learn about Launchpad\") — organizes your pull requests into actionable groups to help you focus and keep your team unblocked."},{"view":"gitlens.views.launchpad","contents":"[Connect an Integration...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nAllows Launchpad to organize your pull requests into actionable groups and keep your team unblocked.","when":"gitlens:launchpad:connect"},{"view":"gitlens.views.launchpad","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"!gitlens:launchpad:connect && gitlens:plus:state == -1"},{"view":"gitlens.views.launchpad","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nContinuing gives you 3 days to preview Launchpad and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) for full access to Pro features.","when":"false && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.launchpad","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"!gitlens:launchpad:connect && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.launchpad","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.launchpad","contents":"Save 33% or more on your 1st seat of Pro.","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && (gitlens:promo == pro50 || !gitlens:promo)"},{"view":"gitlens.views.launchpad","contents":"Get the gift of a better DevEx in 2025! Save up to 80% now","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == gkholiday"},{"view":"gitlens.views.launchpad","contents":"Your Pro trial has ended. Please upgrade for full access to Launchpad and other Pro features.","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.launchpad","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nReactivate your Pro trial and experience Launchpad and all the new Pro features — free for another 14 days!","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"GitLens groups many related views—Commits, Branches, Stashes, etc—here for easier view management.\n\n[Continue](command:gitlens.views.scm.grouped.welcome.dismiss)\n\nUse the tabs above to navigate, or detach the views you want to keep separated. You can regroup them anytime using the 'x' in the view header.","when":"gitlens:views:scm:grouped:welcome && gitlens:install:new"},{"view":"gitlens.views.scm.grouped","contents":"In GitLens 16, we've grouped many related views—Commits, Branches, Stashes, etc—here for easier view management.\n\n[Continue](command:gitlens.views.scm.grouped.welcome.dismiss)\n\nPrefer them separate? [Restore views to previous locations](command:gitlens.views.scm.grouped.welcome.restore)\n\nUse the tabs above to navigate, or detach the views you want to keep separated. You can regroup them anytime using the 'x' in the view header.","when":"gitlens:views:scm:grouped:welcome && !gitlens:install:new"},{"view":"gitlens.views.scm.grouped","contents":"[Launchpad](command:gitlens.views.launchpad.info \"Learn about Launchpad\") — organizes your pull requests into actionable groups to help you focus and keep your team unblocked.","when":"gitlens:views:scm:grouped:view == launchpad"},{"view":"gitlens.views.scm.grouped","contents":"[Connect an Integration...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nAllows Launchpad to organize your pull requests into actionable groups and keep your team unblocked.","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connect"},{"view":"gitlens.views.scm.grouped","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:state == -1"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nContinuing gives you 3 days to preview Launchpad and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) for full access to Pro features.","when":"gitlens:views:scm:grouped:view == launchpad && false && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.scm.grouped","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.scm.grouped","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"Save 33% or more on your 1st seat of Pro.","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && (gitlens:promo == pro50 || !gitlens:promo)"},{"view":"gitlens.views.scm.grouped","contents":"Get the gift of a better DevEx in 2025! Save up to 80% now","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == gkholiday"},{"view":"gitlens.views.scm.grouped","contents":"Your Pro trial has ended. Please upgrade for full access to Launchpad and other Pro features.","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nReactivate your Pro trial and experience Launchpad and all the new Pro features — free for another 14 days!","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:views:scm:grouped:view == searchAndCompare && gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)","when":"gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) ᴾᴿᴼ — minimize context switching by allowing you to work on multiple branches simultaneously.","when":"gitlens:views:scm:grouped:view == worktrees && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"[Create Worktree...](command:gitlens.views.createWorktree)","when":"gitlens:views:scm:grouped:view == worktrees && !gitlens:plus:required"},{"view":"gitlens.views.scm.grouped","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state == -1"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nContinuing gives you 3 days to preview Worktrees and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) for full access to Pro features.","when":"false && gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.scm.grouped","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.scm.grouped","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"Save 33% or more on your 1st seat of Pro.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && (gitlens:promo == pro50 || !gitlens:promo)"},{"view":"gitlens.views.scm.grouped","contents":"Get the gift of a better DevEx in 2025! Save up to 80% now","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == gkholiday"},{"view":"gitlens.views.scm.grouped","contents":"Your Pro trial has ended. Please upgrade for full access to Worktrees and other Pro features.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nReactivate your Pro trial and experience Worktrees and all the new Pro features — free for another 14 days!","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"Use on privately-hosted repos require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state != 6"},{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.workspaces","contents":"Workspaces ᴘʀᴇᴠɪᴇᴡ — group and manage multiple repositories together, accessible from anywhere, streamlining your workflow.\n\nCreate workspaces just for yourself or share (coming soon in GitLens) them with your team for faster onboarding and better collaboration."},{"view":"gitlens.views.workspaces","contents":"[Create Cloud Workspace](command:gitlens.views.workspaces.create)","when":"gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22workspaces%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22workspaces%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"An account is required and may require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/) in the future.","when":"gitlens:plus:state != 6"},{"view":"gitlens.views.worktrees","contents":"[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) ᴾᴿᴼ — minimize context switching by working on multiple branches simultaneously."},{"view":"gitlens.views.worktrees","contents":"[Create Worktree...](command:gitlens.views.createWorktree)","when":"!gitlens:plus:required"},{"view":"gitlens.views.worktrees","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:state == -1"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nContinuing gives you 3 days to preview Worktrees and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) for full access to Pro features.","when":"false && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.worktrees","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.worktrees","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)","when":"gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.worktrees","contents":"Save 33% or more on your 1st seat of Pro.","when":"gitlens:plus:required && gitlens:plus:state == 4 && (gitlens:promo == pro50 || !gitlens:promo)"},{"view":"gitlens.views.worktrees","contents":"Get the gift of a better DevEx in 2025! Save up to 80% now","when":"gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == gkholiday"},{"view":"gitlens.views.worktrees","contents":"Your Pro trial has ended. Please upgrade for full access to Worktrees and other Pro features.","when":"gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nReactivate your Pro trial and experience Worktrees and all the new Pro features — free for another 14 days!","when":"gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.worktrees","contents":"Use on privately-hosted repos require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/).","when":"gitlens:plus:state != 6"}],"views":{"scm":[{"id":"gitlens.views.repositories","name":"Repositories","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories)","contextualTitle":"GitLens","icon":"$(gitlens-repositories-view)","visibility":"hidden"},{"id":"gitlens.views.commits","name":"Commits","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits)","contextualTitle":"GitLens","icon":"$(gitlens-commits-view)","visibility":"visible"},{"id":"gitlens.views.branches","name":"Branches","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches)","contextualTitle":"GitLens","icon":"$(gitlens-branches-view)","visibility":"collapsed"},{"id":"gitlens.views.remotes","name":"Remotes","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes)","contextualTitle":"GitLens","icon":"$(gitlens-remotes-view)","visibility":"collapsed"},{"id":"gitlens.views.stashes","name":"Stashes","when":"!gitlens:disabled && !gitlens:hasVirtualFolders && !(config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes)","contextualTitle":"GitLens","icon":"$(gitlens-stashes-view)","visibility":"collapsed"},{"id":"gitlens.views.tags","name":"Tags","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags)","contextualTitle":"GitLens","icon":"$(gitlens-tags-view)","visibility":"collapsed"},{"id":"gitlens.views.worktrees","name":"Worktrees","when":"!gitlens:disabled && !gitlens:hasVirtualFolders && gitlens:plus:enabled && !(config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees)","contextualTitle":"GitLens","icon":"$(gitlens-worktrees-view)","visibility":"collapsed"},{"id":"gitlens.views.contributors","name":"Contributors","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors)","contextualTitle":"GitLens","icon":"$(gitlens-contributors-view)","visibility":"collapsed"},{"id":"gitlens.views.scm.grouped","name":"GitLens","when":"!gitlens:disabled && ((config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches) || (config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits) || (config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors) || (config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad) || (config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes) || (config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories) || (config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare) || (config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes) || (config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags) || (config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees))","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","visibility":"visible"}],"gitlensInspect":[{"type":"webview","id":"gitlens.views.commitDetails","name":"Inspect","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.pullRequest","name":"Pull Request","when":"!gitlens:disabled && gitlens:views:pullRequest:visible","contextualTitle":"GitLens","icon":"$(git-pull-request)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.lineHistory","name":"Line History","when":"!gitlens:disabled && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":1,"visibility":"collapsed"},{"id":"gitlens.views.fileHistory","name":"File History","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":2,"visibility":"visible"},{"type":"webview","id":"gitlens.views.timeline","name":"Visual File History","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(graph-scatter)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.searchAndCompare","name":"Search & Compare","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare)","contextualTitle":"GitLens","icon":"$(gitlens-search-view)","initialSize":2,"visibility":"visible"}],"gitlens":[{"type":"webview","id":"gitlens.views.home","name":"Home","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.launchpad","name":"Launchpad","when":"!(config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad)","contextualTitle":"GitLens","icon":"$(gitlens-launchpad-view)","initialSize":2,"visibility":"collapsed"},{"id":"gitlens.views.drafts","name":"Cloud Patches","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":2,"visibility":"collapsed"},{"id":"gitlens.views.workspaces","name":"Cloud Workspaces","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-workspaces-view)","initialSize":2,"visibility":"collapsed"}],"gitlensPanel":[{"type":"webview","id":"gitlens.views.graph","name":"Graph","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-graph)","initialSize":4,"visibility":"visible"},{"type":"webview","id":"gitlens.views.graphDetails","name":"Graph Details","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":1,"visibility":"visible"}],"gitlensPatch":[{"type":"webview","id":"gitlens.views.patchDetails","name":"Patch","when":"!gitlens:untrusted && config.gitlens.cloudPatches.enabled && gitlens:views:patchDetails:mode","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":24}]},"walkthroughs":[{"id":"welcome","title":"Get Started With GitLens","description":"Supercharge Git and unlock untapped knowledge within your repo to better understand, write, and review code.","steps":[{"id":"get-started-community","title":"Welcome to GitLens","description":"Thank you for installing GitLens—the most popular Git extension for VS Code!\n\n**Community vs. Pro**\n\nYou're using **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\n**Leverage powerful workflows with GitLens Pro**\n\nThe **GitLens Pro** edition unlocks advanced features to accelerate PR reviews, gain actionable insights with rich code visuals, and streamline team collaboration to boost productivity.\n\n[Get Started with GitLens Pro](command:gitlens.walkthrough.plus.signUp)","media":{"markdown":"walkthroughs/welcome/get-started-community.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"!gitlens:plus:state || gitlens:plus:state <= 2"},{"id":"welcome-in-trial","title":"Welcome to GitLens Pro","description":"Thanks for starting your **GitLens Pro** trial.\n\nComplete this walkthrough to experience enhanced PR review tools, deeper code history visualizations, and streamlined collaboration to help boost your productivity.\n\n[Continue the Walkthrough](command:gitlens.walkthrough.openWalkthrough)\n\nOnce your trial ends, you'll return to **GitLens Community** — where you can still leverage features like in-editor blame annotations, hovers, CodeLens, and more. [Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade) today to continue enjoying the full experience.\n\n[Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade)","media":{"markdown":"walkthroughs/welcome/welcome-in-trial.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 3"},{"id":"welcome-in-trial-expired","title":"Get the most out of GitLens","description":"Thanks for installing GitLens and trying out GitLens Pro.\n\nYou're now on the **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\nLearn more about the [difference between GitLens Community vs. Pro](command:gitlens.walkthrough.openCommunityVsPro).\n\n**Unlock more powerful tools with GitLens Pro**\n\n[Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade)\n\nWith GitLens Pro, you can accelerate PR reviews, visualize code history in-depth, and enhance collaboration across your team. It's the perfect upgrade to streamline your VS Code workflow.","media":{"markdown":"walkthroughs/welcome/welcome-in-trial-expired.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 4"},{"id":"welcome-in-trial-expired-eligible","title":"Get the most out of GitLens ","description":"Thanks for installing GitLens and trying out GitLens Pro.\n\nYou're using **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\n**Unlock more powerful tools — Try GitLens Pro again** free for another 14 days.\n\n[Reactivate GitLens Pro Trial](command:gitlens.walkthrough.plus.reactivate)\n\nWith GitLens Pro, you can accelerate PR reviews, visualize code history in-depth, and enhance collaboration across your team. It's the perfect upgrade to streamline your VS Code workflow.","media":{"markdown":"walkthroughs/welcome/welcome-in-trial-expired-eligible.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 5"},{"id":"welcome-paid","title":"Discover the Benefits of GitLens Pro","description":"As a **GitLens Pro** user, you have access to powerful tools that accelerate PR reviews, provide deeper code history visualizations, and streamline collaboration across your team.\n\n[Continue the Walkthrough](command:gitlens.walkthrough.openWalkthrough)\n\nTo get the most out of your **GitLens Pro** experience, complete the walkthrough and visit our Help Center for in-depth guides.\n\n**[Learn more in the Help Center](command:gitlens.walkthrough.openHelpCenter)**","media":{"markdown":"walkthroughs/welcome/welcome-paid.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 6"},{"id":"visualize-code-history","title":"Interactive Code History","description":"$(gitlens-gitlens)  **Blame Annotations and Hovers**\n\nSee who changed what and why with in-editor blame annotations, hovers, and CodeLens.\n\n$(gitlens-graph)  **Visual Commit Graph & Search**\n\nNavigate complex Git histories with clarity using the interactive Commit Graph to visualize changes and search your repository.\n\n[View your Commit Graph](command:gitlens.walkthrough.showGraph)\n\n$(gitlens-gitlens-inspect)  **GitLens Inspect**\n\nDive deep into the revision history of files, folders, or specific lines. Get the context you need to understand changes faster. [Open GitLens Inspect](command:gitlens.walkthrough.gitlensInspect)\n\n$(gitlens-play-button)  [Watch a video about Interactive Code History](command:gitlens.walkthrough.openInteractiveCodeHistory)","media":{"markdown":"walkthroughs/welcome/visualize-code-history.md"},"completionEvents":["onContext:gitlens:walkthroughState:visualizeCodeHistory == true"]},{"id":"accelerate-pr-reviews","title":"Accelerate PR Reviews","description":"$(gitlens-launchpad-view)  **Launchpad: Your PR Hub**\n\nEasily manage GitHub pull requests by status, prioritize tasks, and spot bottlenecks—all within VS Code.\n\n[View My PRs in Launchpad](command:gitlens.walkthrough.showLaunchpad)\n\n💡 [Connect](command:gitlens.walkthrough.connectIntegrations) your GitHub or host provider to use Launchpad and accelerate PR reviews\n\n$(folder-opened)  **Worktrees: Multi-branch efficiency**\n\nWork on multiple branches simultaneously to handle hotfixes, new features, or experiments—without disrupting your main workspace.\n\n\n[Add a worktree](command:gitlens.walkthrough.worktree.create)\n$(gitlens-play-button)  [Watch how to accelerate code reviews](command:gitlens.walkthrough.openAcceleratePrReviews)","media":{"markdown":"walkthroughs/welcome/accelerate-pr-reviews.md"},"completionEvents":["onContext:gitlens:walkthroughState:prReviews == true"]},{"id":"streamline-collaboration","title":"Streamline Collaboration","description":"$(gitlens-cloud-patch)  **Cloud Patches: Collaborate before PRs**\n\nShare and iterate on code without committing to the repo or affecting CI. Keep your team moving forward with accessible, flexible Cloud Patches.\n\n[Open Cloud Patches](command:gitlens.walkthrough.showDraftsView)\n\n$(gitlens-code-suggestion)  **Code Suggest**\n\nReview GitHub and GitLab pull requests and send suggested changes to teammates directly from GitLens.\n\n$(gitlens-play-button)  [Watch how to enhance collaboration in GitLens](command:gitlens.walkthrough.openStreamlineCollaboration)","media":{"markdown":"walkthroughs/welcome/streamline-collaboration.md"},"completionEvents":["onContext:gitlens:walkthroughState:streamlineCollaboration == true"]},{"id":"improve-workflows-with-integrations","title":"Improve Workflows With Integrations","description":"$(extensions)  **Integrations**\n\nConnect to GitHub, GitLab, and Jira to associate PRs and issues to branches and commits in GitLens. Track and take action on PRs from Launchpad, quickly start work on issues, and get enhanced information in autolinks.\n\n[Connect Integrations](command:gitlens.walkthrough.connectIntegrations)\n\n$(link)  **Autolinks**\n\nGitLens automatically detects patterns in commit messages to generate links for pull requests and issues across services like GitHub, GitLab, Gitea, Gerrit, Google Source, Bitbucket, Azure DevOps, and custom servers.\n\n[Configure autolinks](command:gitlens.walkthrough.showAutolinks) for custom pattern-matching with other services.\n\n$(gitlens-play-button)  [Watch how integrations improve GitLens](command:gitlens.walkthrough.openStartIntegrations)","media":{"markdown":"walkthroughs/welcome/improve-workflows-with-integrations.md"},"completionEvents":["onContext:gitlens:walkthroughState:integrations == true"]}]}]},"scripts":{"analyze:bundle":"webpack --mode production --env analyzeBundle","analyze:deps":"webpack --env analyzeDeps","build":"webpack --mode development","build:quick":"webpack --mode development --env skipLint","build:extension":"webpack --mode development --config-name extension:node","build:extension:browser":"webpack --mode development --config-name extension:webworker","build:webviews":"webpack --mode development --config-name webviews","build:icons":"pnpm run icons:svgo && pnpm fantasticon && pnpm run icons:apply && pnpm run icons:export","build:tests":"node ./scripts/esbuild.tests.mjs --mode development","// Extracts the contributions from package.json into contributions.json":"//","extract:contributions":"node --experimental-strip-types ./scripts/generateContributions.mts --extract","// Generates contributions in contributions.json into package.json":"//","generate:contributions":"node --experimental-strip-types ./scripts/generateContributions.mts","// Generates docs/telemetry-events.md":"//","generate:docs:telemetry":"node ./scripts/generateTelemetryDocs.mjs","generate:emoji":"node ./scripts/generateEmojiShortcodeMap.mjs","// Generates ThirdPartyNotices.txt":"//","generate:licenses":"node ./scripts/generateLicenses.mjs","bundle":"webpack --mode production","bundle:extension":"webpack --mode production --config-name extension:node","clean":"pnpx rimraf --glob dist out .vscode-test .vscode-test-web .eslintcache* tsconfig*.tsbuildinfo","clean:all":"pnpm run clean && pnpm run clean:deps","clean:lint":"pnpx rimraf .eslintcache","clean:deps":"pnpx rimraf node_modules","copy:images":"webpack --config webpack.config.images.mjs","graph:link":"pnpm link @gitkraken/gitkraken-components","graph:link:main":"pushd \"../GitKrakenComponents\" && pnpm link && popd && pnpm graph:link","graph:unlink":"pnpm unlink @gitkraken/gitkraken-components && pnpm install --force","graph:unlink:main":"pnpm graph:unlink && pushd \"../GitKrakenComponents\" && pnpm unlink && popd","icons:apply":"node ./scripts/applyIconsContribution.mjs","icons:export":"node ./scripts/export-codicons.mjs","icons:svgo":"svgo -q -f ./images/icons/ --config svgo.config.js","lint":"pnpm run clean:lint && eslint .","lint:fix":"pnpm run clean:lint && eslint . --fix","lint:webviews":"pnpm run clean:lint && eslint \"src/webviews/apps/**/*.ts?(x)\"","package":"vsce package --no-dependencies","package-pre":"pnpm run patch-pre && pnpm run package --pre-release","patch-pre":"node ./scripts/applyPreReleasePatch.mjs","prep-release":"node ./scripts/prep-release.mjs","pretty":"prettier --config .prettierrc --write .","pretty:check":"prettier --config .prettierrc --check .","pub":"vsce publish --no-dependencies","pub-pre":"vsce publish --no-dependencies --pre-release","rebuild":"pnpm run reset && pnpm run build","reset":"pnpm run clean && pnpm install --force","test":"vscode-test","test:e2e":"playwright test -c tests/e2e/playwright.config.ts","watch":"webpack --watch --mode development","watch:extension":"webpack --watch --mode development --config-name extension","watch:quick":"webpack --watch --mode development --env skipLint","watch:webviews":"webpack --watch --mode development --config-name webviews","watch:tests":"node ./scripts/esbuild.tests.mjs --watch --mode development","web":"vscode-test-web --extensionDevelopmentPath=. --folder-uri=vscode-vfs://github/gitkraken/vscode-gitlens","web:serve":"node -e \"const p = require('path'); const h = require('os').homedir(); require('child_process').execSync('pnpx  serve --cors -l 5000 --ssl-cert '+p.resolve(h, 'certs/localhost.pem')+' --ssl-key '+p.resolve(h, 'certs/localhost-key.pem'), { stdio: 'inherit' })\"","update-dts":"pushd \"src/@types\" && pnpx  @vscode/dts dev && popd","update-dts:main":"pushd \"src/@types\" && pnpx  @vscode/dts main && popd","pretest":"pnpm run build:tests","vscode:prepublish":"pnpm run bundle"},"dependencies":{"@gitkraken/gitkraken-components":"10.7.0","@gitkraken/provider-apis":"0.25.7","@gitkraken/shared-web-components":"0.1.1-rc.15","@gk-nzaytsev/fast-string-truncated-width":"1.1.0","@lit-labs/signals":"0.1.1","@lit/context":"1.1.3","@lit/react":"1.0.6","@lit/task":"1.0.1","@octokit/graphql":"8.1.1","@octokit/request":"9.1.3","@octokit/request-error":"6.1.5","@octokit/types":"13.6.1","@opentelemetry/api":"1.9.0","@opentelemetry/exporter-trace-otlp-http":"0.56.0","@opentelemetry/resources":"1.29.0","@opentelemetry/sdk-trace-base":"1.29.0","@opentelemetry/semantic-conventions":"1.28.0","@shoelace-style/shoelace":"2.18.0","@vscode/codicons":"0.0.36","billboard.js":"3.14.2","https-proxy-agent":"5.0.1","iconv-lite":"0.6.3","lit":"3.2.1","marked":"15.0.3","node-fetch":"2.7.0","os-browserify":"0.3.0","path-browserify":"1.0.1","react":"16.8.4","react-dom":"16.8.4","signal-utils":"0.20.0","slug":"10.0.0","sortablejs":"1.15.0"},"devDependencies":{"@eamodio/eslint-lite-webpack-plugin":"0.2.0","@eslint/js":"9.16.0","@playwright/test":"1.49.1","@swc/core":"1.10.1","@twbs/fantasticon":"3.0.0","@types/eslint__js":"8.42.3","@types/mocha":"10.0.10","@types/node":"18.15.13","@types/react":"17.0.83","@types/react-dom":"17.0.25","@types/slug":"5.0.9","@types/sortablejs":"1.15.8","@types/vscode":"1.82.0","@typescript-eslint/parser":"8.18.0","@vscode/test-cli":"^0.0.10","@vscode/test-electron":"2.4.1","@vscode/test-web":"0.0.65","@vscode/vsce":"3.2.1","cheerio":"1.0.0-rc.12","circular-dependency-plugin":"5.2.2","clean-webpack-plugin":"4.0.0","copy-webpack-plugin":"12.0.2","csp-html-webpack-plugin":"5.1.0","css-loader":"7.1.2","css-minimizer-webpack-plugin":"7.0.0","cssnano-preset-advanced":"7.0.6","esbuild":"0.24.0","esbuild-loader":"4.2.2","esbuild-node-externals":"1.15.0","esbuild-sass-plugin":"3.3.1","eslint":"9.16.0","eslint-import-resolver-typescript":"3.7.0","eslint-plugin-anti-trojan-source":"1.1.1","eslint-plugin-import-x":"4.5.0","eslint-plugin-lit":"1.15.0","eslint-plugin-wc":"2.2.0","fork-ts-checker-webpack-plugin":"9.0.2","glob":"11.0.0","globals":"15.13.0","html-loader":"5.1.0","html-webpack-plugin":"5.6.3","image-minimizer-webpack-plugin":"4.1.1","license-checker-rseidelsohn":"4.4.2","lz-string":"1.5.0","mini-css-extract-plugin":"2.9.2","mocha":"10.8.2","ovsx":"0.10.1","playwright":"1.49.1","prettier":"3.1.0","regex-to-strings":"2.1.0","sass":"1.82.0","sass-loader":"16.0.4","schema-utils":"4.2.0","sharp":"0.32.6","svgo":"3.3.2","terser-webpack-plugin":"5.3.10","ts-loader":"9.5.1","typescript":"5.7.2","typescript-eslint":"8.18.0","webpack":"5.97.1","webpack-bundle-analyzer":"4.10.2","webpack-cli":"5.1.4","webpack-node-externals":"3.0.0","webpack-require-from":"1.8.6"},"resolutions":{"esbuild":"0.24.0","iconv-lite":"0.6.3","node-fetch":"2.7.0","semver-regex":"4.0.5"},"packageManager":"pnpm@10.0.0-beta.3"},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/eamodio.gitlens-16.1.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitKraken","metadata":{"installedTimestamp":1736421551703,"pinned":false,"source":"gallery","id":"4de763bd-505d-4978-9575-2b7696ecf94e","publisherId":"678d198b-9b2e-49d3-96ff-6d801c9575df","publisherDisplayName":"GitKraken","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":15361002},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode.cpptools","uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2"},"manifest":{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"1.22.11","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.67.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"enabledApiProposals":["terminalDataWriteEvent","lmTools"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"Multiple settings can cause processes local to the workspace to be executed, e.g. C_Cpp.clang_format_path, C_Cpp.codeAnalysis.clangTidy.path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, and C_Cpp.default.compileCommands, and the equivalent properties in c_cpp_properties.json."},"virtualWorkspaces":false},"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onDebugResolve:cppdbg","onDebugResolve:cppvsdbg","workspaceContains:/.vscode/c_cpp_properties.json","onFileSystem:cpptools-schema"],"main":"./dist/src/main","contributes":{"walkthroughs":[{"id":"cppWelcome","title":"Get Started with C++ Development","description":"Dive into VS Code's rich C++ development experience.","steps":[{"id":"awaiting.activation.mac","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == false","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"}},{"id":"awaiting.activation.linux","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == false","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"awaiting.activation.windows","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"awaiting.activation.windows10","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"}},{"id":"awaiting.activation.windows11","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"}},{"id":"no.compilers.found.mac","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Either select “Install a C++ Compiler” to have a compiler installed for you or follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Install a C++ Compiler](command:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"}},{"id":"no.compilers.found.linux","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Either select “Install a C++ Compiler” to have a compiler installed for you or follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Install a C++ Compiler](command:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"no.compilers.found.windows","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"no.compilers.found.windows10","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"}},{"id":"no.compilers.found.windows11","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"}},{"id":"verify.compiler.mac","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.linux","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows10","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows11","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"create.cpp.file","title":"Create a C++ file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D) a C++ file. Be sure to save it with the \".cpp\" extension, such as \"helloworld.cpp\". \n[Create a C++ File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D)","media":{"svg":"dist/walkthrough/images/create-a-file.svg","altText":"Open a C++ file or a folder with a C++ project."}},{"id":"relaunch.developer.command.prompt.windows","title":"Launch from the developer command prompt","description":"When using the Microsoft Visual Studio C++ compiler, the C++ extension requires you to launch VS Code from the developer command prompt. Follow the instructions on the right to relaunch.\n[Reload Window](command:workbench.action.reloadWindow)","when":"workspacePlatform == windows","media":{"markdown":"dist/walkthrough/devcommandprompt/open-developer-command-prompt.md"},"completionEvents":["onContext:cpptools.msvcEnvironmentFound"]},{"id":"run.project.mac","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"clang++ - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == mac","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"run.project.linux","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"g++ - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == linux","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"run.project.windows","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"cl.exe - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == windows","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"customize.debugging.linux","title":"Customize debugging","when":"workspacePlatform == linux","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}},{"id":"customize.debugging.windows","title":"Customize debugging","when":"workspacePlatform == windows","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}},{"id":"customize.debugging.mac","title":"Customize debugging","when":"workspacePlatform == mac","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}}]}],"taskDefinitions":[{"type":"cppbuild","required":["command","label"],"properties":{"label":{"type":"string","description":"The name of the task."},"command":{"oneOf":[{"type":"string"},{"type":"object","required":["value","quoting"],"properties":{"value":{"type":"string","description":"The actual argument value."},"quoting":{"type":"string","enum":["escape","strong","weak"],"enumDescriptions":["Escapes characters using the shell's escape character (e.g. \\ under bash).","Quotes the argument using the shell's strong quote character (e.g. ' under bash).","Quotes the argument using the shell's weak quote character (e.g. \" under bash)."],"default":"strong","description":"How the argument value should be quoted."}}}]},"args":{"type":"array","description":"Additional arguments to pass to the compiler or compilation script.","items":{"oneOf":[{"type":"string"},{"type":"object","required":["value","quoting"],"properties":{"value":{"type":"string","description":"The actual argument value."},"quoting":{"type":"string","enum":["escape","strong","weak"],"enumDescriptions":["Escapes characters using the shell's escape character (e.g. \\ under bash).","Quotes the argument using the shell's strong quote character (e.g. ' under bash).","Quotes the argument using the shell's weak quote character (e.g. \" under bash)."],"default":"strong","description":"How the argument value should be quoted."}}}]}},"options":{"type":"object","description":"Additional command options.","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task."}}}],"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cpptools.hasReferencesResults"}],"debug":[{"id":"CppSshTargetsView","name":"Cpptools: SSH targets","when":"cpptools.enableSshTargetsView"}]},"viewsWelcome":[{"view":"debug","contents":"To learn more about launch.json, see [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).","when":"debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["autoDetect","${cwd}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}},{"name":"iar","source":"iar","owner":"cpptools","fileLocation":"absolute","pattern":{"regexp":"^\"(.*?)\",(\\d+)\\s+(?:[Ff]atal\\s+)?([Ww]arning|[Ee]rror)\\[(\\w+\\d+)\\]:\\s+(.*)$","file":1,"line":2,"severity":3,"code":4,"message":5}},{"name":"armcc5","source":"armcc5","owner":"cpptools","fileLocation":["autoDetect","${cwd}"],"pattern":{"regexp":"^\"(.*)?\",\\s+line\\s+(\\d+):\\s+([Ee]rror|[Ww]arning):\\s+#(.*?):\\s+(.*)$","file":1,"line":2,"severity":3,"code":4,"message":5}}],"configuration":[{"title":"IntelliSense","properties":{"C_Cpp.inlayHints.autoDeclarationTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for deduced type when `auto` is used in a declaration:\n```cpp \n\n auto index /* : int */ = 0;\n```","scope":"resource"},"C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for deduced type when `auto` is used in a declaration on the left of the identifier:\n```cpp \n\n auto /* int */ index = 0;\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.enabled":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for parameter names:\n```cpp \n\n int a = getArea(/* width: */ x, /* height: */ y);\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName":{"type":"boolean","default":true,"markdownDescription":"Suppress parameter name hints when the argument text or inline comment contains the parameter name:\n```cpp \n\n int a = getArea(width, /* height: */ y);\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores":{"type":"boolean","default":true,"markdownDescription":"Hide leading `_` in parameter name hints.","scope":"resource"},"C_Cpp.inlayHints.referenceOperator.enabled":{"type":"boolean","default":false,"markdownDescription":"Display the inlay hint reference operator `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* &first: */ str1, /* &last: */ str2);\n```","scope":"resource"},"C_Cpp.inlayHints.referenceOperator.showSpace":{"type":"boolean","default":false,"markdownDescription":"Controls whether a space is shown after `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* & first: */ str1, /* & last: */ str2);\n```","scope":"resource"},"C_Cpp.intelliSenseUpdateDelay":{"type":"number","default":1000,"description":"Controls the delay in milliseconds before IntelliSense starts updating after a modification.","scope":"application","minimum":500,"maximum":3000},"C_Cpp.codeFolding":{"type":"string","enum":["enabled","disabled"],"default":"enabled","description":"If enabled, code folding ranges are provided by the language server.","scope":"window"},"C_Cpp.autocompleteAddParentheses":{"type":"boolean","default":false,"markdownDescription":"If `true`, autocomplete will automatically add `(` after function calls, in which case `)` may also be added, depending on the value of the `#editor.autoClosingBrackets#` setting.","scope":"resource"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"markdownDescription":"If `true`, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["enabled","disabled"],"default":"enabled","markdownDescription":"If enabled, code is colorized based on IntelliSense. This setting only applies if `#C_Cpp.intelliSenseEngine#` is set to `default`.","scope":"window"},"C_Cpp.legacyCompilerArgsBehavior":{"type":"boolean","default":false,"markdownDescription":"Enable pre-v1.10.0 behavior for how shell escaping is handled in compiler arg settings. Shell escaping is no longer expected or supported by default in arg arrays starting in v1.10.0.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["default","disabled"],"default":"default","markdownDescription":"Controls the auto-completion provider. If `disabled` and you want word-based completion, you will also need to set `\"[cpp]\": {\"editor.wordBasedSuggestions\": <value>}` (and similarly for `c` and `cuda-cpp` languages).","enumDescriptions":["Uses the active IntelliSense engine.","Uses the word-based completion provided by Visual Studio Code."],"scope":"resource"},"C_Cpp.hover":{"type":"string","enum":["default","disabled"],"default":"default","description":"If disabled, hover details are no longer provided by the language server.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["enabled","disabled","enabledIfIncludesResolve"],"default":"enabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. It also controls whether code analysis warnings are reported if includes can't be found. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type":"number","default":0.55,"markdownDescription":"Controls the opacity of inactive preprocessor blocks. Scales between `0.1` and `1.0`. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":"string","description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":"string","description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.refactoring.includeHeader":{"type":"string","enum":["always","ifNeeded","never"],"default":"always","markdownDescription":"Controls whether to include the header file of a refactored function/symbol to its corresponding source file when doing a refactoring action, such as create declaration/definition.","enumDescriptions":["Always include the header file if it is not included explicitly in its source file.","Only include the header file if it is not included explicitly in its source file or through implicit inclusion.","Never include the header file."],"scope":"resource"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"markdownDescription":"If `true`, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.","scope":"window"},"C_Cpp.default.includePath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `includePath` is not specified in `c_cpp_properties.json`. If `includePath` is specified, add `${default}` to the array to insert the values from this setting. Usually, this should not include system includes; instead, set `#C_Cpp.default.compilerPath#`.","scope":"machine-overridable"},"C_Cpp.default.defines":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `defines` is not specified, or the values to insert if `${default}` is present in `defines`.","scope":"machine-overridable"},"C_Cpp.default.macFrameworkPath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `macFrameworkPath` is not specified, or the values to insert if `${default}` is present in `macFrameworkPath`.","scope":"machine-overridable"},"C_Cpp.default.windowsSdkVersion":{"type":"string","markdownDescription":"Version of the Windows SDK include path to use on Windows, e.g. `10.0.17134.0`.","pattern":"^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$","scope":"machine-overridable"},"C_Cpp.default.compileCommands":{"type":"string","markdownDescription":"The value to use in a configuration if `compileCommands` is either not specified, or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.forcedInclude":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `forcedInclude` is not specified, or the values to insert if `${default}` is present in `forcedInclude`.","scope":"machine-overridable"},"C_Cpp.default.intelliSenseMode":{"type":"string","enum":["","macos-clang-x86","macos-clang-x64","macos-clang-arm","macos-clang-arm64","macos-gcc-x86","macos-gcc-x64","macos-gcc-arm","macos-gcc-arm64","linux-clang-x86","linux-clang-x64","linux-clang-arm","linux-clang-arm64","linux-gcc-x86","linux-gcc-x64","linux-gcc-arm","linux-gcc-arm64","windows-clang-x86","windows-clang-x64","windows-clang-arm","windows-clang-arm64","windows-gcc-x86","windows-gcc-x64","windows-gcc-arm","windows-gcc-arm64","windows-msvc-x86","windows-msvc-x64","windows-msvc-arm","windows-msvc-arm64","clang-x86","clang-x64","clang-arm","clang-arm64","gcc-x86","gcc-x64","gcc-arm","gcc-arm64","msvc-x86","msvc-x64","msvc-arm","msvc-arm64"],"markdownDescription":"The value to use in a configuration if `intelliSenseMode` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"markdownDescription":"The value to use in a configuration if `compilerPath` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerArgs":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in configuration if `compilerArgs` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","c23","gnu89","gnu99","gnu11","gnu17","gnu23"],"markdownDescription":"The value to use in a configuration if `cStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","c++23","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20","gnu++23"],"markdownDescription":"The value to use in a configuration if `cppStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":"string","markdownDescription":"The value to use in a configuration if `configurationProvider` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.mergeConfigurations":{"type":"boolean","markdownDescription":"Set to `true` to merge include paths, defines, and forced includes with those from a configuration provider.","scope":"resource"},"C_Cpp.default.browse.path":{"type":"array","items":{"type":"string"},"uniqueItems":true,"default":null,"markdownDescription":"The value to use in a configuration if `browse.path` is not specified, or the values to insert if `${default}` is present in `browse.path`.","scope":"machine-overridable"},"C_Cpp.default.browse.databaseFilename":{"type":"string","markdownDescription":"The value to use in a configuration if `browse.databaseFilename` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"markdownDescription":"The value to use in a configuration if `browse.limitSymbolsToIncludedHeaders` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use for the system include path. If set, it overrides the system include path acquired via `compilerPath` and `compileCommands` settings.","scope":"machine-overridable"},"C_Cpp.default.customConfigurationVariables":{"type":["object","null"],"default":null,"patternProperties":{"(^.+$)":{"type":"string"}},"markdownDescription":"The value to use in a configuration if `customConfigurationVariables` is not set, or the values to insert if `${default}` is present as a key in `customConfigurationVariables`.","scope":"machine-overridable"},"C_Cpp.default.enableConfigurationSquiggles":{"type":"boolean","default":true,"markdownDescription":"Controls whether the extension will report errors detected in `c_cpp_properties.json`.","scope":"resource"},"C_Cpp.default.dotConfig":{"type":"string","markdownDescription":"The value to use in a configuration if `dotConfig` is not specified, or the value to insert if `${default}` is present in `dotConfig`.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["enabled","disabled"],"default":"enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","markdownDescription":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values `highest`/`high`/`medium`/`low` correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["default","Tag Parser","disabled"],"default":"default","description":"Controls the IntelliSense provider.","enumDescriptions":["Provides context-aware results via a separate IntelliSense process.","Provides \"fuzzy\" results that are not context-aware.","Turns off C/C++ language service features."],"scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","markdownDescription":"Instructs the extension when to use the `#files.exclude#` (and `#C_Cpp.files.exclude#`) setting when determining which files should be added to the code navigation database while traversing through the paths in the `browse.path` array. If your `#files.exclude#` setting only contains folders, then `checkFolders` is the best choice and will increase the speed at which the extension can initialize the code navigation database.","enumDescriptions":["The exclusion filters will only be evaluated once per folder (individual files are not checked).","The exclusion filters will be evaluated against every file and folder encountered."],"scope":"resource"},"C_Cpp.files.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders (and files if `#C_Cpp.exclusionPolicy#` is changed). These are specific to the C/C++ extension and are in addition to `#files.exclude#`, but unlike `#files.exclude#` they also apply to paths outside the current workspace folder and are not removed from the Explorer view. Learn more about [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{"**/.vscode":true,"**/.vs":true},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"}}},{"title":"Formatting","properties":{"C_Cpp.vcFormat.indent.braces":{"type":"boolean","default":false,"markdownDescription":"Braces are indented by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.multiLineRelativeTo":{"type":"string","enum":["outermostParenthesis","innermostParenthesis","statementBegin"],"enumDescriptions":["Indent new line relative to the outermost open parenthesis.","Indent new line relative to the innermost open parenthesis.","Indent new line relative to the beginning of the current statement."],"default":"innermostParenthesis","description":"Determines what new line indentation is relative to.","scope":"resource"},"C_Cpp.vcFormat.indent.withinParentheses":{"type":"string","enum":["alignToParenthesis","indent"],"markdownEnumDescriptions":["New line is aligned under the opening parenthesis.","New line is indented based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`."],"default":"indent","markdownDescription":"When a new line is typed, it is aligned under the opening parenthesis or based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveWithinParentheses":{"type":"boolean","default":false,"description":"In existing code, preserve the existing indent alignment of new lines within parentheses.","scope":"resource"},"C_Cpp.vcFormat.indent.caseLabels":{"type":"boolean","default":false,"markdownDescription":"Labels are indented relative to switch statements by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContents":{"type":"boolean","default":true,"markdownDescription":"Code inside a `case` block is indented relative to its label by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContentsWhenBlock":{"type":"boolean","default":false,"markdownDescription":"Indent braces following a case statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter":{"type":"boolean","default":true,"markdownDescription":"Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.gotoLabels":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Position goto labels to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Position goto labels at the leftmost edge of the code.","Goto labels will not be formatted."],"default":"oneLeft","description":"The position of goto labels.","scope":"resource"},"C_Cpp.vcFormat.indent.preprocessor":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Preprocessor directives are positioned at the leftmost edge of the code.","Preprocessor directives will not be formatted."],"default":"leftmostColumn","description":"The position of preprocessor directives.","scope":"resource"},"C_Cpp.vcFormat.indent.accessSpecifiers":{"type":"boolean","default":false,"markdownDescription":"Access specifiers are indented relative to class or struct definitions by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.namespaceContents":{"type":"boolean","default":true,"markdownDescription":"Code is indented relative to its enclosing namespace by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveComments":{"type":"boolean","default":false,"description":"Indentation of comments is not changed during formatting operations.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for namespaces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.type":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for type definitions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.function":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.block":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for control blocks.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for lambda functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines":{"type":"boolean","default":false,"description":"Place opening and closing braces for scopes on separate lines.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType":{"type":"boolean","default":false,"description":"For empty types, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction":{"type":"boolean","default":false,"description":"For empty function bodies, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeCatch":{"type":"boolean","default":true,"markdownDescription":"Place `catch` and similar keywords on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeElse":{"type":"boolean","default":true,"markdownDescription":"Place `else` on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile":{"type":"boolean","default":false,"markdownDescription":"Place `while` in a `do`-`while` loop on a new line.","scope":"resource"},"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["Add a space before the opening parenthesis of a function.","Spaces before opening parenthesis of a function are removed.","Spaces are left as entered."],"default":"remove","description":"Spacing between function names and opening parentheses of argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinParameterListParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses":{"type":"boolean","default":false,"description":"When a function parameter list is empty, a space is inserted between its parentheses.","scope":"resource"},"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"A space is added between the keyword and opening parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis":{"type":"boolean","default":false,"description":"A space is added before the opening parenthesis of lambda argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinCastParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.afterCastCloseParenthesis":{"type":"boolean","default":false,"description":"A space is added after the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.withinExpressionParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.","scope":"resource"},"C_Cpp.vcFormat.space.beforeBlockOpenBrace":{"type":"boolean","default":true,"description":"A space is added before the opening braces of scope blocks.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyBraces":{"type":"boolean","default":false,"description":"When braces are empty and on the same line, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace":{"type":"boolean","default":false,"description":"A space is added before the opening brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinInitializerListBraces":{"type":"boolean","default":true,"description":"A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.preserveInInitializerList":{"type":"boolean","default":true,"description":"Spaces around commas are preserved inside uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.beforeOpenSquareBracket":{"type":"boolean","default":false,"description":"A space is added before opening square brackets.","scope":"resource"},"C_Cpp.vcFormat.space.withinSquareBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.beforeEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is added before the opening bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.groupSquareBrackets":{"type":"boolean","default":true,"description":"For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.","scope":"resource"},"C_Cpp.vcFormat.space.withinLambdaBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeComma":{"type":"boolean","default":false,"description":"A space is added before every comma.","scope":"resource"},"C_Cpp.vcFormat.space.afterComma":{"type":"boolean","default":true,"description":"A space is added after every comma.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundMemberOperators":{"type":"boolean","default":true,"description":"Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInheritanceColon":{"type":"boolean","default":true,"description":"A space is added before the colon for inherited types in class definitions.","scope":"resource"},"C_Cpp.vcFormat.space.beforeConstructorColon":{"type":"boolean","default":true,"description":"A space is added before the colon in constructor definitions.","scope":"resource"},"C_Cpp.vcFormat.space.removeBeforeSemicolon":{"type":"boolean","default":true,"description":"Spaces are removed before every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.insertAfterSemicolon":{"type":"boolean","default":false,"description":"A space is inserted after every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundUnaryOperator":{"type":"boolean","default":true,"description":"Spaces between unary operators and operands are removed.","scope":"resource"},"C_Cpp.vcFormat.space.aroundBinaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around binary operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundAssignmentOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around assignment operators.","scope":"resource"},"C_Cpp.vcFormat.space.pointerReferenceAlignment":{"type":"string","enum":["left","center","right","ignore"],"enumDescriptions":["Pointer and reference operators are aligned to the left.","Pointer and reference operators are centered.","Pointer and reference operators are aligned to the right.","Pointer and reference operators are not formatted."],"default":"left","description":"Spaces around pointer and reference operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundTernaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around conditional operators.","scope":"resource"},"C_Cpp.vcFormat.wrap.preserveBlocks":{"type":"string","enum":["oneLiners","allOneLineScopes","never"],"markdownEnumDescriptions":["A complete code block that is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Code blocks are always formatted based on the values of the `C_Cpp.vcFormat.newLine.*` settings."],"default":"oneLiners","description":"Wrapping options for blocks.","scope":"resource"},"C_Cpp.clang_format_path":{"type":"string","markdownDescription":"The full path of the `clang-format` executable. If not specified, and `clang-format` is available in the environment path, that is used. If not found in the environment path, the `clang-format` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.clang_format_style":{"type":"string","default":"file","markdownDescription":"Coding style, currently supports: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` to load the style from a `.clang-format` file in the current or parent directory, or use `file:<path>/.clang-format` to reference a specific path. Use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["clangFormat","vcFormat","default","disabled"],"markdownEnumDescriptions":["`clang-format` will be used to format code.","The Visual C++ formatting engine will be used to format code.","By default, `clang-format` will be used to format the code. However, the Visual C++ formatting engine will be used if an `.editorconfig` file with relevant settings is found nearer to the code being formatted and `#C_Cpp.clang_format_style#` is the default value: `file`.","Code formatting will be disabled."],"default":"default","description":"Configures the formatting engine.","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","markdownDescription":"Name of the predefined style used as a fallback in case `clang-format` is invoked with style `file` but the `.clang-format` file is not found. Possible values are `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none`, or use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"markdownDescription":"If set, overrides the include sorting behavior determined by the `SortIncludes` parameter.","scope":"resource"}}},{"title":"Code Documentation","properties":{"C_Cpp.doxygen.generateOnType":{"type":"boolean","default":true,"description":"Controls whether to automatically insert the Doxygen comment after typing the chosen comment style.","scope":"resource"},"C_Cpp.doxygen.generatedStyle":{"type":"string","enum":["///","/**","/*!","//!"],"default":"///","description":"The string of characters used as the starting line of the Doxygen comment.","scope":"resource"},"C_Cpp.doxygen.sectionTags":{"type":"array","default":["attention","tparam","param","result","returns","retval","exception","deprecated","warning","note"],"items":{"type":"string","enum":["attention","author","authors","bug","copyright","date","deprecated","details","exception","invariant","note","param","pre","post","remark","remarks","result","returns","retval","sa","see","since","tparam","test","todo","version","warning"]},"description":"Select the Doxygen section tags that you would like to appear on hover in the tooltip area when the 'Simplify Structured Comments' setting is enabled. ","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","markdownDescription":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ` * ` for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"uniqueItems":true,"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"window"},"C_Cpp.markdownInComments":{"type":"string","enum":["subsetEnabled","enabled","disabled"],"enumDescriptions":["Enable all markdown features in the hover tooltip except those that include the '_' and '*' characters.","Enable all markdown features in the hover tooltip.","Disable all markdown features in the hover tooltip."],"default":"subsetEnabled","description":"Select whether markdown will be available in the hover tooltip. By default, only a subset of markdown will be applied to comments in the hover tooltip.","scope":"resource"},"C_Cpp.simplifyStructuredComments":{"type":"boolean","default":true,"markdownDescription":"If `true`, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.","scope":"application"}}},{"title":"Code Analysis","properties":{"C_Cpp.codeAnalysis.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for code analysis. The default of `null` (empty) uses half the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.codeAnalysis.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer code analysis processes will run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.codeAnalysis.updateDelay":{"type":"number","default":2000,"markdownDescription":"Controls the delay in milliseconds before code analysis starts processing after a save is triggered from an edit when `#files.autoSave#` is `afterDelay` and `#C_Cpp.codeAnalysis.runAutomatically#` is `true`.","scope":"application","minimum":0,"maximum":6000},"C_Cpp.codeAnalysis.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders and files for code analysis. Files not under the workspace folder are always excluded. Inherits values from `#files.exclude#` and `#C_Cpp.files.exclude#`. Learn more about [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes":{"type":"boolean","markdownDescription":"If `true`, formatting will be run on the lines changed by 'Fix' code actions.","default":true,"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showClear":{"type":"string","description":"Controls which 'Clear' code analysis problem code action options are available. Changing the setting to show more options may require re-running code analysis.","enum":["None","AllOnly","AllAndAllType","AllAndAllTypeAndThis"],"enumDescriptions":["Show no 'Clear' code actions.","Show only the 'Clear all' code action (or 'Clear all <type>' if there is only one type or 'Clear this' if there is only one problem).","Show the 'Clear all' code action (if there are multiple problem types) and the 'Clear all <type>' code action (or 'Clear this' if there is only one problem for the <type>)","Show the 'Clear all' (if there are multiple problem types), 'Clear all <type>' (if there are multiple problems for the <type>), and 'Clear this' code actions"],"default":"AllAndAllTypeAndThis","scope":"application"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showDisable":{"type":"boolean","markdownDescription":"If `true`, the 'Disable' code action will be shown when available (the next time code analysis is run). When the 'Disable' code action is used, it adds the warning code to the `C_Cpp.codeAnalysis.clangTidy.checks.disabled` setting.","default":true,"scope":"application"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showDocumentation":{"type":"boolean","markdownDescription":"If `true`, the 'Show Documentation for' code action will be shown when available (the next time code analysis is run).","default":true,"scope":"application"},"C_Cpp.codeAnalysis.runAutomatically":{"type":"boolean","markdownDescription":"If `true`, code analysis will run automatically on a file after it is opened or saved.","default":true,"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.enabled":{"type":"boolean","default":false,"markdownDescription":"If `true`, code analysis using `clang-tidy` will be enabled and will run after a file is opened or saved if `#C_Cpp.codeAnalysis.runAutomatically#` is `true` (the default).","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.path":{"type":"string","markdownDescription":"The full path of the `clang-tidy` executable. If not specified, and `clang-tidy` is available in the environment path, that is used. If not found in the environment path, the `clang-tidy` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.codeAnalysis.clangTidy.config":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`. When the value is empty, `clang-tidy` will attempt to find a file named `.clang-tidy` for each source file in its parent directories.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.fallbackConfig":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format to be used as a fallback when `#C_Cpp.codeAnalysis.clangTidy.config#` is not set and no `.clang-tidy` file is found: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.headerFilter":{"type":["string","null"],"default":null,"markdownDescription":"A POSIX extended regular expression (ERE) matching the names of the headers to output diagnostics from. Diagnostics from the main file of each translation unit are always displayed. The `${workspaceFolder}` variable is supported (and is used as the default fallback value if no `.clang-tidy` file exists). If this option is not `null` (empty), it overrides the `HeaderFilterRegex` option in a `.clang-tidy` file, if any.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.args":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Additional command line arguments to pass to `clang-tidy`. These take precedence over the equivalent `C_Cpp.codeAnalysis.clangTidy.*` settings.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.useBuildPath":{"type":"boolean","default":false,"markdownDescription":"If `true` and `compileCommands` is set, the `-p=<build-path>` argument is passed to `clang-tidy` instead of build arguments being passed after `--`. This may not work if environment variables aren't set so that system includes can be found.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.enabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-cleanup-ctad","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-assignment-in-if-condition","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-casting-through-void","bugprone-chained-comparison","bugprone-compare-pointer-to-member-virtual-function","bugprone-copy-constructor-init","bugprone-crtp-constructor-accessibility","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-empty-catch","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-inc-dec-in-conditions","bugprone-incorrect-*","bugprone-incorrect-enable-if","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multi-level-implicit-pointer-conversion","bugprone-multiple-*","bugprone-multiple-new-in-one-expression","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-non-zero-enum-to-bool-conversion","bugprone-not-null-terminated-result","bugprone-optional-value-conversion","bugprone-parent-virtual-call","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-shared-ptr-array-mismatch","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-standalone-empty","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-stringview-nullptr","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memory-comparison","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-realloc-usage","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-suspicious-stringview-data-usage","bugprone-swapped-arguments","bugprone-switch-missing-default-case","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-unchecked-optional-access","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unique-ptr-array-mismatch","bugprone-unsafe-functions","bugprone-unused-*","bugprone-unused-local-non-trivial-variable","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl21-cpp","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err33-c","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-exp42-c","cert-fio38-c","cert-flp*","cert-flp30-c","cert-flp37-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc33-c","cert-msc50-cpp","cert-msc51-cpp","cert-msc54-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos*","cert-pos44-c","cert-pos47-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.BitwiseShift","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.NewArraySize","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-cplusplus.PlacementNew","clang-analyzer-cplusplus.PureVirtualCall","clang-analyzer-cplusplus.StringChecker","clang-analyzer-deadcode.DeadStores","clang-analyzer-fuchsia.HandleChecker","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.core.EnumCastOutOfRange","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.cert.env.InvalidPtr","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.decodeValueOfObjCType","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Errno","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.StdCLibraryFunctions","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","clang-analyzer-webkit.NoUncountedMemberChecker","clang-analyzer-webkit.RefCntblBaseVirtualDtor","clang-analyzer-webkit.UncountedLambdaCapturesChecker","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-capturing-lambda-coroutines","cppcoreguidelines-avoid-const-or-ref-data-members","cppcoreguidelines-avoid-do-while","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-avoid-reference-coroutine-parameters","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-to-enum","cppcoreguidelines-macro-usage","cppcoreguidelines-misleading-capture-default-by-value","cppcoreguidelines-missing-std-forward","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-*","cppcoreguidelines-no-malloc","cppcoreguidelines-no-suspend-with-lock","cppcoreguidelines-noexcept-*","cppcoreguidelines-noexcept-destructor","cppcoreguidelines-noexcept-move-operations","cppcoreguidelines-noexcept-swap","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-rvalue-reference-param-not-moved","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","cppcoreguidelines-use-default-member-init","cppcoreguidelines-virtual-class-destructor","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-ignored-remove-result","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-use-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-inline-function-decl","llvmlibc-restrict-system-libc-headers","misc-*","misc-confusable-identifiers","misc-const-correctness","misc-coroutine-hostile-raii","misc-definitions-in-headers","misc-header-include-cycle","misc-include-cleaner","misc-misleading-*","misc-misleading-bidirectional","misc-misleading-identifier","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","misc-use-anonymous-namespace","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-macro-to-enum","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-type-traits","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default","modernize-use-constraints","modernize-use-default-member-init","modernize-use-designated-initializers","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-starts-ends-with","modernize-use-std-*","modernize-use-std-numbers","modernize-use-std-print","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-assert-equals","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsdate-formatter","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-avoid-endl","performance-enum-size","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-*","performance-noexcept-destructor","performance-noexcept-move-constructor","performance-noexcept-swap","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","portability-std-allocator-const","readability-*","readability-avoid-*","readability-avoid-const-params-in-decls","readability-avoid-nested-conditional-operator","readability-avoid-return-with-void-value","readability-avoid-unconditional-preprocessor-if","readability-braces-around-statements","readability-const-return-type","readability-container-*","readability-container-contains","readability-container-data-pointer","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-duplicate-include","readability-else-after-return","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-*","readability-identifier-length","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-operators-representation","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-casting","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-inline-specifier","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-reference-to-constructed-temporary","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-suspicious-call-argument","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-*","readability-use-anyofallof","readability-use-std-min-max","zircon-temporary-objects"]},"uniqueItems":true,"markdownDescription":"List of enabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any. The default check `clang-analyzer-*` is always used unless it is explicitly disabled.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.disabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-cleanup-ctad","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-assignment-in-if-condition","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-casting-through-void","bugprone-chained-comparison","bugprone-compare-pointer-to-member-virtual-function","bugprone-copy-constructor-init","bugprone-crtp-constructor-accessibility","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-empty-catch","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-inc-dec-in-conditions","bugprone-incorrect-*","bugprone-incorrect-enable-if","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multi-level-implicit-pointer-conversion","bugprone-multiple-*","bugprone-multiple-new-in-one-expression","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-non-zero-enum-to-bool-conversion","bugprone-not-null-terminated-result","bugprone-optional-value-conversion","bugprone-parent-virtual-call","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-shared-ptr-array-mismatch","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-standalone-empty","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-stringview-nullptr","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memory-comparison","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-realloc-usage","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-suspicious-stringview-data-usage","bugprone-swapped-arguments","bugprone-switch-missing-default-case","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-unchecked-optional-access","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unique-ptr-array-mismatch","bugprone-unsafe-functions","bugprone-unused-*","bugprone-unused-local-non-trivial-variable","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl21-cpp","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err33-c","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-exp42-c","cert-fio38-c","cert-flp*","cert-flp30-c","cert-flp37-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc33-c","cert-msc50-cpp","cert-msc51-cpp","cert-msc54-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos*","cert-pos44-c","cert-pos47-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.BitwiseShift","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.NewArraySize","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-cplusplus.PlacementNew","clang-analyzer-cplusplus.PureVirtualCall","clang-analyzer-cplusplus.StringChecker","clang-analyzer-deadcode.DeadStores","clang-analyzer-fuchsia.HandleChecker","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.core.EnumCastOutOfRange","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.cert.env.InvalidPtr","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.decodeValueOfObjCType","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Errno","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.StdCLibraryFunctions","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","clang-analyzer-webkit.NoUncountedMemberChecker","clang-analyzer-webkit.RefCntblBaseVirtualDtor","clang-analyzer-webkit.UncountedLambdaCapturesChecker","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-capturing-lambda-coroutines","cppcoreguidelines-avoid-const-or-ref-data-members","cppcoreguidelines-avoid-do-while","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-avoid-reference-coroutine-parameters","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-to-enum","cppcoreguidelines-macro-usage","cppcoreguidelines-misleading-capture-default-by-value","cppcoreguidelines-missing-std-forward","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-*","cppcoreguidelines-no-malloc","cppcoreguidelines-no-suspend-with-lock","cppcoreguidelines-noexcept-*","cppcoreguidelines-noexcept-destructor","cppcoreguidelines-noexcept-move-operations","cppcoreguidelines-noexcept-swap","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-rvalue-reference-param-not-moved","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","cppcoreguidelines-use-default-member-init","cppcoreguidelines-virtual-class-destructor","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-ignored-remove-result","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-use-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-inline-function-decl","llvmlibc-restrict-system-libc-headers","misc-*","misc-confusable-identifiers","misc-const-correctness","misc-coroutine-hostile-raii","misc-definitions-in-headers","misc-header-include-cycle","misc-include-cleaner","misc-misleading-*","misc-misleading-bidirectional","misc-misleading-identifier","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","misc-use-anonymous-namespace","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-macro-to-enum","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-type-traits","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default","modernize-use-constraints","modernize-use-default-member-init","modernize-use-designated-initializers","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-starts-ends-with","modernize-use-std-*","modernize-use-std-numbers","modernize-use-std-print","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-assert-equals","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsdate-formatter","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-avoid-endl","performance-enum-size","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-*","performance-noexcept-destructor","performance-noexcept-move-constructor","performance-noexcept-swap","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","portability-std-allocator-const","readability-*","readability-avoid-*","readability-avoid-const-params-in-decls","readability-avoid-nested-conditional-operator","readability-avoid-return-with-void-value","readability-avoid-unconditional-preprocessor-if","readability-braces-around-statements","readability-const-return-type","readability-container-*","readability-container-contains","readability-container-data-pointer","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-duplicate-include","readability-else-after-return","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-*","readability-identifier-length","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-operators-representation","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-casting","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-inline-specifier","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-reference-to-constructed-temporary","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-suspicious-call-argument","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-*","readability-use-anyofallof","readability-use-std-min-max","zircon-temporary-objects"]},"uniqueItems":true,"markdownDescription":"List of disabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any.","scope":"resource"}}},{"title":"Debugging","properties":{"C_Cpp.debugger.useBacktickCommandSubstitution":{"type":"boolean","default":false,"markdownDescription":"If `true`, debugger shell command substitution will use obsolete backtick ``(`)``.","scope":"window"},"C_Cpp.sshTargetsView":{"type":"string","enum":["enabled","disabled","default"],"default":"default","description":"Controls whether the SSH Targets view is visible. By default, enable the view when an SSH command is invoked.","scope":"window"},"C_Cpp.debugShortcut":{"type":"boolean","default":true,"description":"Show the \"Run and Debug\" play button and \"Add Debug Configuration\" gear in the editor title bar for C++ files.","scope":"resource"}}},{"title":"Resource Management","properties":{"C_Cpp.references.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for 'Find All References' and 'Rename'. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.references.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of processes to keep in memory for 'Find All References' and 'Rename'. The default of `0` disables this feature. The value of `null` (empty) uses the value inherited from `#C_Cpp.maxCachedProcesses#`.","default":0,"minimum":0,"maximum":32,"scope":"machine"},"C_Cpp.references.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer 'Find All References' and 'Rename' processes will be cached and run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.intelliSenseCachePath":{"type":"string","markdownDescription":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is `%LocalAppData%/Microsoft/vscode-cpptools` on Windows, `$XDG_CACHE_HOME/vscode-cpptools/` on Linux (or `$HOME/.cache/vscode-cpptools/` if `XDG_CACHE_HOME` is not defined), and `$HOME/Library/Caches/vscode-cpptools/` on macOS. The default path will be used if no path is specified or if a specified path is invalid.","scope":"machine-overridable"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"markdownDescription":"Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is `5120` MB. Precompiled header caching is disabled when the size is `0`.","scope":"machine-overridable","minimum":0},"C_Cpp.intelliSenseMemoryLimit":{"type":"number","default":4096,"markdownDescription":"Memory usage limit in megabytes (MB) of an IntelliSense process. The default is `4096` and the maximum is `16384`. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.","scope":"machine-overridable","minimum":256,"maximum":16384},"C_Cpp.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for language service processing. The value is a hint and may not always be used. The default of `null` (empty) uses the number of logical processors available.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of cached processes to use for language service processing. The default of `null` (empty) uses twice the number of logical processors available.","default":null,"minimum":0,"maximum":256,"scope":"machine"},"C_Cpp.maxMemory":{"type":["integer","null"],"markdownDescription":"The maximum memory (in MB) available for language service processing. Fewer processes will be cached and run concurrently after this memory usage is exceeded. The default of `null` (empty) uses the system's free memory.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.maxSymbolSearchResults":{"type":"integer","markdownDescription":"The maximum number of results to show for 'Go to Symbol in Workspace'. The default is `5000`.","default":5000,"minimum":500,"maximum":10000,"scope":"window"},"C_Cpp.intelliSense.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of IntelliSense processes to keep running. The default of `null` (empty) uses value inherited from `#C_Cpp.maxCachedProcesses#`.","default":null,"minimum":2,"maximum":128,"scope":"machine"},"C_Cpp.intelliSense.maxMemory":{"type":["integer","null"],"markdownDescription":"Older IntelliSense processes will shut down before new processes are created after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"}}},{"title":"Miscellaneous","properties":{"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","markdownDescription":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: `None` < `Error` < `Warning` < `Information` < `Debug`.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"markdownDescription":"Controls whether files are automatically added to `#files.associations#` when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","markdownDescription":"The character used as a path separator for `#include` auto-completion results.","scope":"machine-overridable"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","markdownDescription":"Set to `Insiders` to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"application","deprecationMessage":"This setting is deprecated. Pre-release extensions are now available via the Marketplace."},"C_Cpp.experimentalFeatures":{"type":"string","enum":["enabled","disabled"],"default":"disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.caseSensitiveFileSupport":{"type":"string","enum":["default","enabled"],"default":"default","markdownDescription":"If set to `default`, the file system of the workspace is assumed to be case insensitive on Windows and case sensitive on macOS or Linux. If set to `enabled`, the file system of the workspace is assumed to be case sensitive on Windows.","scope":"window"},"C_Cpp.addNodeAddonIncludePaths":{"type":"boolean","default":false,"markdownDescription":"Add include paths from `nan` and `node-addon-api` when they are dependencies.","scope":"application"}}}],"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SelectIntelliSenseConfiguration","title":"Select IntelliSense Configuration...","category":"C/C++"},{"command":"C_Cpp.InstallCompiler","title":"Install a C++ Compiler","category":"C/C++"},{"command":"C_Cpp.RescanCompilers","title":"Rescan for Compilers","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.RestartIntelliSenseForFile","title":"Restart IntelliSense for Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"C_Cpp.GenerateEditorConfig","title":"Generate EditorConfig contents from VC Format settings","category":"C/C++"},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}},{"command":"C_Cpp.GoToNextDirectiveInGroup","title":"Go to next preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","title":"Go to previous preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.CreateDeclarationOrDefinition","title":"Create Declaration / Definition","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","title":"Run Code Analysis on Active File","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnOpenFiles","title":"Run Code Analysis on Open Files","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnAllFiles","title":"Run Code Analysis on All Files","category":"C/C++"},{"command":"C_Cpp.RemoveAllCodeAnalysisProblems","title":"Clear All Code Analysis Problems","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugFile","title":"Debug C/C++ File","category":"C/C++","icon":"$(debug-alt)"},{"command":"C_Cpp.BuildAndRunFile","title":"Run C/C++ File","category":"C/C++","icon":"$(run)"},{"command":"C_Cpp.AddDebugConfiguration","title":"Add Debug Configuration","category":"C/C++","icon":"$(debug-configure)"},{"command":"C_Cpp.GenerateDoxygenComment","title":"Generate Doxygen Comment","category":"C/C++"},{"command":"C_Cpp.addSshTarget","category":"C/C++","title":"Add SSH target","icon":"$(plus)"},{"command":"C_Cpp.removeSshTarget","category":"C/C++","title":"Remove SSH target","icon":"$(remove)"},{"command":"C_Cpp.setActiveSshTarget","category":"C/C++","title":"Set this SSH target as the active target","icon":"$(check)"},{"command":"C_Cpp.selectActiveSshTarget","category":"C/C++","title":"Select an active SSH target"},{"command":"C_Cpp.selectSshTarget","category":"C/C++","title":"Select SSH target"},{"command":"C_Cpp.activeSshTarget","category":"C/C++","title":"Get the active SSH target"},{"command":"C_Cpp.refreshCppSshTargetsView","category":"C/C++","title":"Refresh","icon":"$(refresh)"},{"command":"C_Cpp.sshTerminal","category":"C/C++","title":"Connect to this SSH target in a new terminal","icon":"$(terminal)"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"editor.action.codeAction","key":"ctrl+shift+r ctrl+i","args":{"kind":"refactor.inline.macro","apply":"first"},"when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"editor.action.codeAction","key":"ctrl+shift+r ctrl+e","args":{"kind":"refactor.extract.function","apply":"first"},"when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","languages":["ada","c","cpp","cuda-cpp","rust"],"_aiKeyComment":"Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target.","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"postRemoteConnectCommands":{"type":"array","description":"One or more commands that execute after remote connection to a debug server.","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"anyOf":[{"type":"string","default":""},{"type":"array","default":[],"items":{"type":"string"}}],"description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting."},"svdPath":{"type":"string","description":"%c_cpp.debuggers.cppdbg.visualizerFile.description","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to the debug server to launch. Defaults to null. It is used in conjunction with either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\".","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"stopAtConnect":{"type":"boolean","description":"If true, the debugger should stop after connecting to the target. If false, the debugger will continue after connecting. Defaults to false.","default":false},"hardwareBreakpoints":{"description":"Explicit control of hardware breakpoint behavior for remote targets.","default":{},"type":"object","properties":{"require":{"type":"boolean","description":"If true, always use hardware breakpoints. Defaults to false.","default":false},"limit":{"type":"integer","description":"Optional limit on the number of available hardware breakpoints to use. Only enforced when \"require\" is true and \"limit\" is greater than 0. Defaults to 0.","default":0}}},"unknownBreakpointHandling":{"type":"string","enum":["throw","stop"],"default":"throw","description":"Controls how breakpoints set externally (usually via raw GDB commands) are handled when hit.\nAllowed values are \"throw\", which acts as if an exception was thrown by the application, and \"stop\", which only pauses the debug session. The default value is \"throw\"."},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}},"attach":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","when":"workspacePlatform == windows","languages":["ada","c","cpp","cuda-cpp","rust"],"_aiKeyComment":"Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"[Deprecated by 'console'] If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:'std::cin' or 'scanf').","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"description":"Where to launch the debug target. Defaults to 'internalConsole' if not defined.","default":"internalConsole"},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"threadExit":{"type":"boolean","description":"Optional flag to determine whether thread exit messages should be logged to the Debug Console. Default: false.","default":false},"processExit":{"type":"boolean","description":"Optional flag to determine whether target process exit messages should be logged to the Debug Console. Default: true.","default":true}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}}}}],"breakpoints":[{"language":"ada"},{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"},{"language":"rust"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.addSshTarget","when":"view == CppSshTargetsView","group":"navigation"},{"command":"C_Cpp.refreshCppSshTargetsView","when":"view == CppSshTargetsView","group":"navigation"}],"view/item/context":[{"command":"C_Cpp.setActiveSshTarget","when":"viewItem == CppSshTargetsView.targetLeafCanSetActive || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive","group":"inline@0"},{"command":"C_Cpp.sshTerminal","when":"view == CppSshTargetsView","group":"inline@1"},{"command":"C_Cpp.removeSshTarget","when":"viewItem == CppSshTargetsView.targetLeafRemovable || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive","group":"inline@2"}],"editor/title/run":[{"command":"C_Cpp.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile","group":"navigation@0"},{"command":"C_Cpp.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile","group":"navigation@1"}],"editor/title":[{"command":"C_Cpp.AddDebugConfiguration","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen","group":"navigation"}],"editor/context":[{"command":"C_Cpp.SwitchHeaderSource","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@1"},{"command":"workbench.action.gotoSymbol","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@2"},{"command":"workbench.action.showAllSymbols","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@3"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/","group":"custom2@1"},{"command":"C_Cpp.RestartIntelliSenseForFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/","group":"custom2@2"},{"command":"C_Cpp.AddDebugConfiguration","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen","group":"custom2@3"},{"command":"C_Cpp.GenerateDoxygenComment","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom2@4"},{"command":"C_Cpp.CreateDeclarationOrDefinition","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom2@5"}],"commandPalette":[{"command":"C_Cpp.ConfigurationSelect","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationProviderSelect","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationEditJSON","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationEditUI","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.SelectIntelliSenseConfiguration","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.SwitchHeaderSource","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.EnableErrorSquiggles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.DisableErrorSquiggles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.ToggleDimInactiveRegions","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.ResetDatabase","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RestartIntelliSenseForFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.LogDiagnostics","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RescanWorkspace","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.GenerateEditorConfig","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.GoToNextDirectiveInGroup","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.CreateDeclarationOrDefinition","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RunCodeAnalysisOnOpenFiles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RunCodeAnalysisOnAllFiles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RemoveAllCodeAnalysisProblems","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"},{"command":"C_Cpp.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"},{"command":"C_Cpp.AddDebugConfiguration","when":"config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isFolderOpen"},{"command":"C_Cpp.GenerateDoxygenComment","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.referencesViewGroupByType","when":"cpptools.hasReferencesResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cpptools.hasReferencesResults"},{"command":"C_Cpp.InstallCompiler","when":"never"},{"command":"C_Cpp.RescanCompilers","when":"never"},{"command":"C_Cpp.addSshTarget","when":"never"},{"command":"C_Cpp.removeSshTarget","when":"never"},{"command":"C_Cpp.setActiveSshTarget","when":"never"},{"command":"C_Cpp.selectSshTarget","when":"never"},{"command":"C_Cpp.activeSshTarget","when":"never"},{"command":"C_Cpp.refreshCppSshTargetsView","when":"never"},{"command":"C_Cpp.sshTerminal","when":"never"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"},"[cuda-cpp]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"},"[c]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"}},"semanticTokenTypes":[{"id":"referenceType","superType":"class","description":"Style for C++/CLI reference types."},{"id":"cliProperty","superType":"property","description":"Style for C++/CLI properties."},{"id":"genericType","superType":"class","description":"Style for C++/CLI generic types."},{"id":"valueType","superType":"class","description":"Style for C++/CLI value types."},{"id":"templateFunction","superType":"function","description":"Style for C++ template functions."},{"id":"templateType","superType":"class","description":"Style for C++ template types."},{"id":"operatorOverload","superType":"operator","description":"Style for C++ overloaded operators."},{"id":"memberOperatorOverload","superType":"operator","description":"Style for C++ overloaded operator member functions."},{"id":"newOperator","superType":"operator","description":"Style for C++ `new` or `delete` operators."},{"id":"customLiteral","superType":"number","description":"Style for C++ user-defined literals."},{"id":"numberLiteral","superType":"number","description":"Style for C++ user-defined literal numbers."},{"id":"stringLiteral","superType":"string","description":"Style for C++ user-defined literal strings."}],"semanticTokenModifiers":[{"id":"global","description":"Style to use for symbols that are global."},{"id":"local","description":"Style to use for symbols that are local."}],"semanticTokenScopes":[{"language":"c","scopes":{"namespace":["entity.name.namespace.c"],"type":["entity.name.type.c"],"type.defaultLibrary":["support.type.c"],"struct":["storage.type.struct.c"],"class":["entity.name.type.class.c"],"class.defaultLibrary":["support.class.c"],"interface":["entity.name.type.interface.c"],"enum":["entity.name.type.enum.c"],"function":["entity.name.function.c"],"function.defaultLibrary":["support.function.c"],"method":["entity.name.function.member.c"],"variable":["variable.other.readwrite.c","entity.name.variable.c"],"variable.readonly":["variable.other.constant.c"],"variable.readonly.defaultLibrary":["support.constant.c"],"parameter":["variable.parameter.c"],"property":["variable.other.property.c"],"property.readonly":["variable.other.constant.property.c"],"enumMember":["variable.other.enummember.c"],"event":["variable.other.event.c"],"label":["entity.name.label.c"],"variable.global":["variable.other.global.c"],"variable.local":["variable.other.local.c"],"property.static":["variable.other.property.static.c"],"method.static":["entity.name.function.member.static.c"],"macro":["entity.name.function.preprocessor.c","entity.name.function.macro.c"],"referenceType":["entity.name.type.class.reference.c"],"cliProperty":["variable.other.property.cli.c"],"genericType":["entity.name.type.class.generic.c"],"valueType":["entity.name.type.class.value.c"],"templateFunction":["entity.name.function.templated.c"],"templateType":["entity.name.type.class.templated.c"],"operatorOverload":["entity.name.function.operator.c"],"memberOperatorOverload":["entity.name.function.operator.member.c"],"newOperator":["keyword.operator.new.c"],"numberLiteral":["entity.name.operator.custom-literal.number.c"],"customLiteral":["entity.name.operator.custom-literal.c"],"stringLiteral":["entity.name.operator.custom-literal.string.c"]}},{"language":"cpp","scopes":{"namespace":["entity.name.namespace.cpp"],"type":["entity.name.type.cpp"],"type.defaultLibrary":["support.type.cpp"],"struct":["storage.type.struct.cpp"],"class":["entity.name.type.class.cpp"],"class.defaultLibrary":["support.class.cpp"],"interface":["entity.name.type.interface.cpp"],"enum":["entity.name.type.enum.cpp"],"function":["entity.name.function.cpp"],"function.defaultLibrary":["support.function.cpp"],"method":["entity.name.function.member.cpp"],"variable":["variable.other.readwrite.cpp","entity.name.variable.cpp"],"variable.readonly":["variable.other.constant.cpp"],"variable.readonly.defaultLibrary":["support.constant.cpp"],"parameter":["variable.parameter.cpp"],"property":["variable.other.property.cpp"],"property.readonly":["variable.other.constant.property.cpp"],"enumMember":["variable.other.enummember.cpp"],"event":["variable.other.event.cpp"],"label":["entity.name.label.cpp"],"variable.global":["variable.other.global.cpp"],"variable.local":["variable.other.local.cpp"],"property.static":["variable.other.property.static.cpp"],"method.static":["entity.name.function.member.static.cpp"],"macro":["entity.name.function.preprocessor.cpp","entity.name.function.macro.cpp"],"referenceType":["entity.name.type.class.reference.cpp"],"cliProperty":["variable.other.property.cli.cpp"],"genericType":["entity.name.type.class.generic.cpp"],"valueType":["entity.name.type.class.value.cpp"],"templateFunction":["entity.name.function.templated.cpp"],"templateType":["entity.name.type.class.templated.cpp"],"operatorOverload":["entity.name.function.operator.cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cpp"],"newOperator":["keyword.operator.new.cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cpp"],"customLiteral":["entity.name.operator.custom-literal.cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cpp"]}},{"language":"cuda-cpp","scopes":{"namespace":["entity.name.namespace.cuda-cpp"],"type":["entity.name.type.cuda-cpp"],"type.defaultLibrary":["support.type.cuda-cpp"],"struct":["storage.type.struct.cuda-cpp"],"class":["entity.name.type.class.cuda-cpp"],"class.defaultLibrary":["support.class.cuda-cpp"],"interface":["entity.name.type.interface.cuda-cpp"],"enum":["entity.name.type.enum.cuda-cpp"],"function":["entity.name.function.cuda-cpp"],"function.defaultLibrary":["support.function.cuda-cpp"],"method":["entity.name.function.member.cuda-cpp"],"variable":["variable.other.readwrite.cuda-cpp","entity.name.variable.cuda-cpp"],"variable.readonly":["variable.other.constant.cuda-cpp"],"variable.readonly.defaultLibrary":["support.constant.cuda-cpp"],"parameter":["variable.parameter.cuda-cpp"],"property":["variable.other.property.cuda-cpp"],"property.readonly":["variable.other.constant.property.cuda-cpp"],"enumMember":["variable.other.enummember.cuda-cpp"],"event":["variable.other.event.cuda-cpp"],"label":["entity.name.label.cuda-cpp"],"variable.global":["variable.other.global.cuda-cpp"],"variable.local":["variable.other.local.cuda-cpp"],"property.static":["variable.other.property.static.cuda-cpp"],"method.static":["entity.name.function.member.static.cuda-cpp"],"macro":["entity.name.function.preprocessor.cuda-cpp","entity.name.function.macro.cuda-cpp"],"referenceType":["entity.name.type.class.reference.cuda-cpp"],"cliProperty":["variable.other.property.cli.cuda-cpp"],"genericType":["entity.name.type.class.generic.cuda-cpp"],"valueType":["entity.name.type.class.value.cuda-cpp"],"templateFunction":["entity.name.function.templated.cuda-cpp"],"templateType":["entity.name.type.class.templated.cuda-cpp"],"operatorOverload":["entity.name.function.operator.cuda-cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cuda-cpp"],"newOperator":["keyword.operator.new.cuda-cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cuda-cpp"],"customLiteral":["entity.name.operator.custom-literal.cuda-cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cuda-cpp"]}}],"codeActions":[{"languages":["c","cpp","cuda-cpp"],"actions":{"kind":"refactor.inline.macro","title":"Inline macro","description":"Replace the macro invocation with the expanded code."}},{"languages":["c","cpp","cuda-cpp"],"actions":{"kind":"refactor.extract.function","title":"Extract to function","description":"Extract the selected code to a free or member function."}}],"languageModelTools":[{"name":"cpptools-lmtool-configuration","toolReferenceName":"cpp","displayName":"C/C++ configuration","canBeReferencedInPrompt":true,"userDescription":"Configuration of the active C or C++ file, like language standard version and target platform.","modelDescription":"For the active C or C++ file, this tool provides: the language (C, C++, or CUDA), the language standard version (such as C++11, C++14, C++17, or C++20), the compiler (such as GCC, Clang, or MSVC), the target platform (such as x86, x64, or ARM), and the target architecture (such as 32-bit or 64-bit).","icon":"$(file-code)","when":"(config.C_Cpp.experimentalFeatures =~ /^[eE]nabled$/)"}]},"scripts":{"scripts":"ts-node -T .scripts/scripts.ts","show":"ts-node -T .scripts/clean.ts show","clean":"ts-node -T .scripts/clean.ts","test":"yarn install && (yarn verify prep --quiet || yarn prep) && (yarn verify compiled --quiet || yarn build) && ts-node -T .scripts/test.ts","code":"yarn install && (yarn verify compiled --quiet || yarn build) && yarn verify binaries && ts-node -T .scripts/code.ts","verify":"ts-node -T .scripts/verify.ts","prep":"yarn prep:dts && yarn copy-walkthrough-media && yarn generate-native-strings && yarn translations-generate","lint":"yarn install && eslint -c .eslintrc.js --report-unused-disable-directives src test ui .scripts","compile":"yarn install && (yarn verify prep --quiet || yarn prep) && yarn build","watch":"yarn install && (yarn verify prep --quiet || yarn prep) && tsc --build tsconfig.json --watch","rebuild":"yarn install && yarn clean && yarn prep && yarn build","vsix-prepublish":"yarn install && yarn clean && yarn webpack","webpack":"yarn install && (yarn verify prep --quiet || yarn prep) && tsc --build ui.tsconfig.json && webpack --mode production --env vscode_nls","generate-native-strings":"ts-node -T ./.scripts/generateNativeStrings.ts","generate-options-schema":"ts-node -T ./.scripts/generateOptionsSchema.ts","copy-walkthrough-media":"ts-node -T ./.scripts/copyWalkthruMedia.ts","translations-export":"yarn install && yarn prep && yarn generate-native-strings && gulp translations-export","translations-generate":"set NODE_OPTIONS=--no-experimental-fetch && gulp translations-generate","translations-import":"gulp translations-import","import-edge-strings":"ts-node -T ./.scripts/import_edge_strings.ts","prep:dts":"yarn verify dts --quiet || (npx vscode-dts dev && npx vscode-dts main)","build":"yarn prep:dts && echo [Building TypeScript code] && tsc --build tsconfig.json"},"devDependencies":{"@octokit/rest":"^20.1.1","@types/glob":"^7.2.0","@types/minimatch":"^3.0.5","@types/mocha":"^10.0.6","@types/node":"^20.14.2","@types/node-fetch":"^2.6.11","@types/plist":"^3.0.5","@types/semver":"^7.5.8","@types/shell-quote":"^1.7.5","@types/tmp":"^0.2.6","@types/which":"^2.0.2","@types/yauzl":"^2.10.3","@typescript-eslint/eslint-plugin":"^6.1.0","@typescript-eslint/parser":"^6.1.0","@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/dts":"^0.4.0","@vscode/test-electron":"^2.3.10","async-child-process":"^1.1.1","await-notify":"^1.0.1","eslint":"^8.45.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^11.2.0","gulp":"^5.0.0","gulp-env":"^0.4.0","gulp-filter":"^7.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","minimist":"^1.2.8","mocha":"^10.4.0","parse-git-config":"^3.0.0","parse5":"^7.1.2","parse5-traverse":"^1.0.3","ts-loader":"^9.5.1","ts-node":"^10.9.2","typescript":"^5.4.5","vscode-nls-dev":"^4.0.4","webpack":"^5.94.0","webpack-cli":"^5.1.4","xml2js":"^0.6.2"},"dependencies":{"@vscode/extension-telemetry":"^0.9.6","chokidar":"^3.6.0","comment-json":"^4.2.3","escape-string-regexp":"^2.0.0","glob":"^7.2.3","minimatch":"^3.0.5","mkdirp":"^3.0.1","node-fetch":"^2.7.0","node-loader":"^2.0.0","node-stream-zip":"^1.15.0","plist":"^3.1.0","posix-getopt":"^1.2.1","shell-quote":"^1.8.1","ssh-config":"^4.4.4","tmp":"^0.2.3","vscode-cpptools":"^6.1.0","vscode-languageclient":"^8.1.0","vscode-nls":"^5.2.0","vscode-tas-client":"^0.1.84","which":"^2.0.2"},"resolutions":{"postcss":"^8.4.31","gulp-typescript/**/glob-parent":"^5.1.2"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/ms-vscode.cpptools-1.22.11-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421696122,"pinned":false,"source":"gallery","id":"690b692e-e8a9-493f-b802-8089d50ac1b2","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":297297589},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscjava.vscode-java-dependency","uuid":"7865e561-1c83-410e-9b99-aabada597a7e"},"manifest":{"name":"vscode-java-dependency","displayName":"Project Manager for Java","description":"Manage Java projects in Visual Studio Code","version":"0.24.1","publisher":"vscjava","preview":false,"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","keywords":["java","project","explorer"],"engines":{"vscode":"^1.83.1"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-dependency.git"},"homepage":"https://github.com/Microsoft/vscode-java-dependency/blob/main/README.md","icon":"logo.png","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false}},"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:_java.project.open"],"license":"MIT","main":"./main.js","contributes":{"javaExtensions":["./server/com.microsoft.jdtls.ext.core-0.24.1.jar"],"commands":[{"command":"java.project.create","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.menus.file","title":"New Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.fileexplorer.menu","title":"New Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.fileexplorer.welcome","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.javaprojectexplorer.welcome","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"_java.project.create.from.javaprojectexplorer","title":"Create Java Project...","category":"Java","icon":"$(add)"},{"command":"java.project.addLibraries","title":"Add Jar Libraries to Project Classpath...","category":"Java","icon":"$(add)"},{"command":"java.project.addLibraryFolders","title":"Add Library Folders to Project Classpath...","category":"Java","icon":"$(new-folder)"},{"command":"java.project.removeLibrary","title":"Remove from Project Classpath","category":"Java","icon":"$(remove)"},{"command":"java.project.refreshLibraries","title":"Refresh","category":"Java","icon":"$(refresh)"},{"command":"java.project.build.workspace","title":"Rebuild All","icon":"$(tools)"},{"command":"java.project.clean.workspace","title":"Clean Workspace"},{"command":"java.project.update","title":"Reload Project"},{"command":"java.project.reloadProjectFromActiveFile","title":"Reload Java Project","category":"Java","icon":"$(sync)"},{"command":"java.project.rebuild","title":"Rebuild Project"},{"command":"java.view.package.revealInProjectExplorer","title":"Reveal in Java Project Explorer","category":"Java"},{"command":"java.view.package.refresh","title":"Refresh","category":"Java","icon":"$(refresh)"},{"command":"java.view.package.changeToHierarchicalPackageView","title":"Hierarchical View","category":"Java","icon":"$(list-tree)"},{"command":"java.view.package.changeToFlatPackageView","title":"Flat View","category":"Java","icon":"$(list-flat)"},{"command":"java.view.package.linkWithFolderExplorer","title":"Link with Editor","category":"Java","icon":{"dark":"icons/dark/icon-unlink.svg","light":"icons/light/icon-unlink.svg"}},{"command":"java.view.package.unlinkWithFolderExplorer","title":"Unlink with Editor","category":"Java","icon":{"dark":"icons/dark/icon-link.svg","light":"icons/light/icon-link.svg"}},{"command":"java.project.explorer.showNonJavaResources","title":"Show Non-Java Resources","category":"Java"},{"command":"java.project.explorer.hideNonJavaResources","title":"Hide Non-Java Resources","category":"Java"},{"command":"java.view.package.revealFileInOS","title":"Reveal in Explorer","category":"Java"},{"command":"java.view.package.exportJar","title":"Export Jar...","category":"Java","icon":"$(export)"},{"command":"java.view.package.copyFilePath","title":"Copy Path","category":"Java"},{"command":"java.view.package.copyRelativeFilePath","title":"Copy Relative Path","category":"Java"},{"command":"java.view.package.new","title":"New...","category":"Java","icon":"$(add)"},{"command":"java.view.menus.file.newJavaClass","title":"New Java File","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaClass","title":"Class...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaInterface","title":"Interface...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaEnum","title":"Enum...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaRecord","title":"Record...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaAnnotation","title":"Annotation...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newJavaAbstractClass","title":"Abstract Class...","category":"Java","icon":"$(add)"},{"command":"java.view.package.newPackage","title":"Package...","category":"Java"},{"command":"java.view.fileExplorer.newPackage","title":"New Java Package...","category":"Java"},{"command":"java.view.package.newFile","title":"File...","category":"Java","icon":"$(new-file)"},{"command":"java.view.package.newFolder","title":"Folder...","category":"Java","icon":"$(new-folder)"},{"command":"java.view.package.moveFileToTrash","title":"Delete","category":"Java"},{"command":"java.view.package.deleteFilePermanently","title":"Delete Permanently","category":"Java"},{"command":"java.view.package.renameFile","title":"Rename","category":"Java"}],"configuration":{"type":"object","title":"Java Project Manager","properties":{"java.dependency.showMembers":{"type":"boolean","description":"Show the members in the explorer","default":false},"java.dependency.syncWithFolderExplorer":{"type":"boolean","description":"Link Java Projects Explorer with the active editor","default":true},"java.dependency.autoRefresh":{"type":"boolean","description":"Synchronize Java Projects explorer with changes","default":true},"java.dependency.refreshDelay":{"type":"number","description":"The delay time (ms) the auto refresh is invoked when changes are detected","default":2000},"java.dependency.packagePresentation":{"type":"string","enum":["flat","hierarchical"],"description":"Package presentation mode: flat or hierarchical","default":"flat"},"java.project.exportJar.targetPath":{"type":"string","anyOf":[{"enum":["${workspaceFolder}/${workspaceFolderBasename}.jar",""],"enumDescriptions":["Export the jar file into the workspace folder. Its name is the same as the folder's.","Select output location manually when exporting the jar file."]},"string"],"markdownDescription":"The output path of the exported jar. Leave it empty if you want to manually pick the output location.","default":"${workspaceFolder}/${workspaceFolderBasename}.jar"},"java.project.explorer.showNonJavaResources":{"type":"boolean","description":"When enabled, the explorer shows non-Java resources.","default":true}}},"keybindings":[{"command":"java.view.package.revealFileInOS","key":"ctrl+alt+r","win":"shift+alt+r","mac":"cmd+alt+r","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.copyFilePath","key":"ctrl+alt+c","win":"shift+alt+c","mac":"cmd+alt+c","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.copyRelativeFilePath","key":"ctrl+shift+alt+c","win":"ctrl+k ctrl+shift+c","mac":"cmd+shift+alt+c","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.renameFile","key":"F2","mac":"enter","when":"java:serverMode == Standard && focusedView == javaProjectExplorer"},{"command":"java.view.package.moveFileToTrash","key":"delete","mac":"cmd+backspace","when":"java:serverMode == Standard && focusedView == javaProjectExplorer && explorerResourceMoveableToTrash"},{"command":"java.view.package.deleteFilePermanently","key":"delete","mac":"cmd+backspace","when":"java:serverMode == Standard && focusedView == javaProjectExplorer && !explorerResourceMoveableToTrash"}],"menus":{"file/newFile":[{"command":"java.view.menus.file.newJavaClass"},{"command":"_java.project.create.from.menus.file"}],"commandPalette":[{"command":"java.project.reloadProjectFromActiveFile","when":"false"},{"command":"java.view.package.exportJar","when":"java:serverMode == Standard && !java:noJavaProjects"},{"command":"java.view.package.refresh","when":"false"},{"command":"java.view.package.changeToHierarchicalPackageView","when":"false"},{"command":"java.view.package.changeToFlatPackageView","when":"false"},{"command":"java.view.package.linkWithFolderExplorer","when":"false"},{"command":"java.view.package.unlinkWithFolderExplorer","when":"false"},{"command":"java.view.package.revealFileInOS","when":"false"},{"command":"java.view.package.copyFilePath","when":"false"},{"command":"java.view.package.copyRelativeFilePath","when":"false"},{"command":"java.project.addLibraries","when":"false"},{"command":"java.project.addLibraryFolders","when":"false"},{"command":"java.project.removeLibrary","when":"false"},{"command":"java.project.refreshLibraries","when":"false"},{"command":"java.view.package.new","when":"false"},{"command":"java.view.package.newJavaClass","when":"false"},{"command":"java.view.package.newJavaInterface","when":"false"},{"command":"java.view.package.newJavaEnum","when":"false"},{"command":"java.view.package.newJavaRecord","when":"false"},{"command":"java.view.package.newJavaAnnotation","when":"false"},{"command":"java.view.package.newJavaAbstractClass","when":"false"},{"command":"java.view.package.newPackage","when":"false"},{"command":"java.view.package.newFile","when":"false"},{"command":"java.view.package.newFolder","when":"false"},{"command":"java.view.package.renameFile","when":"false"},{"command":"java.view.package.moveFileToTrash","when":"false"},{"command":"java.view.package.deleteFilePermanently","when":"false"},{"command":"java.view.fileExplorer.newPackage","when":"false"},{"command":"java.project.build.workspace","when":"false"},{"command":"java.project.clean.workspace","when":"false"},{"command":"java.project.update","when":"false"},{"command":"java.project.rebuild","when":"false"},{"command":"java.view.package.revealInProjectExplorer","when":"false"},{"command":"_java.project.create.from.menus.file","when":"false"},{"command":"_java.project.create.from.fileexplorer.menu","when":"false"},{"command":"_java.project.create.from.fileexplorer.welcome","when":"false"},{"command":"_java.project.create.from.javaprojectexplorer.welcome","when":"false"},{"command":"_java.project.create.from.javaprojectexplorer","when":"false"}],"explorer/context":[{"submenu":"javaProject.newJavaFile","when":"explorerResourceIsFolder","group":"1_javaactions@10"},{"command":"java.view.fileExplorer.newPackage","when":"explorerResourceIsFolder","group":"1_javaactions@20"},{"command":"_java.project.create.from.fileexplorer.menu","when":"explorerResourceIsFolder","group":"1_javaactions@30"},{"command":"java.view.package.revealInProjectExplorer","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/ && java:serverMode == Standard","group":"1_javaactions@40"},{"command":"java.view.package.revealInProjectExplorer","when":"resourceExtname == .java && java:serverMode == Standard","group":"1_javaactions@40"}],"editor/title":[{"command":"java.project.reloadProjectFromActiveFile","when":"java:reloadProjectActive && javaLSReady","group":"navigation"}],"editor/title/context":[{"command":"java.view.package.revealInProjectExplorer","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/ && java:serverMode == Standard","group":"2_files@100"},{"command":"java.view.package.revealInProjectExplorer","when":"resourceExtname == .java && java:serverMode == Standard","group":"2_files@100"}],"view/title":[{"command":"_java.project.create.from.javaprojectexplorer","when":"view == javaProjectExplorer","group":"navigation@10"},{"command":"java.view.package.exportJar","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects && !java:importFailed","group":"navigation@20"},{"command":"java.project.build.workspace","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects && !java:importFailed","group":"navigation@30"},{"command":"java.view.package.changeToHierarchicalPackageView","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.packagePresentation == flat","group":"overflow_10@10"},{"command":"java.view.package.changeToFlatPackageView","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.packagePresentation != flat","group":"overflow_10@10"},{"command":"java.view.package.linkWithFolderExplorer","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.syncWithFolderExplorer != true","group":"overflow_10@20"},{"command":"java.view.package.unlinkWithFolderExplorer","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.dependency.syncWithFolderExplorer == true","group":"overflow_10@20"},{"command":"java.project.explorer.showNonJavaResources","when":"view == javaProjectExplorer && java:serverMode == Standard && !config.java.project.explorer.showNonJavaResources","group":"overflow_10@30"},{"command":"java.project.explorer.hideNonJavaResources","when":"view == javaProjectExplorer && java:serverMode == Standard && config.java.project.explorer.showNonJavaResources","group":"overflow_10@30"},{"command":"java.project.clean.workspace","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects","group":"overflow_20@10"},{"command":"java.view.package.refresh","when":"view == javaProjectExplorer && java:serverMode == Standard && !java:noJavaProjects","group":"overflow_50@10"}],"view/item/context":[{"command":"java.view.package.revealFileInOS","when":"view == javaProjectExplorer && viewItem =~ /java:(?=.*?\\b\\+uri\\b)/","group":"6_copypath@10"},{"command":"java.view.package.copyFilePath","when":"view == javaProjectExplorer && viewItem =~ /java:(?=.*?\\b\\+uri\\b)/","group":"6_copypath@20"},{"command":"java.view.package.copyRelativeFilePath","when":"view == javaProjectExplorer && viewItem =~ /java:(?=.*?\\b\\+uri\\b)/","group":"6_copypath@25"},{"command":"java.view.package.renameFile","when":"view == javaProjectExplorer && viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+(source|resource)\\b)(?=.*?\\b\\+uri\\b)/","group":"7_modification@10"},{"command":"java.view.package.renameFile","when":"view == javaProjectExplorer && viewItem =~ /java:(file|type|folder)(?=.*?\\b\\+uri\\b)/","group":"7_modification@10"},{"command":"java.view.package.moveFileToTrash","when":"view == javaProjectExplorer && explorerResourceMoveableToTrash && viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+(source|resource)\\b)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.view.package.moveFileToTrash","when":"view == javaProjectExplorer && explorerResourceMoveableToTrash && viewItem =~ /java:(file|type|folder)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.view.package.deleteFilePermanently","when":"view == javaProjectExplorer && !explorerResourceMoveableToTrash && viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+(source|resource)\\b)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.view.package.deleteFilePermanently","when":"view == javaProjectExplorer && !explorerResourceMoveableToTrash && viewItem =~ /java:(file|type|folder)(?=.*?\\b\\+uri\\b)/","group":"7_modification@20"},{"command":"java.project.build.workspace","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@5"},{"command":"java.project.rebuild","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@6"},{"submenu":"javaProject.new","when":"view == javaProjectExplorer && viewItem =~ /java(?!:container)(?!:jar)(?!.*?\\b\\+binary\\b)(?=.*?\\b\\+uri\\b)/","group":"1_new@10"},{"command":"java.view.package.new","when":"view == javaProjectExplorer && viewItem =~ /java(?!:container)(?!:jar)(?!.*?\\b\\+binary\\b)(?=.*?\\b\\+uri\\b)/","group":"inline@add_0"},{"command":"java.project.addLibraries","alt":"java.project.addLibraryFolders","when":"view == javaProjectExplorer && viewItem =~ /java:container(?=.*?\\b\\+referencedLibrary\\b)/","group":"inline@0"},{"command":"java.project.removeLibrary","when":"view == javaProjectExplorer && viewItem =~ /java:jar(?=.*?\\b\\+referencedLibrary\\b)(?=.*?\\b\\+uri\\b)/","group":"inline"},{"command":"java.project.refreshLibraries","when":"view == javaProjectExplorer && viewItem =~ /java:container(?=.*?\\b\\+referencedLibrary\\b)/","group":"inline@1"},{"command":"java.view.package.exportJar","when":"view == javaProjectExplorer && viewItem =~ /java:workspace(?=.*?\\b\\+uri\\b)/ && java:serverMode == Standard","group":"inline"},{"submenu":"javaProject.maven","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+maven\\b)/","group":"9_configuration@10"},{"submenu":"javaProject.gradle","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+(?:bsp-)?gradle\\b)/","group":"9_configuration@10"}],"javaProject.maven":[{"command":"java.project.update","group":"maven@10"}],"javaProject.gradle":[{"command":"java.project.update","group":"gradle@10"}],"javaProject.new":[{"command":"java.view.package.newJavaClass","group":"new1@10","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaInterface","group":"new1@11","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaEnum","group":"new1@12","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaRecord","group":"new1@13","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/) && viewItem =~ /java:.*\\+allowRecord\\b/"},{"command":"java.view.package.newJavaAnnotation","group":"new1@14","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newJavaAbstractClass","group":"new1@15","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newPackage","group":"new1@20","when":"view == javaProjectExplorer && (viewItem =~ /java:(package|packageRoot)(?=.*?\\b\\+source\\b)/ || viewItem =~ /java:project(?=.*?\\b\\+java\\b)/ || viewItem =~ /java:type/)"},{"command":"java.view.package.newFile","group":"new2@30"},{"command":"java.view.package.newFolder","group":"new2@40","when":"view == javaProjectExplorer && (viewItem =~ /java:(file|folder|project)/ || viewItem =~ /java:(packageRoot)(?=.*?\\b\\+resource\\b)/)"}],"javaProject.newJavaFile":[{"command":"java.view.package.newJavaClass","group":"new@10","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaInterface","group":"new@20","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaEnum","group":"new@30","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaRecord","group":"new@40","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaAnnotation","group":"new@50","when":"explorerResourceIsFolder"},{"command":"java.view.package.newJavaAbstractClass","group":"new@60","when":"explorerResourceIsFolder"}]},"submenus":[{"id":"javaProject.maven","label":"Maven"},{"id":"javaProject.gradle","label":"Gradle"},{"id":"javaProject.new","label":"New"},{"id":"javaProject.newJavaFile","label":"New Java File"}],"views":{"explorer":[{"id":"javaProjectExplorer","name":"Java Projects","contextualTitle":"Java Projects","icon":"$(project)","when":"java:projectManagerActivated"}]},"viewsWelcome":[{"view":"explorer","contents":"You can also [open a Java project folder](command:_java.project.open), or create a new Java project by clicking the button below.\n[Create Java Project](command:_java.project.create.from.fileexplorer.welcome)","when":"workspaceFolderCount == 0"},{"view":"javaProjectExplorer","contents":"No Java projects found in the current workspace. You can [open a Java project folder](command:_java.project.open), or create a new Java project by clicking the button below.\n[Create Java Project](command:_java.project.create.from.javaprojectexplorer.welcome)","when":"java:noJavaProjects"},{"view":"javaProjectExplorer","contents":"To view the projects, you can import the projects into workspace.\n[Import Projects](command:java.server.mode.switch?%5B%22Standard%22,true%5D)","when":"java:serverMode == LightWeight"},{"view":"javaProjectExplorer","contents":"The Java Projects explorer requires [Extension Pack for Java](command:extension.open?%5B%22vscjava.vscode-java-pack%22%5D) to provide full features.\n[Install](command:java.project.installExtension?%5B%22vscjava.vscode-java-pack%22%5D)","when":"java:projectManagerActivated && !java:languageSupportInstalled"},{"view":"javaProjectExplorer","contents":"Oops, something went wrong when opening Java projects. Please use the following action for troubleshooting:\n[Open Problems View](command:workbench.panel.markers.view.focus)","when":"java:importFailed"}],"taskDefinitions":[{"type":"java (buildArtifact)","properties":{"label":{"type":"string","description":"The label of export jar task."},"mainClass":{"type":"string","description":"The main class in the manifest of the exported jar."},"targetPath":{"type":"string","anyOf":[{"type":"string"},{"enum":["${workspaceFolder}/${workspaceFolderBasename}.jar",""],"enumDescriptions":["Export the jar file into the workspace folder. Its name is the same as the folder's.","Select output location manually when exporting the jar file."]}],"description":"The output path of the exported jar. Leave it empty if you want to manually pick the output location."},"elements":{"type":"array","items":{"anyOf":[{"type":"string"},{"enum":["${compileOutput}","${testCompileOutput}","${dependencies}","${testDependencies}"],"enumDescriptions":["The folders containing output class files in the runtime scope.","The folders containing output class files in the test scope.","The artifact dependencies in the runtime scope.","The artifact dependencies in the test scope."]}]},"description":"The content list of the exported jar."}}},{"type":"java (build)","properties":{"paths":{"type":"array","items":{"anyOf":[{"type":"string"},{"enum":["${workspace}","!<path>"],"enumDescriptions":["All the projects in workspace.","The path after '!' will be excluded from the paths to be built."]}]},"default":["${workspace}"],"description":"The project root paths that will be built. Both absolute path and relative path to the workspace folder are supported."},"isFullBuild":{"type":"boolean","default":"true","description":"Whether to execute a clean build or not."}}},{"type":"java","when":"java:showDeprecatedTasks","properties":{"label":{"type":"string","description":"The label of export jar task."},"mainClass":{"type":"string","description":"The main class in the manifest of the exported jar."},"targetPath":{"type":"string","anyOf":[{"type":"string"},{"enum":["${workspaceFolder}/${workspaceFolderBasename}.jar",""],"enumDescriptions":["Export the jar file into the workspace folder. Its name is the same as the folder's.","Select output location manually when exporting the jar file."]}],"description":"The output path of the exported jar. Leave it empty if you want to manually pick the output location."},"elements":{"type":"array","items":{"anyOf":[{"type":"string"},{"enum":["${compileOutput}","${testCompileOutput}","${dependencies}","${testDependencies}"],"enumDescriptions":["The folders containing output class files in the runtime scope.","The folders containing output class files in the test scope.","The artifact dependencies in the runtime scope.","The artifact dependencies in the test scope."]}]},"description":"The content list of the exported jar."}}}]},"scripts":{"compile":"tsc -p . && webpack --config webpack.config.js --mode development","watch":"webpack --mode development --watch","test":"tsc -p . && webpack --config webpack.config.js --mode development && node ./dist/test/index.js","test-ui":"tsc -p . && webpack --config webpack.config.js --mode development && node ./dist/test/ui/index.js","build-server":"node scripts/buildJdtlsExt.js","vscode:prepublish":"tsc -p ./ && webpack --mode production","tslint":"tslint -t verbose --project tsconfig.json"},"devDependencies":{"@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/minimatch":"^3.0.3","@types/mocha":"^9.1.1","@types/node":"20.x","@types/semver":"^7.3.13","@types/vscode":"1.83.1","@vscode/test-electron":"^2.4.1","copy-webpack-plugin":"^11.0.0","glob":"^7.2.3","mocha":"^9.2.2","ts-loader":"^9.4.2","tslint":"^6.1.3","typescript":"^4.9.4","vscode-extension-tester":"^7.0.0","webpack":"^5.94.0","webpack-cli":"^4.10.0"},"dependencies":{"await-lock":"^2.2.2","fmtr":"^1.1.4","fs-extra":"^10.1.0","globby":"^13.1.3","lodash":"^4.17.21","minimatch":"^5.1.6","semver":"^7.3.8","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-tas-client":"^0.1.75"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/vscjava.vscode-java-dependency-0.24.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878084,"pinned":false,"source":"gallery","id":"7865e561-1c83-410e-9b99-aabada597a7e","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1009170},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscjava.vscode-java-pack","uuid":"96f11e1f-1a46-4592-b084-f025b2c2a81f"},"manifest":{"name":"vscode-java-pack","displayName":"Extension Pack for Java","description":"Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more","license":"MIT","version":"0.29.0","publisher":"vscjava","preview":false,"engines":{"vscode":"^1.74.0"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","icon":"logo.png","keywords":["java","debugger","junit","maven","spring"],"categories":["Programming Languages","Linters","Debuggers","Formatters","Snippets","Extension Packs"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-pack"},"homepage":"https://github.com/Microsoft/vscode-java-pack","bugs":{"url":"https://github.com/Microsoft/vscode-java-pack"},"main":"./out/extension","capabilities":{"virtualWorkspaces":false},"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:java.overview","onCommand:java.showReleaseNotes","onWebviewPanel:java.overview","onCommand:java.runtime","onCommand:java.gettingStarted","onWebviewPanel:java.gettingStarted","onCommand:java.extGuide","onWebviewPanel:java.extGuide","onCommand:java.welcome","onWebviewPanel:java.welcome","onCommand:java.installJdk","onWebviewPanel:java.installJdk","onCommand:java.classpathConfiguration","onCommand:java.projectSettings","onWebviewPanel:java.projectSettings","onCommand:java.formatterSettings","onWalkthrough:javaWelcome"],"contributes":{"javaShortcuts":[{"title":"$(project) Open Project Settings","command":"java.projectSettings"},{"title":"$(info) Open Help Center","command":"java.welcome"}],"walkthroughs":[{"id":"javaWelcome","title":"Get Started with Java Development","description":"Your first steps to set up powerful Java tools in a lightweight, performant editor!","steps":[{"id":"java.runtime","title":"Get your runtime ready","description":"The Extension Pack for Java requires at least one Java runtime to be installed.\n[Install JDK](command:toSide:java.installJdk.fromWalkthrough)","media":{"markdown":"walkthrough/runtime.md"}},{"id":"java.showProjectExplorer","title":"Explore your projects","description":"Java Project Explorer helps you to manage your projects and dependencies. It also helps you to create new Java project, classes and packages. \n[View Java Projects](command:javaProjectExplorer.focus)","media":{"svg":"walkthrough/projects.svg","altText":"Project Explorer"},"when":"java:projectManagerActivated && workspaceFolderCount > 0"},{"id":"java.showProjectExplorer.inactive","title":"Explore your project","description":"Java Project Explorer helps you to manage your projects and dependencies. Create a new project or open an existing folder to see the full features.\n[Open Command Palette](command:workbench.action.quickOpen?%22>java%22)\n__Try searching for 'Create Java Project' or 'Open Folder'__","media":{"svg":"walkthrough/projects.svg","altText":"Project Explorer"},"when":"!java:projectManagerActivated || workspaceFolderCount == 0"},{"id":"java.codeActions","title":"View code actions and source actions","description":"Find available actions for your code in the editor:\n  - Open the right-click menu then select \"Refactor...\" or \"Source Action...\".\n  - Click on the light bulb💡.","media":{"svg":"walkthrough/codeAction.svg","altText":"Code actions and source actions"}},{"id":"java.debugAndTest","title":"Launch, debug and test","description":"Run and debug your application using the debugger. [Learn More...](https://aka.ms/java-walkthrough-debug)\nThe [Testing Explorer](command:workbench.view.testing.focus) allows you to view, run and manage all test cases in your project. [Learn More...](https://aka.ms/java-walkthrough-test)\n[Show Run and Debug View](command:workbench.view.debug)","media":{"svg":"walkthrough/debugAndTest.svg","altText":"Launch, debug and test"}},{"id":"java.extensions","title":"Extensions for additional tools and frameworks","description":"Install extensions to support additional frameworks such as Spring Boot, Application Servers, key mappings and so on.\n[Browse Recommended Extensions](command:toSide:java.extGuide)","media":{"svg":"walkthrough/extensions.svg","altText":"Extensions"}},{"id":"java.more","title":"Explore more Java resources","description":"✨ Help Center provides tips, resources and links to help you get answers to the most common questions to learn Java on VS Code.\n[Open Help Center](command:java.welcome)","media":{"svg":"walkthrough/helpCenter.svg","altText":"Explore more Java resources"},"when":"!isMac"},{"id":"java.moreForMac","title":"Explore more Java resources","description":"✨ Help Center provides tips, resources and links to help you get answers to the most common questions to learn Java on VS Code.\n[Open Help Center](command:java.welcome)","media":{"svg":"walkthrough/helpCenterMac.svg","altText":"Explore more Java resources"},"when":"isMac"}]}],"commands":[{"command":"java.installJdk","category":"Java","title":"Install New JDK"},{"command":"java.installJdk.fromWalkthrough","category":"Java","title":"Install New JDK"},{"command":"java.welcome","category":"Java","title":"Help Center"},{"command":"java.welcome.fromWalkthrough","category":"Java","title":"Help Center"},{"command":"java.classpathConfiguration","category":"Java","title":"Configure Classpath"},{"command":"java.projectSettings","category":"Java","title":"Open Project Settings"},{"command":"java.overview","category":"Java","title":"Overview"},{"command":"java.showReleaseNotes","category":"Java","title":"Show Release Notes"},{"command":"java.runtime","title":"Configure Java Runtime","category":"Java"},{"command":"java.gettingStarted","category":"Java","title":"Tips for Beginners"},{"command":"java.extGuide","category":"Java","title":"Extensions Guide"},{"command":"java.formatterSettings","category":"Java","title":"Open Java Formatter Settings with Preview"},{"command":"java.formatterSettings.showTextEditor","category":"Java","title":"Open Text Editor","icon":"$(go-to-file)"}],"configuration":{"title":"Extension Pack for Java","properties":{"java.help.firstView":{"type":["string"],"enum":["auto","overview","gettingStarted","welcome","none"],"enumDescriptions":["Automatically pick the first experience view","Present the Java Overview page","Present the Java Beginner Tips page","Present the Java Help Center page","Do not show any view"],"default":"auto","description":"Sets the default view which is presented during the first use.","scope":"window"},"java.help.showReleaseNotes":{"type":"boolean","default":true,"description":"Show release notes of Extension Pack for Java on startup.","scope":"window"},"java.help.collectErrorLog":{"type":"boolean","default":false,"description":"Whether to send back detailed information from error logs for diagnostic purpose.","scope":"window"}}},"menus":{"commandPalette":[{"command":"java.formatterSettings.showTextEditor","when":"false"},{"command":"java.welcome.fromWalkthrough","when":"false"},{"command":"java.installJdk.fromWalkthrough","when":"false"}],"view/title":[{"command":"java.runtime","group":"overflow_30@10","when":"view == javaProjectExplorer"},{"command":"java.classpathConfiguration","group":"overflow_30@20","when":"view == javaProjectExplorer"}],"view/item/context":[{"command":"java.classpathConfiguration","group":"9_configuration@20","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+unmanagedFolder\\b)(?=.*?\\b\\+uri\\b)/"}],"editor/title":[{"command":"java.formatterSettings.showTextEditor","when":"activeCustomEditorId == java.formatterSettingsEditor","group":"navigation"}]},"customEditors":[{"viewType":"java.formatterSettingsEditor","displayName":"Java Formatter Settings Editor","selector":[{"filenamePattern":"*.xml"}],"priority":"option"}],"keybindings":[{"command":"java.welcome","key":"shift+f1"}]},"scripts":{"vscode:prepublish":"npm run build","compile":"webpack --config webpack.config.js","watch":"webpack --config webpack.config.js --watch","build":"webpack --config webpack.config.js --mode=\"production\"","update-tpn":"node scripts/update-third-party-notice.js"},"devDependencies":{"@types/bytes":"^3.1.1","@types/expand-tilde":"^2.0.0","@types/fs-extra":"^9.0.13","@types/lodash":"^4.14.186","@types/node":"20.x","@types/path-exists":"^3.0.0","@types/react":"^17.0.50","@types/react-dom":"^16.9.16","@types/react-redux":"^7.1.24","@types/semver":"^7.3.12","@types/vscode":"^1.74.0","@types/winreg":"^1.2.31","@types/xmldom":"^0.1.31","autoprefixer":"^10.4.12","bytes":"^3.1.2","css-loader":"^6.7.1","file-loader":"^6.2.0","postcss":"^8.4.31","postcss-loader":"^6.2.1","process":"0.11.10","sass":"^1.55.0","sass-loader":"^12.6.0","style-loader":"^3.3.1","ts-loader":"^9.4.1","tslint":"^5.20.1","typescript":"^5.3.2","webpack":"^5.89.0","webpack-cli":"^5.1.4"},"extensionPack":["redhat.java","vscjava.vscode-java-debug","vscjava.vscode-java-test","vscjava.vscode-maven","vscjava.vscode-gradle","vscjava.vscode-java-dependency","VisualStudioExptTeam.vscodeintellicode"],"dependencies":{"@iconify-icons/codicon":"1.2.8","@iconify/react":"^1.1.4","@reduxjs/toolkit":"^1.8.6","@vscode/codicons":"^0.0.35","@vscode/webview-ui-toolkit":"1.4.0","@xmldom/xmldom":"^0.8.3","axios":"^1.6.0","bootstrap":"^4.6.2","compare-versions":"^3.6.0","expand-home-dir":"0.0.3","expand-tilde":"^2.0.2","fs-extra":"^9.1.0","hdr-histogram-js":"^3.0.0","highlight.js":"10.5.0","jdk-utils":"^0.4.4","jquery":"^3.6.1","lodash":"^4.17.21","react":"^16.14.0","react-bootstrap":"^1.6.6","react-dom":"^16.14.0","react-redux":"^7.2.9","semver":"^7.5.2","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-tas-client":"^0.1.75"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/vscjava.vscode-java-pack-0.29.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878082,"pinned":false,"source":"gallery","id":"96f11e1f-1a46-4592-b084-f025b2c2a81f","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":8566088},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscjava.vscode-java-test","uuid":"67c06b0d-1891-42ca-b2a8-113e79bff069"},"manifest":{"name":"vscode-java-test","displayName":"Test Runner for Java","description":"Run and debug JUnit or TestNG test cases.","repository":{"url":"https://github.com/Microsoft/vscode-java-test"},"version":"0.43.0","publisher":"vscjava","bugs":{"url":"https://github.com/Microsoft/vscode-java-test/issues"},"homepage":"https://github.com/Microsoft/vscode-java-test","preview":false,"icon":"resources/logo.png","keywords":["java","test","junit","testng","debug"],"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.88.0"},"categories":["Testing"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false}},"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:java.test.editor.run","onCommand:java.test.editor.debug","onCommand:java.test.runFromJavaProjectExplorer","onCommand:java.test.debugFromJavaProjectExplorer"],"main":"./main.js","contributes":{"javaExtensions":["./server/junit-jupiter-api_5.11.0.jar","./server/junit-jupiter-engine_5.11.0.jar","./server/junit-jupiter-migrationsupport_5.11.0.jar","./server/junit-jupiter-params_5.11.0.jar","./server/junit-platform-commons_1.11.0.jar","./server/junit-platform-engine_1.11.0.jar","./server/junit-platform-launcher_1.11.0.jar","./server/junit-platform-runner_1.11.0.jar","./server/junit-platform-suite-api_1.11.0.jar","./server/junit-platform-suite-commons_1.11.0.jar","./server/junit-platform-suite-engine_1.11.0.jar","./server/junit-vintage-engine_5.11.0.jar","./server/org.apiguardian.api_1.1.2.jar","./server/org.eclipse.jdt.junit4.runtime_1.3.100.v20231214-1952.jar","./server/org.eclipse.jdt.junit5.runtime_1.1.300.v20231214-1952.jar","./server/org.opentest4j_1.3.0.jar","./server/org.jacoco.core_0.8.12.202403310830.jar","./server/com.microsoft.java.test.plugin-0.43.0.jar"],"viewsWelcome":[{"view":"testing","contents":"No test cases are listed because the Java Language Server is currently running in [LightWeight Mode](https://aka.ms/vscode-java-lightweight). To show test cases, click on the button to switch to Standard Mode.\n[Switch to Standard Mode](command:java.server.mode.switch?%5B%22Standard%22,true%5D)","when":"java:serverMode == LightWeight"},{"view":"testing","contents":"Click below button to configure a test framework for your project.\n[Enable Java Tests](command:_java.test.enableTests)","when":"java:needSetupTests"}],"menus":{"view/item/context":[{"command":"java.test.runFromJavaProjectExplorer","when":"view == javaProjectExplorer && viewItem =~ /java:(type|package|packageRoot)(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+test\\b)(?!.*?\\b\\+resource\\b)/","group":"8_execution@10"},{"command":"java.test.debugFromJavaProjectExplorer","when":"view == javaProjectExplorer && viewItem =~ /java:(type|package|packageRoot)(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+test\\b)(?!.*?\\b\\+resource\\b)/","group":"8_execution@20"},{"command":"java.test.runFromJavaProjectExplorer","when":"view == javaProjectExplorer && viewItem =~ /java:(type|package|packageRoot)(?=.*?\\b\\+uri\\b)(?=.*?\\b\\+test\\b)(?!.*?\\b\\+resource\\b)/","group":"inline@run_0"}],"commandPalette":[{"command":"java.test.runFromJavaProjectExplorer","when":"false"},{"command":"java.test.debugFromJavaProjectExplorer","when":"false"},{"command":"java.test.editor.run","when":"java:serverMode != LightWeight"},{"command":"java.test.editor.debug","when":"java:serverMode != LightWeight"},{"command":"java.test.goToTest","when":"java:testRunnerActivated && resourceExtname == .java"},{"command":"java.test.goToTestSubject","when":"java:testRunnerActivated && resourceExtname == .java"}],"editor/context":[{"command":"java.test.goToTest","when":"java:testRunnerActivated && resourcePath =~ /.*src[/|\\\\]main[/|\\\\]java[/|\\\\].*\\.java/","group":"navigation@100"},{"command":"java.test.goToTestSubject","when":"java:testRunnerActivated && resourcePath =~ /.*src[/|\\\\]test[/|\\\\]java[/|\\\\].*\\.java/","group":"navigation@100"}]},"commands":[{"command":"java.test.goToTest","title":"Go to Test","category":"Java"},{"command":"java.test.goToTestSubject","title":"Go to Test Subject","category":"Java"},{"command":"java.test.runFromJavaProjectExplorer","title":"Run Tests","icon":"$(play)","category":"Java"},{"command":"java.test.debugFromJavaProjectExplorer","title":"Debug Tests","category":"Java"},{"command":"java.test.editor.run","title":"Run Tests","category":"Java"},{"command":"java.test.editor.debug","title":"Debug Tests","category":"Java"}],"configuration":{"title":"Test Runner for Java","properties":{"java.test.defaultConfig":{"type":"string","description":"Specify the name of the default test configuration.","scope":"resource"},"java.test.config":{"type":["object","array"],"properties":{"name":{"type":"string","description":"Specify the name of the configuration item.","pattern":"^((?!default).)*$","default":""},"workingDirectory":{"type":"string","description":"Specify the working directory when running the tests.","default":"${workspaceFolder}"},"classPaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the classpaths of current project.","The classpaths within 'runtime' scope of current project.","The classpaths within 'test' scope of current project.","The path after '!' will be excluded from the classpaths."]},"string"]},"description":"The classpaths defined in this setting will be appended to the resolved classpaths.","default":[]},"modulePaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the modulepaths of current project.","The modulepaths within 'runtime' scope of current project.","The modulepaths within 'test' scope of current project.","The path after '!' will be excluded from the modulePaths."]},"string"]},"description":"The modulepaths defined in this setting will be appended to the resolved modulepaths.","default":[]},"javaExec":{"type":"string","markdownDescription":"The path to java executable to use. For example: `C:\\Program Files\\jdk\\bin\\java.exe`. If unset project JDK's java executable is used.","default":""},"encoding":{"type":"string","description":"The 'file.encoding' setting for the test JVM. Only set this if you have to test code that relies on the default encoding being something other than UTF-8.","default":""},"vmArgs":{"type":"array","items":{"type":"string"},"description":"Specify the extra options and system properties for the JVM.","default":[]},"args":{"type":"array","items":{"type":"string"},"description":"Specify the command line arguments which will be passed to the test runner.","default":[]},"env":{"type":"object","description":"Specify the extra environment variables when running the tests.","default":{}},"envFile":{"type":"string","description":"Specify the absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"Specify extra source paths when debugging the tests.","default":[]},"preLaunchTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched before the start of testing.","default":""},"postDebugTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched at the very end of testing.","default":""},"testKind":{"type":"string","markdownDescription":"Specify the targeting test framework for this test configuration. Supported values are `junit`, `testng`.","enum":["junit","testng"],"default":"junit"},"filters":{"type":"object","description":"Specify the test filters.","default":{},"properties":{"tags":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify the tags to be included or excluded. \n\nTags having `!` as the prefix will be **excluded**. \n\nNote: This setting **only** takes effect when `testKind` is set to `junit`.","default":[]}}},"when":{"type":"string","markdownDescription":"Specify the when clause for matching tests by to determine if the configuration should be run with.\n\nNote: `testItem =~ /<regular-expression>/` is the only supported clause currently, where `testItem` is the fully-qualified name of a test class or method. For example:\n- `testItem =~ /^com\\.company\\.package\\.test/` - a package with the name \"com.company.package.test\".\n- `testItem =~ /(?<=\\.)Test/` - a class with a name containing \"Test\".\n\nWhen launching a test that satisfies a single configuration's when clause, it will be run with that configuration. If multiple configurations are satisfied, the user will be prompted to pick which configuration to run with.\n\nWhen launching multiple tests (e.g. for a class or package), a configuration's when clause must be satisfied for **all** tests to be considered.\n\nConfigurations that do not define a when clause will match all tests.","default":""},"coverage":{"type":"object","description":"The configurations for test coverage.","default":{},"properties":{"appendResult":{"type":"boolean","description":"Whether the coverage result is appended.","default":true}}}},"description":"Specify the configurations for running the tests.","items":{"type":"object","description":"Specify the configuration item for running the tests.","properties":{"name":{"type":"string","description":"Specify the name of the configuration item.","pattern":"^((?!default).)*$","default":""},"workingDirectory":{"type":"string","description":"Specify the working directory when running the tests.","default":"${workspaceFolder}"},"classPaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the classpaths of current project.","The classpaths within 'runtime' scope of current project.","The classpaths within 'test' scope of current project.","The path after '!' will be excluded from the classpaths."]},"string"]},"description":"The classpaths defined in this setting will be appended to the resolved classpaths.","default":[]},"modulePaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the modulepaths of current project.","The modulepaths within 'runtime' scope of current project.","The modulepaths within 'test' scope of current project.","The path after '!' will be excluded from the modulePaths."]},"string"]},"description":"The modulepaths defined in this setting will be appended to the resolved modulepaths.","default":[]},"javaExec":{"type":"string","markdownDescription":"The path to java executable to use. For example: `C:\\Program Files\\jdk\\bin\\java.exe`. If unset project JDK's java executable is used.","default":""},"encoding":{"type":"string","description":"The 'file.encoding' setting for the test JVM. Only set this if you have to test code that relies on the default encoding being something other than UTF-8.","default":""},"vmArgs":{"type":"array","items":{"type":"string"},"description":"Specify the extra options and system properties for the JVM.","default":[]},"args":{"type":"array","items":{"type":"string"},"description":"Specify the command line arguments which will be passed to the test runner.","default":[]},"env":{"type":"object","description":"Specify the extra environment variables when running the tests.","default":{}},"envFile":{"type":"string","description":"Specify the absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"Specify extra source paths when debugging the tests.","default":[]},"preLaunchTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched before the start of testing.","default":""},"postDebugTask":{"type":"string","description":"Specify the label of a task specified in tasks.json (in the workspace's .vscode folder). The task will be launched at the very end of testing.","default":""},"testKind":{"type":"string","markdownDescription":"Specify the targeting test framework for this test configuration. Supported values are `junit`, `testng`.","enum":["junit","testng"],"default":"junit"},"filters":{"type":"object","description":"Specify the test filters.","default":{},"properties":{"tags":{"type":"array","items":{"type":"string"},"markdownDescription":"Specify the tags to be included or excluded. \n\nTags having `!` as the prefix will be **excluded**. \n\nNote: This setting **only** takes effect when `testKind` is set to `junit`.","default":[]}}},"when":{"type":"string","markdownDescription":"Specify the when clause for matching tests by to determine if the configuration should be run with.\n\nNote: `testItem =~ /<regular-expression>/` is the only supported clause currently, where `testItem` is the fully-qualified name of a test class or method. For example:\n- `testItem =~ /^com\\.company\\.package\\.test/` - a package with the name \"com.company.package.test\".\n- `testItem =~ /(?<=\\.)Test/` - a class with a name containing \"Test\".\n\nWhen launching a test that satisfies a single configuration's when clause, it will be run with that configuration. If multiple configurations are satisfied, the user will be prompted to pick which configuration to run with.\n\nWhen launching multiple tests (e.g. for a class or package), a configuration's when clause must be satisfied for **all** tests to be considered.\n\nConfigurations that do not define a when clause will match all tests.","default":""},"coverage":{"type":"object","description":"The configurations for test coverage.","default":{},"properties":{"appendResult":{"type":"boolean","description":"Whether the coverage result is appended.","default":true}}}}},"scope":"resource"}}}},"scripts":{"compile":"tsc -p ./","watch":"webpack --mode development --watch","test":"npm run compile && node ./out/test/index.js","lint":"eslint -c .eslintrc.js --ext .ts ./src","build-plugin":"node scripts/buildJdtlsExt.js","vscode:prepublish":"webpack --mode production"},"extensionDependencies":["redhat.java","vscjava.vscode-java-debug"],"devDependencies":{"@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/lru-cache":"^7.10.10","@types/mocha":"^9.1.1","@types/node":"^16.18.13","@types/sinon":"^10.0.13","@types/vscode":"1.88.0","@typescript-eslint/eslint-plugin":"^5.60.1","@typescript-eslint/parser":"^5.60.1","@vscode/test-electron":"^2.3.8","eslint":"^8.43.0","glob":"^7.2.3","mocha":"^9.2.2","sinon":"^14.0.2","ts-loader":"^9.4.2","typescript":"^4.9.4","webpack":"^5.94.0","webpack-cli":"^4.10.0"},"dependencies":{"fs-extra":"^10.1.0","get-port":"^4.2.0","iconv-lite":"^0.6.3","lodash":"^4.17.21","lru-cache":"^7.17.0","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-languageclient":"6.0.0-next.9","vscode-tas-client":"^0.1.75"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/vscjava.vscode-java-test-0.43.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878084,"pinned":false,"source":"gallery","id":"67c06b0d-1891-42ca-b2a8-113e79bff069","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":4076563},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"visualstudioexptteam.intellicode-api-usage-examples","uuid":"9fa2a00e-3bfa-4c2a-abc4-a865bb2b5cf3"},"manifest":{"name":"intellicode-api-usage-examples","displayName":"IntelliCode API Usage Examples","description":"See relevant code examples from GitHub for over 100K different APIs right in your editor.","repository":{"type":"git","url":"https://github.com/MicrosoftDocs/intellicode"},"version":"0.2.9","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","author":"Microsoft","publisher":"VisualStudioExptTeam","engines":{"vscode":"^1.94.0"},"bugs":{"url":"https://go.microsoft.com/fwlink/?linkid=2005855"},"icon":"images/icon.png","categories":["Other"],"keywords":["python","javascript","typescript"],"activationEvents":["onLanguage:python","onLanguage:typescript","onLanguage:javascript","onLanguage:typescriptreact","onLanguage:javascriptreact"],"main":"./dist/extension.js","contributes":{"configuration":{"title":"IntelliCode API Usage Examples","properties":{"intellicodeApiExamples.loggingLevel":{"type":"string","enum":["ALL","DEBUG","INFO","WARN","ERROR","FATAL","OFF"],"default":"INFO","description":"Logging level for console"},"intellicodeApiExamples.python.enabled":{"type":"boolean","default":true,"description":"Enable API Usage Examples for Python files"},"intellicodeApiExamples.typescript.enabled":{"type":"boolean","default":true,"description":"Enable API Usage Examples for Typescript/Javascript files"}}}},"scripts":{"preinstall":"cd src/server && npm i","vscode:prepublish":"npm run webpack","lint":"eslint . --ext .ts,.tsx","webpack":"npm run localize && npm run build:server && webpack --mode production && npm run css","webpackDev":"npm run localize && npm run build:serverDev && webpack --mode development && npm run css","refreshVSToken":"vsts-npm-auth -config .npmrc","package":"vsce package","localize":"gulp localizationBundle && copyfiles -u 2 .localization/out/**/* ./dist","css":"gulp minifyCss","build:server":"cd src/server && npm run build","build:serverDev":"cd src/server && npm run build:dev","test":"node ./out/vscode-tests/runTests.js","pretest":"tsc -p ./ --outDir ./out","posttest":"rmdir /s /q .vscode-test","reloadWebview":"copyfiles -u 3 src/client/gaia-results/*.css dist/gaia-results/ && copyfiles -u 3 src/client/gaia-results/*.js dist/gaia-results/"},"devDependencies":{"@types/glob":"^7.2.0","@types/mocha":"^8.2.3","@types/node":"^16.9.6","@types/vscode":"^1.94.0","@typescript-eslint/eslint-plugin":"^4.31.2","@typescript-eslint/parser":"^4.31.2","@vscode/codicons":"0.0.28","copy-webpack-plugin":"^6.0.3","copyfiles":"^2.4.1","eslint":"^7.32.0","gulp":"^4.0.2","gulp-clean-css":"^4.3.0","gulp-filter":"^7.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^6.0.0-alpha.1","gulp-concat":"^2.6.1","node-loader":"^0.6.0","ts-loader":"^8.0.18","typemoq":"^2.1.0","typescript":"^4.4.3","vsce":"^1.97.0","vscode-nls-dev":"^3.2.6","vscode-test":"^1.4.1","webpack":"^5.72.0","webpack-cli":"^4.9.2","mocha":"^8.2.1","react":"16.9.0"},"dependencies":{"@gaia-codesearch/gaia-api-python":"0.0.3-ci-main-20230824.2","@gaia-codesearch/gaia-api-typescript":"0.0.3-ci-main-20230824.2","applicationinsights":"^1.7.2","highlight.js":"^11.4.0","@vscode/extension-telemetry":"^0.9.6","vscode-nls":"4.1.1","vscode-tas-client":"^0.1.63","@microsoft/fast-react-wrapper":"0.1.18","@vscode/webview-ui-toolkit":"1.0.0","vscode-languageclient":"^8.1.0"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/visualstudioexptteam.intellicode-api-usage-examples-0.2.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878082,"pinned":false,"source":"gallery","id":"9fa2a00e-3bfa-4c2a-abc4-a865bb2b5cf3","publisherId":"e8db1608-52e8-4d8d-92a6-779c5db302a9","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":7770912},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscjava.vscode-java-debug","uuid":"61fcd0cf-64d7-4836-8d6b-d55f4fb83281"},"manifest":{"name":"vscode-java-debug","displayName":"Debugger for Java","description":"A lightweight Java debugger for Visual Studio Code","version":"0.58.1","publisher":"vscjava","preview":false,"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","icon":"logo.png","workspaceTrust":{"request":"onDemand","description":"Extension may require your trust on workspace for code execution."},"capabilities":{"virtualWorkspaces":false},"keywords":["java","debug","debugging","debugger"],"engines":{"vscode":"^1.75.0"},"license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-java-debug.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-java-debug/issues"},"homepage":"https://github.com/Microsoft/vscode-java-debug/blob/master/README.md","categories":["Debuggers","Programming Languages","Other"],"activationEvents":["onLanguage:java","onDebugInitialConfigurations","onDebugResolve:java","onCommand:JavaDebug.SpecifyProgramArgs","onCommand:JavaDebug.PickJavaProcess"],"main":"./dist/extension","contributes":{"breakpoints":[{"language":"java"}],"javaExtensions":["./server/com.microsoft.java.debug.plugin-0.53.1.jar"],"commands":[{"command":"java.debug.hotCodeReplace","title":"Hot Code Replace","icon":{"dark":"images/commands/hot_code_replace.svg","light":"images/commands/hot_code_replace.svg"}},{"command":"java.debug.runJavaFile","title":"Run Java","icon":"$(play)"},{"command":"java.debug.debugJavaFile","title":"Debug Java","icon":"$(debug-alt-small)"},{"command":"java.debug.runFromProjectView","title":"Run","icon":"$(play)"},{"command":"java.debug.debugFromProjectView","title":"Debug","icon":"$(debug-alt-small)"},{"command":"java.debug.continueAll","title":"Continue All"},{"command":"java.debug.continueOthers","title":"Continue Others"},{"command":"java.debug.pauseAll","title":"Pause All"},{"command":"java.debug.pauseOthers","title":"Pause Others"},{"command":"java.debug.variables.showHex","title":"Show as Hex"},{"command":"java.debug.variables.notShowHex","title":"Show as Dec"},{"command":"java.debug.variables.showQualifiedNames","title":"Show Qualified Names"},{"command":"java.debug.variables.notShowQualifiedNames","title":"Show Simple Names"},{"command":"java.debug.variables.showStaticVariables","title":"Show Static Variables"},{"command":"java.debug.variables.notShowStaticVariables","title":"Hide Static Variables"},{"command":"java.debug.variables.showLogicalStructure","title":"Enable Logical Structure View"},{"command":"java.debug.variables.notShowLogicalStructure","title":"Disable Logical Structure View"},{"command":"java.debug.variables.showToString","title":"Enable 'toString()' Object View"},{"command":"java.debug.variables.notShowToString","title":"Disable 'toString()' Object View"},{"command":"java.debug.variables.autoExpandLazyVariables","title":"Auto Expand Lazy Variables"},{"command":"java.debug.variables.manualExpandLazyVariables","title":"Manual Expand Lazy Variables"}],"menus":{"view/item/context":[{"command":"java.debug.debugFromProjectView","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"inline@100"},{"command":"java.debug.runFromProjectView","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@10"},{"command":"java.debug.debugFromProjectView","when":"view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/","group":"8_execution@20"}],"explorer/context":[{"command":"java.debug.runJavaFile","when":"resourceExtname == .java","group":"1_javaactions@90"},{"command":"java.debug.debugJavaFile","when":"resourceExtname == .java","group":"1_javaactions@91"}],"editor/context":[{"command":"java.debug.runJavaFile","when":"editorLangId == java && resourceExtname == .java","group":"javadebug@1"},{"command":"java.debug.debugJavaFile","when":"editorLangId == java && resourceExtname == .java","group":"javadebug@2"}],"editor/title/run":[{"command":"java.debug.runJavaFile","when":"resourceExtname == .java","group":"1_javadebug@10"},{"command":"java.debug.debugJavaFile","when":"resourceExtname == .java","group":"1_javadebug@20"}],"debug/toolBar":[{"command":"java.debug.hotCodeReplace","group":"navigation@100","when":"inDebugMode && debugType == java && javaHotReload == 'manual' && javaHotReloadOn"}],"debug/callstack/context":[{"command":"java.debug.continueAll","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"},{"command":"java.debug.continueOthers","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"},{"command":"java.debug.pauseAll","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"},{"command":"java.debug.pauseOthers","when":"inDebugMode && debugType == java && callStackItemType == 'thread'"}],"commandPalette":[{"command":"java.debug.hotCodeReplace","when":"false"},{"command":"java.debug.runJavaFile","when":"false"},{"command":"java.debug.debugJavaFile","when":"false"},{"command":"java.debug.continueAll","when":"false"},{"command":"java.debug.continueOthers","when":"false"},{"command":"java.debug.pauseAll","when":"false"},{"command":"java.debug.pauseOthers","when":"false"},{"command":"java.debug.runFromProjectView","when":"false"},{"command":"java.debug.debugFromProjectView","when":"false"},{"command":"java.debug.variables.showHex","when":"false"},{"command":"java.debug.variables.notShowHex","when":"false"},{"command":"java.debug.variables.showQualifiedNames","when":"false"},{"command":"java.debug.variables.notShowQualifiedNames","when":"false"},{"command":"java.debug.variables.showStaticVariables","when":"false"},{"command":"java.debug.variables.notShowStaticVariables","when":"false"},{"command":"java.debug.variables.showLogicalStructure","when":"false"},{"command":"java.debug.variables.notShowLogicalStructure","when":"false"},{"command":"java.debug.variables.showToString","when":"false"},{"command":"java.debug.variables.notShowToString","when":"false"},{"command":"java.debug.variables.autoExpandLazyVariables","when":"false"},{"command":"java.debug.variables.manualExpandLazyVariables","when":"false"}],"debug/variables/context":[{"command":"java.debug.variables.showHex","when":"debugType == 'java' && javadebug:showHex == 'off'","group":"1_view@1"},{"command":"java.debug.variables.notShowHex","when":"debugType == 'java' && javadebug:showHex == 'on'","group":"1_view@1"},{"command":"java.debug.variables.showQualifiedNames","when":"debugType == 'java' && javadebug:showQualifiedNames == 'off'","group":"1_view@2"},{"command":"java.debug.variables.notShowQualifiedNames","when":"debugType == 'java' && javadebug:showQualifiedNames == 'on'","group":"1_view@2"},{"command":"java.debug.variables.showStaticVariables","when":"debugType == 'java' && javadebug:showStaticVariables == 'off'","group":"1_view@3"},{"command":"java.debug.variables.notShowStaticVariables","when":"debugType == 'java' && javadebug:showStaticVariables == 'on'","group":"1_view@3"},{"command":"java.debug.variables.showLogicalStructure","when":"debugType == 'java' && javadebug:showLogicalStructure == 'off'","group":"1_view@4"},{"command":"java.debug.variables.notShowLogicalStructure","when":"debugType == 'java' && javadebug:showLogicalStructure == 'on'","group":"1_view@4"},{"command":"java.debug.variables.autoExpandLazyVariables","when":"debugType == 'java' && javadebug:expandLazyVariable == 'off'","group":"1_view@6"},{"command":"java.debug.variables.manualExpandLazyVariables","when":"debugType == 'java' && javadebug:expandLazyVariable == 'on'","group":"1_view@6"}]},"debuggers":[{"type":"java","label":"Java","languages":["java"],"variables":{"SpecifyProgramArgs":"JavaDebug.SpecifyProgramArgs","PickJavaProcess":"JavaDebug.PickJavaProcess"},"configurationAttributes":{"launch":{"required":["mainClass"],"properties":{"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects. This setting also works when the debugger looks for the specified main class when launching a program. It is required for expression evaluation.","default":""},"mainClass":{"type":"string","description":"The fully qualified class name (e.g. [java module name/]com.xyz.MainApp) or the java file path of the program entry.","default":""},"javaExec":{"type":"string","description":"The path to java executable to use. If unset project JDK's java executable is used.","default":""},"args":{"type":["array","string"],"description":"The command line arguments passed to the program.","default":""},"vmArgs":{"type":["array","string"],"description":"The extra options and system properties for the JVM (e.g. -Xms<size> -Xmx<size> -D<name>=<value>).","default":""},"modulePaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the module paths of current project.","The module paths within 'runtime' scope of current project.","The module paths within 'test' scope of current project.","The path after '!' will be excluded from the modulePaths."]},"string"]},"description":"The modulepaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"classPaths":{"type":"array","items":{"anyOf":[{"enum":["$Auto","$Runtime","$Test","!<path>"],"enumDescriptions":["Automatically resolve the classpaths of current project.","The classpaths within 'runtime' scope of current project.","The classpaths within 'test' scope of current project.","The path after '!' will be excluded from the classpaths."]},"string"]},"description":"The classpaths for launching the JVM. If not specified, the debugger will automatically resolve from current project.","default":[]},"sourcePaths":{"type":"array","items":{"type":"string"},"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories.","default":[]},"encoding":{"type":"string","description":"The file.encoding setting for the JVM. Possible values can be found in https://docs.oracle.com/javase/8/docs/technotes/guides/intl/encoding.doc.html.","default":"UTF-8"},"cwd":{"type":"string","description":"The working directory of the program. Defaults to the current workspace root.","default":"${workspaceFolder}"},"env":{"type":"object","description":"The extra environment variables for the program.","default":{}},"envFile":{"type":["array","string"],"description":"Absolute path to a file containing environment variable definitions. Multiple files can be specified by providing an array of absolute paths.","default":"${workspaceFolder}/.env"},"stopOnEntry":{"type":"boolean","description":"Automatically pause the program after launching.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code debug console (input stream not supported).","VS Code integrated terminal.","External terminal that can be configured in user settings."],"description":"The specified console to launch the program.","default":"integratedTerminal"},"shortenCommandLine":{"type":"string","enum":["none","jarmanifest","argfile","auto"],"enumDescriptions":["Launch the program with the standard command line 'java [options] classname [args]'.","Generate the classpath parameters to a temporary classpath.jar file, and launch the program with the command line 'java -cp classpath.jar classname [args]'.","Generate the classpath parameters to a temporary argument file, and launch the program with the command line 'java @argfile [args]'. This value only applies to Java 9 and higher.","Automatically detect the command line length and determine whether to shorten the command line via an appropriate approach."],"description":"When the project has long classpath or big VM arguments, the command line to launch the program may exceed the maximum command line string limitation allowed by the OS. This configuration item provides multiple approaches to shorten the command line.","default":"auto"},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"skipClasses":["$JDK","junit.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"skipClasses":{"type":"array","description":"Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":["$JDK","junit.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":true},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":true},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":true}}}}},"attach":{"properties":{"hostName":{"type":"string","default":"localhost","description":"The host name or ip address of remote debuggee."},"port":{"type":["number","string"],"description":"The debug port of remote debuggee."},"processId":{"anyOf":[{"enum":["${command:PickJavaProcess}"],"description":"Use process picker to select a process to attach, or Process ID as integer.","default":"${command:PickJavaProcess}"},{"type":"integer","description":"ID of the local process to attach to."}]},"timeout":{"type":"number","default":30000,"description":"Timeout value before reconnecting, in milliseconds (default to 30000ms)."},"sourcePaths":{"type":"array","items":{"type":"string"},"default":[],"description":"The extra source directories of the program. The debugger looks for source code from project settings by default. This option allows the debugger to look for source code in extra directories."},"projectName":{"type":"string","description":"The preferred project in which the debugger searches for classes. There could be duplicated class names in different projects.","default":""},"stepFilters":{"type":"object","description":"Skip specified classes or methods when stepping.","default":{"skipClasses":["$JDK","junit.*"],"skipSynthetics":false,"skipStaticInitializers":false,"skipConstructors":false},"properties":{"skipClasses":{"type":"array","description":"Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":["$JDK","junit.*"]},"skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":false},"skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":false},"skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":false}}}}}},"configurationSnippets":[{"label":"Java: Launch Program","description":"Add a new configuration for launching a java program.","body":{"type":"java","name":"Launch Java Program","request":"launch","mainClass":""}},{"label":"Java: Launch Program in External Terminal","description":"Add a new configuration for launching a java program in the external terminal.","body":{"type":"java","name":"Launch External Terminal","request":"launch","console":"externalTerminal","mainClass":""}},{"label":"Java: Launch Program in Current File","description":"Add a new configuration for launching current java file.","body":{"type":"java","name":"Launch Current File","request":"launch","mainClass":"^\"\\${file}\""}},{"label":"Java: Launch Program with Arguments Prompt","description":"Add a new configuration for launching a java program with arguments prompt.","body":{"type":"java","name":"Launch with Arguments Prompt","request":"launch","mainClass":"","args":"^\"\\${command:SpecifyProgramArgs}\""}},{"label":"Java: Attach","description":"Add a new configuration for attaching to a running java program.","body":{"type":"java","name":"Attach","request":"attach","hostName":"localhost","port":"<debug port of the debuggee>"}},{"label":"Java: Attach to Process","description":"Use process picker to select a Java process to attach to.","body":{"type":"java","request":"attach","name":"Attach by Process ID","processId":"^\"\\${command:PickJavaProcess}\""}},{"label":"Java: Attach to Remote Program","description":"Add a new configuration for attaching to a remote java program.","body":{"type":"java","name":"Attach to Remote Program","request":"attach","hostName":"<The host name or ip address of remote debuggee>","port":"<debug port of remote debuggee>"}}]}],"configuration":{"type":"object","title":"Java Debugger","properties":{"java.debug.logLevel":{"type":"string","default":"warn","description":"Minimum level of debugger logs that are sent to VS Code.","enum":["error","warn","info","verbose"]},"java.debug.settings.showHex":{"type":"boolean","description":"Show numbers in hex format in \"Variables\" viewlet.","default":false},"java.debug.settings.showStaticVariables":{"type":"boolean","description":"Show static variables in \"Variables\" viewlet.","default":false},"java.debug.settings.showQualifiedNames":{"type":"boolean","description":"Show fully qualified class names in \"Variables\" viewlet.","default":false},"java.debug.settings.showLogicalStructure":{"type":"boolean","description":"Show the logical structure for the Collection and Map classes in \"Variables\" viewlet.","default":true},"java.debug.settings.showToString":{"type":"boolean","description":"Show 'toString()' value for all classes that override 'toString' method in \"Variables\" viewlet.","default":true},"java.debug.settings.maxStringLength":{"type":"number","description":"The maximum length of strings displayed in \"Variables\" or \"Debug Console\" viewlet, strings longer than this length will be trimmed, if 0 no trim is performed.","default":0},"java.debug.settings.numericPrecision":{"type":"number","description":"The precision when formatting doubles in \"Variables\" or \"Debug Console\" viewlet.","default":0},"java.debug.settings.hotCodeReplace":{"type":"string","default":"manual","description":"Reload the changed Java classes during debugging.","enum":["auto","manual","never"]},"java.debug.settings.enableRunDebugCodeLens":{"type":"boolean","description":"Enable the run and debug code lens providers over main methods.","default":true},"java.debug.settings.forceBuildBeforeLaunch":{"type":"boolean","description":"Force building the workspace before launching java program.","default":true},"java.debug.settings.onBuildFailureProceed":{"type":"boolean","description":"Force to proceed when build fails","default":false},"java.debug.settings.console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code debug console (input stream not supported).","VS Code integrated terminal.","External terminal that can be configured in user settings."],"description":"The specified console to launch Java program. If you want to customize the console for a specific debug session, please modify the 'console' config in launch.json.","default":"integratedTerminal"},"java.debug.settings.exceptionBreakpoint.exceptionTypes":{"type":"array","description":"Specifies a set of exception types you want to break on, e.g. java.lang.NullPointerException. A specific exception type and its subclasses can be selected for caught exceptions, uncaught exceptions, or both can be selected.","items":{"type":"string"},"default":[]},"java.debug.settings.exceptionBreakpoint.allowClasses":{"type":"array","description":"Specifies the allowed locations where the exception breakpoint can break on. Wildcard is supported, e.g. java.*, *.Foo","items":{"type":"string"},"default":[]},"java.debug.settings.exceptionBreakpoint.skipClasses":{"type":"array","description":"Skip the specified classes when breaking on exception. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":[]},"java.debug.settings.stepping.skipClasses":{"type":"array","description":"Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo","items":{"anyOf":[{"enum":["$JDK","$Libraries","java.lang.ClassLoader",""],"enumDescriptions":["Skip the JDK classes from the default system bootstrap classpath, such as rt.jar, jrt-fs.jar.","Skip the classes from application libraries, such as Maven, Gradle dependencies.","Skip the class loaders.","Skip the specified classes. Class names should be fully qualified. Wildcard is supported, e.g. java.*, *.Foo"]},"string"]},"default":[]},"java.debug.settings.stepping.skipSynthetics":{"type":"boolean","description":"Skip synthetic methods when stepping.","default":false},"java.debug.settings.stepping.skipStaticInitializers":{"type":"boolean","description":"Skip static initializer methods when stepping.","default":false},"java.debug.settings.stepping.skipConstructors":{"type":"boolean","description":"Skip constructor methods when stepping.","default":false},"java.debug.settings.jdwp.limitOfVariablesPerJdwpRequest":{"type":"number","description":"The maximum number of variables or fields that can be requested in one JDWP request. The higher the value, the less frequently debuggee will be requested when expanding the variable view. Also a large number can cause JDWP request timeout.","default":100,"minimum":1},"java.debug.settings.jdwp.requestTimeout":{"type":"number","description":"The timeout (ms) of JDWP request when the debugger communicates with the target JVM.","default":3000,"minimum":100},"java.debug.settings.jdwp.async":{"type":"string","enum":["auto","on","off"],"description":"Experimental: Controls whether the debugger is allowed to send JDWP commands asynchronously. Async mode can improve remote debugging response speed on high-latency networks.","default":"auto"},"java.debug.settings.vmArgs":{"type":"string","description":"The default VM arguments to launch the Java program. Eg. Use '-Xmx1G -ea' to increase the heap size to 1GB and enable assertions. If you want to customize the VM arguments for a specific debug session, please modify the 'vmArgs' config in launch.json.","default":""},"java.debug.settings.debugSupportOnDecompiledSource":{"type":"string","enum":["on","off"],"description":"[Experimental]: Enable debugging support on the decompiled source code. Be aware that this feature may affect the loading speed of Call Stack Viewlet.","default":"on"},"java.silentNotification":{"type":"boolean","description":"Controls whether notifications can be used to report progress. If true, use status bar to report progress instead.","default":false}}}},"scripts":{"vscode:prepublish":"npm run build","compile":"tsc -p . && webpack --config webpack.config.js","watch":"webpack --config webpack.config.js --watch","build":"webpack --config webpack.config.js --mode=\"production\"","tslint":"tslint -t verbose --project tsconfig.json","build-server":"node scripts/build/buildJdtlsExt.js","test":"npm run compile && node ./out/test/index.js"},"devDependencies":{"@types/glob":"^7.2.0","@types/lodash":"^4.17.13","@types/mocha":"^10.0.9","@types/node":"^14.18.63","@types/uuid":"^8.3.4","@types/vscode":"1.75.0","@vscode/test-electron":"^2.4.1","mocha":"^10.8.2","ts-loader":"^9.5.1","tslint":"^6.1.3","typescript":"^4.9.5","webpack":"^5.95.0","webpack-cli":"^4.10.0"},"dependencies":{"compare-versions":"^4.1.4","dotenv":"^16.4.5","lodash":"^4.17.21","uuid":"^8.3.2","vscode-extension-telemetry-wrapper":"^0.14.0","vscode-languageclient":"6.0.0-next.9","vscode-languageserver-types":"3.16.0","vscode-tas-client":"^0.1.84"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/vscjava.vscode-java-debug-0.58.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878083,"pinned":false,"source":"gallery","id":"61fcd0cf-64d7-4836-8d6b-d55f4fb83281","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":3677017},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscjava.vscode-maven","uuid":"b0f06c6b-24fb-4d7b-bd79-bc5e2fa17312"},"manifest":{"name":"vscode-maven","displayName":"Maven for Java","description":"Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.","version":"0.44.0","icon":"resources/logo.png","publisher":"vscjava","preview":false,"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","engines":{"vscode":"^1.75.0"},"enabledApiProposals":[],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["maven.executable.options","maven.terminal.customEnv"]}},"categories":["Programming Languages","Other"],"keywords":["Maven","Java"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-maven/","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-maven.git"},"activationEvents":["workspaceContains:**/pom.xml"],"main":"./dist/extension","contributes":{"javaExtensions":["./jdtls.ext/com.microsoft.java.maven.plugin/target/com.microsoft.java.maven.plugin-0.39.0.jar"],"commands":[{"command":"maven.explorer.refresh","title":"Refresh","category":"Maven","icon":"$(refresh)"},{"command":"maven.goal.clean","title":"clean","category":"Maven"},{"command":"maven.goal.validate","title":"validate","category":"Maven"},{"command":"maven.goal.compile","title":"compile","category":"Maven"},{"command":"maven.goal.test","title":"test","category":"Maven"},{"command":"maven.goal.test-compile","title":"test-compile","category":"Maven"},{"command":"maven.goal.package","title":"package","category":"Maven"},{"command":"maven.goal.verify","title":"verify","category":"Maven"},{"command":"maven.goal.install","title":"install","category":"Maven"},{"command":"maven.goal.site","title":"site","category":"Maven"},{"command":"maven.goal.deploy","title":"deploy","category":"Maven"},{"command":"maven.goal.custom","title":"Custom... ","category":"Maven"},{"command":"maven.project.effectivePom","title":"Show Effective POM","category":"Maven"},{"command":"maven.project.openPom","title":"Open POM file","category":"Maven","icon":"$(go-to-file)"},{"command":"maven.archetype.generate","title":"New Project...","category":"Maven","icon":"$(add)"},{"command":"maven.archetype.update","title":"Update Maven Archetype Catalog","category":"Maven"},{"command":"maven.history","title":"History...","category":"Maven"},{"command":"maven.goal.execute","title":"Execute Commands...","category":"Maven"},{"command":"maven.goal.execute.fromProjectManager","title":"Run Maven Commands...","category":"Maven"},{"command":"maven.goal.execute.fromLifecycleMenu","title":"Run","category":"Maven","icon":"$(play)"},{"command":"maven.goal.execute.fromFavoritesMenu","title":"Run","category":"Maven","icon":"$(play)"},{"command":"maven.plugin.execute","title":"Run","category":"Maven","icon":"$(play)"},{"command":"maven.plugin.debug","title":"Debug","category":"Maven"},{"command":"maven.view.flat","title":"Switch to flat view","category":"Maven","icon":"$(list-flat)"},{"command":"maven.view.hierarchical","title":"Switch to hierarchical view","category":"Maven","icon":"$(list-tree)"},{"command":"maven.project.addDependency","title":"Add a dependency...","category":"Maven","icon":"$(add)"},{"command":"maven.project.showDependencies","title":"Show Dependencies","category":"Maven"},{"command":"maven.project.excludeDependency","title":"Exclude Dependency","category":"Maven"},{"command":"maven.project.setDependencyVersion","title":"Resolve Conflict...","category":"Maven","icon":"$(wrench)"},{"command":"maven.project.addFavorite","title":"Add a favorite...","category":"Maven","icon":"$(add)"},{"command":"maven.dependency.goToEffective","title":"Go to Effective Dependency","category":"Maven"},{"command":"maven.project.goToDefinition","title":"Go to Definition","category":"Maven"},{"command":"maven.favorites","title":"Favorites...","category":"Maven"},{"command":"maven.java.projectConfiguration.update","title":"Reload All Maven Projects","icon":"$(sync)","category":"Maven"},{"command":"maven.profile.select","title":"Select","icon":"$(add)","category":"Maven"},{"command":"maven.profile.deselect","title":"Deselect","icon":"$(remove)","category":"Maven"},{"command":"maven.new.module","title":"New Module...","category":"Maven"}],"views":{"explorer":[{"id":"mavenProjects","name":"Maven","when":"workbenchState == empty || vscode-maven:activated","contextualTitle":"Maven","icon":"resources/icons/dark/project.svg"}]},"viewsWelcome":[{"view":"mavenProjects","contents":"Advanced features (e.g. executing lifecycle phases and plugin goals) are disabled in Restricted Mode for security concern.\nPOM editing assistance (e.g. [add a dependency](command:maven.project.addDependency)) is still available.\nLearn more about [Workspace Trust](https://aka.ms/vscode-workspace-trust).\n[Manage Workspace Trust](command:workbench.trust.manage)","when":"!isWorkspaceTrusted"}],"submenus":[{"id":"maven/run","label":"Run Maven Commands..."},{"id":"explorer/maven","label":"Maven"}],"menus":{"commandPalette":[{"command":"maven.goal.clean","when":"never"},{"command":"maven.goal.validate","when":"never"},{"command":"maven.goal.compile","when":"never"},{"command":"maven.goal.test","when":"never"},{"command":"maven.goal.test-compile","when":"never"},{"command":"maven.goal.package","when":"never"},{"command":"maven.goal.verify","when":"never"},{"command":"maven.goal.install","when":"never"},{"command":"maven.goal.site","when":"never"},{"command":"maven.goal.deploy","when":"never"},{"command":"maven.goal.custom","when":"never"},{"command":"maven.project.effectivePom","when":"never"},{"command":"maven.explorer.refresh","when":"never"},{"command":"maven.project.openPom","when":"never"},{"command":"maven.goal.execute.fromProjectManager","when":"never"},{"command":"maven.goal.execute.fromLifecycleMenu","when":"never"},{"command":"maven.goal.execute.fromFavoritesMenu","when":"never"},{"command":"maven.plugin.execute","when":"never"},{"command":"maven.plugin.debug","when":"never"},{"command":"maven.project.showDependencies","when":"never"},{"command":"maven.project.excludeDependency","when":"never"},{"command":"maven.project.setDependencyVersion","when":"never"},{"command":"maven.dependency.goToEffective","when":"never"},{"command":"maven.project.goToDefinition","when":"never"},{"command":"maven.archetype.generate","when":"!java:projectManagerActivated"},{"command":"maven.favorites","when":"isWorkspaceTrusted"},{"command":"maven.history","when":"isWorkspaceTrusted"},{"command":"maven.goal.execute","when":"isWorkspaceTrusted"},{"command":"maven.java.projectConfiguration.update","when":"false"},{"command":"maven.profile.select","when":"false"},{"command":"maven.profile.deselect","when":"false"}],"explorer/context":[{"submenu":"explorer/maven","group":"1_javaactions@100"}],"view/title":[{"command":"maven.java.projectConfiguration.update","when":"view == mavenProjects && javaLSReady","group":"navigation@05"},{"command":"maven.view.flat","when":"view == mavenProjects && config.maven.view != flat","group":"navigation@0a"},{"command":"maven.view.hierarchical","when":"view == mavenProjects && config.maven.view != hierarchical","group":"navigation@0b"},{"command":"maven.archetype.generate","when":"view == mavenProjects","group":"navigation@1"}],"view/item/context":[{"submenu":"maven/run","when":"view == mavenProjects && viewItem == maven:project"},{"command":"maven.project.effectivePom","when":"view == mavenProjects && viewItem == maven:project","group":"0-pom@1"},{"command":"maven.project.showDependencies","when":"view == mavenProjects && viewItem == maven:project","group":"0-pom@0"},{"command":"maven.project.excludeDependency","when":"view == mavenProjects && viewItem =~ /maven:dependency(?!.*?\\b\\+root\\b)/","group":"0-dependency@0"},{"command":"maven.project.setDependencyVersion","when":"view == mavenProjects && viewItem =~ /maven:dependency(?=.*?\\b\\+conflict\\b)/","group":"inline"},{"command":"maven.dependency.goToEffective","when":"view == mavenProjects && viewItem =~ /maven:dependency(?=.*?\\b\\+conflict\\b)/","group":"0-dependency@2"},{"command":"maven.project.goToDefinition","when":"view == mavenProjects && viewItem =~ /maven:dependency/","group":"0-dependency@1"},{"command":"maven.project.openPom","when":"view == mavenProjects && viewItem == maven:project","group":"inline"},{"command":"maven.plugin.execute","when":"view == mavenProjects && viewItem == maven:pluginGoal","group":"inline"},{"command":"maven.plugin.execute","when":"view == mavenProjects && viewItem == maven:pluginGoal","group":"1@1"},{"command":"maven.plugin.debug","when":"view == mavenProjects && viewItem == maven:pluginGoal","group":"1@2"},{"command":"maven.explorer.refresh","when":"view == mavenProjects && viewItem == maven:plugin","group":"1@1"},{"command":"maven.explorer.refresh","when":"view == mavenProjects && viewItem == maven:menu","group":"inline"},{"command":"maven.project.addDependency","when":"view == javaProjectExplorer && viewItem =~ /java:container(?=.*?\\b\\+maven\\b)/","group":"inline"},{"command":"maven.project.addDependency","when":"view == mavenProjects && viewItem == maven:dependenciesMenu","group":"inline@0"},{"command":"maven.project.addFavorite","when":"view == mavenProjects && viewItem == maven:favoritesMenu","group":"inline@0"},{"command":"maven.explorer.refresh","when":"view == mavenProjects && viewItem == maven:dependenciesMenu","group":"inline@1"},{"command":"maven.goal.execute.fromLifecycleMenu","when":"view == mavenProjects && viewItem == maven:lifecycle","group":"inline"},{"command":"maven.goal.execute.fromLifecycleMenu","when":"view == mavenProjects && viewItem == maven:lifecycle","group":"1@1"},{"command":"maven.goal.execute.fromFavoritesMenu","when":"view == mavenProjects && viewItem == maven:favorites","group":"inline"},{"command":"maven.goal.execute.fromFavoritesMenu","when":"view == mavenProjects && viewItem == maven:favorites","group":"1@1"},{"command":"maven.profile.select","when":"view == mavenProjects && viewItem == maven:profile+unchecked","group":"inline"},{"command":"maven.profile.deselect","when":"view == mavenProjects && viewItem == maven:profile+checked","group":"inline"}],"javaProject.maven":[{"command":"maven.project.openPom","group":"maven@20"},{"command":"maven.goal.execute.fromProjectManager","group":"maven@30"}],"explorer/maven":[{"command":"maven.archetype.generate","when":"config.maven.showInExplorerContextMenu && explorerResourceIsFolder","group":"maven@1"},{"command":"maven.new.module","group":"maven@2"},{"command":"maven.project.effectivePom","when":"resourceFilename == pom.xml","group":"maven@3"}],"maven/run":[{"command":"maven.goal.custom","group":"5-custom@5"},{"command":"maven.favorites","group":"5-custom@3"},{"command":"maven.history","group":"5-custom@0"},{"command":"maven.goal.clean","group":"1-lifecycle@10"},{"command":"maven.goal.package","group":"1-lifecycle@20"},{"command":"maven.goal.install","group":"1-lifecycle@30"},{"command":"maven.goal.compile","group":"1-lifecycle@40"},{"command":"maven.goal.validate","group":"3-lifecycle@50"},{"command":"maven.goal.verify","group":"3-lifecycle@60"},{"command":"maven.goal.test","group":"3-lifecycle@70"},{"command":"maven.goal.test-compile","group":"3-lifecycle@75"},{"command":"maven.goal.site","group":"4-lifecycle@80"},{"command":"maven.goal.deploy","group":"4-lifecycle@90"}]},"configuration":[{"title":"Maven for Java","properties":{"maven.settingsFile":{"type":["string","null"],"default":null,"description":"Specifies the absolute path of your maven configuration file, the default value is ~/.m2/settings.xml","scope":"machine"},"maven.excludedFolders":{"type":"array","default":["**/.*","**/node_modules","**/target","**/bin","**/archetype-resources"],"description":"Specifies file path pattern of folders to exclude while searching for Maven projects.","scope":"resource"},"maven.executable.preferMavenWrapper":{"type":"boolean","default":"true","description":"Specifies whether you prefer to use Maven wrapper. If true, it tries using 'mvnw' by walking up the parent folders. If false, or 'mvnw' is not found, it tries 'mvn' in PATH instead.","scope":"resource"},"maven.executable.path":{"type":"string","default":"","description":"Specifies absolute path of your 'mvn' executable. When this value is empty, it tries using 'mvn' or 'mvnw' according to the value of 'maven.executable.preferMavenWrapper'.","scope":"machine"},"maven.executable.options":{"type":"string","default":"","description":"Specifies default options for all mvn commands.","scope":"machine-overridable"},"maven.terminal.useJavaHome":{"type":"boolean","default":false,"description":"If this value is true, and if the setting java.home has a value, then the environment variable JAVA_HOME will be set to the value of java.home when a new terminal window is created.","scope":"window"},"maven.terminal.customEnv":{"type":"array","items":{"type":"object","title":"environment setting","required":["environmentVariable","value"],"properties":{"environmentVariable":{"type":"string","minLength":1,"description":"Name of the environment variable to set."},"value":{"type":"string","description":"Value of the environment variable to set."}}},"default":[],"description":"Specifies an array of environment variable names and values. These environment variable values will be added to the terminal session before Maven is first executed.","scope":"resource"},"maven.terminal.favorites":{"type":"array","items":{"type":"object","title":"Favorite commands","required":["command"],"properties":{"alias":{"type":"string","minLength":1,"description":"A short name for the command."},"command":{"type":"string","minLength":1,"description":"Content of the favorite command."},"debug":{"type":"boolean","default":false,"description":"Whether to execute in debug mode."}}},"default":[],"description":"Specify pre-defined favorite commands to execute.","scope":"resource"},"maven.view":{"type":"string","enum":["flat","hierarchical"],"default":"flat","scope":"window","description":"Specifies the way of viewing Maven projects."},"maven.showInExplorerContextMenu":{"type":"boolean","default":"true","description":"If this value is true, add a command to create Maven Projects in the Explorer context menu for folders.","scope":"resource"},"maven.pomfile.globPattern":{"type":"string","default":"**/pom.xml","description":"Specifies the glob pattern used to look for pom.xml files.","scope":"window"},"maven.pomfile.autoUpdateEffectivePOM":{"type":"boolean","default":false,"description":"Specifies whether to update effective-pom automatically whenever changes detected.","scope":"window"},"maven.pomfile.prefetchEffectivePom":{"type":"boolean","default":false,"description":"Specifies whether to prefetch effective pom on startup.","scope":"application"},"maven.dependency.enableConflictDiagnostics":{"type":"boolean","default":"true","description":"Specify whether to show diagnostics for conflict dependencies.","scope":"window"},"maven.projectOpenBehavior":{"default":"Interactive","type":"string","scope":"window","description":"Default method of opening newly created project.","enum":["Interactive","Open","Add to Workspace","None"]},"maven.explorer.projectName":{"default":"${project.name}","type":"string","scope":"window","description":"Format of project node name shown in Maven explorer.","enum":["${project.name}","${project.artifactId}","${project.artifactId}-${project.version}","${project.groupId}.${project.artifactId}","${project.groupId}.${project.artifactId}-${project.version}"]}}}]},"scripts":{"vscode:prepublish":"webpack --mode production","build-plugin":"node scripts/build-jdtls-ext.js","compile":"tsc -p ./","tslint":"eslint .","watch":"webpack --mode development --watch --progress","test":"tsc -p ./ && node ./out/test/index.js","webpack":"webpack --mode development","update-tpn":"node scripts/update-third-party-notice.js","update-xsd":"tsc scripts/generate-maven-xsd.ts && node scripts/generate-maven-xsd.js"},"devDependencies":{"@types/fs-extra":"^4.0.9","@types/glob":"^7.2.0","@types/lodash":"^4.14.186","@types/lru-cache":"^5.1.0","@types/md5":"^2.3.2","@types/minimatch":"^3.0.4","@types/mocha":"^9.1.1","@types/node":"^16.18.3","@types/semver":"^7.3.12","@types/vscode":"1.75.0","@types/which":"^1.3.2","@types/xml2js":"^0.4.11","@typescript-eslint/eslint-plugin":"^5.48.2","@typescript-eslint/parser":"^5.48.2","@vscode/test-electron":"^2.3.8","eslint":"^8.32.0","glob":"^7.2.3","mocha":"^9.2.2","ts-loader":"^9.4.1","typescript":"^4.8.4","webpack":"^5.76.0","webpack-cli":"^4.10.0"},"dependencies":{"domhandler":"^5.0.3","expand-home-dir":"0.0.3","fast-glob":"^3.2.12","fs-extra":"^4.0.3","get-port":"^4.2.0","htmlparser2":"^8.0.1","jszip":"^3.10.1","lodash":"^4.17.21","lru-cache":"^6.0.0","md5":"^2.2.1","minimatch":"^3.1.2","semver":"^7.5.2","vscode-extension-telemetry-wrapper":"^0.13.2","vscode-languageclient":"^7.0.0","vscode-languageserver-protocol":"^3.17.2","vscode-tas-client":"^0.1.75","which":"^1.3.1","xml2js":"^0.5.0"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/vscjava.vscode-maven-0.44.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878083,"pinned":false,"source":"gallery","id":"b0f06c6b-24fb-4d7b-bd79-bc5e2fa17312","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":18721164},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscjava.vscode-gradle","uuid":"a226f06e-9b5e-493b-b92a-553d3572f969"},"manifest":{"name":"vscode-gradle","displayName":"Gradle for Java","description":"Manage Gradle Projects, run Gradle tasks and provide better Gradle file authoring experience in VS Code","version":"3.16.4","private":true,"publisher":"vscjava","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","icon":"resources/icon.png","readme":"README.md","bugs":{"url":"https://github.com/microsoft/vscode-gradle/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode-gradle/"},"license":"SEE LICENSE IN LICENSE.md","engines":{"vscode":"^1.76.0","node":"^18.20.4","npm":"^10.7.0"},"categories":["Programming Languages","Other"],"keywords":["java","gradle","compile","build","tasks"],"activationEvents":["workspaceContains:**/gradlew","workspaceContains:**/gradlew.bat","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","onCommand:_gradle.onWillImporterConnect"],"main":"./dist/index.js","contributes":{"javaExtensions":["./server/com.microsoft.gradle.bs.importer-0.5.3.jar"],"languages":[{"id":"gradle","extensions":[".gradle"],"aliases":["Gradle"],"configuration":"./gradle-language-configuration.json"},{"id":"gradle-build"}],"grammars":[{"language":"gradle","scopeName":"source.groovy","path":"./syntaxes/groovy.tmLanguage.json"},{"language":"gradle-build","scopeName":"source.gradle-build","path":"./syntaxes/GradleBuild.tmLanguage.json"}],"problemMatchers":[{"owner":"gradle","name":"gradle","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^.*(FAILURE):\\s*(.*)$","severity":1,"message":2}}],"views":{"gradleContainerView":[{"id":"gradleTasksView","name":"Gradle Projects","when":"gradle:activated && !gradle:defaultView"},{"id":"gradleDefaultProjectsView","name":"Gradle Projects","when":"gradle:activated && gradle:defaultView"},{"id":"recentTasksView","name":"Recent Tasks","when":"gradle:activated","visibility":"collapsed"},{"id":"gradleDaemonsView","name":"Gradle Daemons","when":"gradle:activated","visibility":"collapsed"}]},"viewsContainers":{"activitybar":[{"id":"gradleContainerView","title":"Gradle","icon":"resources/icon-transparency.png"}]},"commands":[{"command":"gradle.runTask","title":"Run Task","icon":{"light":"resources/light/run.svg","dark":"resources/dark/run.svg"}},{"command":"gradle.runBuild","category":"Gradle","title":"Run a Gradle Build","icon":{"light":"resources/light/console.svg","dark":"resources/dark/console.svg"}},{"command":"gradle.pinTask","title":"Pin Task"},{"command":"gradle.pinTaskWithArgs","title":"Pin Task With Args"},{"command":"gradle.unpinTask","title":"Unpin Task"},{"command":"gradle.debugTask","title":"Debug Task","icon":{"light":"resources/light/debug-and-run.svg","dark":"resources/dark/debug-and-run.svg"}},{"command":"gradle.restartTask","title":"Restart Task","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"gradle.showTaskTerminal","title":"Show Terminal","icon":{"light":"resources/light/console.svg","dark":"resources/dark/console.svg"}},{"command":"gradle.closeTaskTerminals","title":"Close Terminal/s","icon":{"light":"resources/light/close-all.svg","dark":"resources/dark/close-all.svg"}},{"command":"gradle.closeAllTaskTerminals","title":"Close All Terminals","icon":{"light":"resources/light/close-all.svg","dark":"resources/dark/close-all.svg"}},{"command":"gradle.clearAllRecentTasks","title":"Clear Recent Tasks","icon":{"light":"resources/light/clear-all.svg","dark":"resources/dark/clear-all.svg"}},{"command":"gradle.unpinAllTasks","title":"Unpin all Tasks","icon":{"light":"resources/light/clear-all.svg","dark":"resources/dark/clear-all.svg"}},{"command":"gradle.removeRecentTask","title":"Remove Recent Task"},{"command":"gradle.showLogs","title":"Show logs"},{"command":"gradle.showTasks","title":"Show Gradle Tasks"},{"command":"gradle.runTaskWithArgs","title":"Run Task With Args"},{"command":"gradle.debugTaskWithArgs","title":"Debug Task With Args"},{"command":"gradle.openBuildFile","title":"Open Build File"},{"command":"gradle.cancelBuild","title":"Cancel Task"},{"command":"gradle.stopDaemon","title":"Stop Daemon","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"gradle.cancelTreeItemTask","title":"Cancel Task","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"gradle.explorerFlat","title":"Show Flat Tasks","icon":{"light":"resources/light/list-flat.svg","dark":"resources/dark/list-flat.svg"}},{"command":"gradle.explorerTree","title":"Show Hierarchical Tasks","icon":{"light":"resources/light/list-tree.svg","dark":"resources/dark/list-tree.svg"}},{"command":"gradle.showProcessMessage","title":"Show Gradle process information message box"},{"command":"gradle.refresh","category":"Gradle","title":"Refresh Gradle Projects View","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"gradle.refreshDaemonStatus","title":"Refresh Daemon Status","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"gradle.stopDaemons","enablement":"gradle:hasValidDaemons","title":"Stop Daemons","icon":{"light":"resources/light/stop-daemons.svg","dark":"resources/dark/stop-daemons.svg"}},{"command":"gradle.openSettings","title":"Open Settings","icon":{"light":"resources/light/gear.svg","dark":"resources/dark/gear.svg"}},{"command":"gradle.findTask","category":"Gradle","title":"Find Gradle Task"},{"command":"gradle.cancellingTreeItemTask","title":"Cancelling Task","icon":{"light":"resources/light/loading.svg","dark":"resources/dark/loading.svg"}},{"command":"gradle.dependency.reveal","title":"Go to Dependency","icon":"$(references)"},{"command":"gradle.showStoppedDaemons","title":"Show Stopped Daemons"},{"command":"gradle.hideStoppedDaemons","title":"Hide Stopped Daemons"},{"command":"gradle.createProject","category":"Gradle","title":"Create a Gradle Java Project..."},{"command":"gradle.createProjectAdvanced","category":"Gradle","title":"Create a Gradle Java Project... (Advanced)"},{"command":"gradle.runTasks","category":"Gradle","title":"Run Gradle Tasks..."},{"command":"gradle.java.projectConfiguration.update","category":"Gradle","title":"Reload All Gradle Projects","icon":"$(sync)"}],"submenus":[{"id":"explorer/gradle","label":"Gradle"}],"menus":{"commandPalette":[{"command":"gradle.showTasks","when":"false"},{"command":"gradle.runTask","when":"false"},{"command":"gradle.showLogs","when":"false"},{"command":"gradle.debugTask","when":"false"},{"command":"gradle.restartTask","when":"false"},{"command":"gradle.showTaskTerminal","when":"false"},{"command":"gradle.closeTaskTerminals","when":"false"},{"command":"gradle.closeAllTaskTerminals","when":"false"},{"command":"gradle.clearAllRecentTasks","when":"false"},{"command":"gradle.unpinAllTasks","when":"false"},{"command":"gradle.refreshDaemonStatus","when":"false"},{"command":"gradle.stopDaemons","when":"false"},{"command":"gradle.openBuildFile","when":"false"},{"command":"gradle.runTaskWithArgs","when":"false"},{"command":"gradle.debugTaskWithArgs","when":"false"},{"command":"gradle.cancelBuild","when":"false"},{"command":"gradle.stopDaemon","when":"false"},{"command":"gradle.cancelTreeItemTask","when":"false"},{"command":"gradle.explorerFlat","when":"false"},{"command":"gradle.explorerTree","when":"false"},{"command":"gradle.showProcessMessage","when":"false"},{"command":"gradle.openSettings","when":"false"},{"command":"gradle.cancellingTreeItemTask","when":"false"},{"command":"gradle.pinTask","when":"false"},{"command":"gradle.pinTaskWithArgs","when":"false"},{"command":"gradle.removeRecentTask","when":"false"},{"command":"gradle.dependency.reveal","when":"false"},{"command":"gradle.showStoppedDaemons","when":"false"},{"command":"gradle.hideStoppedDaemons","when":"false"},{"command":"gradle.unpinTask","when":"false"},{"command":"gradle.refresh","when":"gradle:extensionActivated"},{"command":"gradle.runBuild","when":"gradle:extensionActivated"},{"command":"gradle.findTask","when":"gradle:extensionActivated"},{"command":"gradle.createProject","when":"!java:projectManagerActivated"},{"command":"gradle.runTasks","when":"false"},{"command":"gradle.java.projectConfiguration.update","when":"false"}],"view/title":[{"command":"gradle.unpinAllTasks","when":"view == gradleTasksView","group":"overflow_0@0"},{"command":"gradle.openSettings","when":"view == gradleTasksView || view == gradleDefaultProjectsView"},{"command":"gradle.findTask","when":"view == gradleTasksView"},{"command":"gradle.runBuild","when":"view == gradleTasksView || view == gradleDefaultProjectsView","group":"navigation@0"},{"command":"gradle.explorerFlat","when":"view == gradleTasksView && !gradle:gradleTasksCollapsed","group":"navigation@1"},{"command":"gradle.explorerTree","when":"view == gradleTasksView && gradle:gradleTasksCollapsed","group":"navigation@2"},{"command":"gradle.refresh","when":"view == gradleTasksView || view == gradleDefaultProjectsView","group":"overflow@3"},{"command":"gradle.java.projectConfiguration.update","when":"view == gradleTasksView && javaLSReady","group":"navigation@3"},{"command":"gradle.stopDaemons","when":"view == gradleDaemonsView","group":"navigation@1"},{"command":"gradle.refreshDaemonStatus","when":"view == gradleDaemonsView","group":"navigation@2"},{"command":"gradle.showStoppedDaemons","when":"view == gradleDaemonsView && config.gradle.showStoppedDaemons == false","group":"overflow_0@0"},{"command":"gradle.hideStoppedDaemons","when":"view == gradleDaemonsView && config.gradle.showStoppedDaemons == true","group":"overflow_0@0"},{"command":"gradle.clearAllRecentTasks","when":"view == recentTasksView","group":"navigation@0"},{"command":"gradle.closeAllTaskTerminals","when":"view == recentTasksView","group":"navigation@1"}],"view/item/context":[{"command":"gradle.runTask","when":"view =~ /^gradleTasksView$|^recentTasksView$|^gradleDefaultProjectsView$/ && viewItem =~ /^(pinned)?debugTask.*$|^(pinned)?task.*$/","group":"contextGroup1@0"},{"command":"gradle.runTaskWithArgs","when":"view =~ /^gradleTasksView$|^recentTasksView$|^gradleDefaultProjectsView$/ && viewItem =~ /^(pinned)?debugTask(WithTerminals)?$|^(pinned)?task(WithTerminals)?$/","group":"contextGroup1@1"},{"command":"gradle.debugTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask.*$/","group":"contextGroup2@0"},{"command":"gradle.debugTaskWithArgs","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask(WithTerminals)?$/","group":"contextGroup2@1"},{"command":"gradle.showTaskTerminal","when":"view == recentTasksView && viewItem =~ /^(pinned)?debugTask(WithArgs)?WithTerminals.*$|^(pinned)?task(WithArgs)?WithTerminals.*$|^(pinned)?runningTask(WithArgs)?WithTerminals.*$|^(pinned)?runningDebugTask(WithArgs)?WithTerminals.*$/","group":"inline@0"},{"command":"gradle.closeTaskTerminals","when":"view == recentTasksView  && viewItem =~ /^(pinned)?debugTask(WithArgs)?WithTerminals.*$|^(pinned)?task(WithArgs)?WithTerminals.*$|^(pinned)?runningTask(WithArgs)?WithTerminals.*$|^(pinned)?runningDebugTask(WithArgs)?WithTerminals.*$/","group":"inline@1"},{"command":"gradle.debugTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask.*$/ || viewItem =~ /^(pinned)?runningDebugTask.*$/ && allowParallelRun == true","group":"inline@2"},{"command":"gradle.runTask","when":"view =~ /^gradleTasksView$|^recentTasksView$|^gradleDefaultProjectsView$/ && viewItem =~ /^(pinned)?debugTask.*$|^(pinned)?task.*$/ || viewItem =~ /^(pinned)?runningTask.*$|^(pinned)?runningDebugTask.*$/ && allowParallelRun == true","group":"inline@3"},{"command":"gradle.restartTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?runningTask.*$|^(pinned)?runningDebugTask.*$/ && !allowParallelRun","group":"inline@4"},{"command":"gradle.cancelTreeItemTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?runningTask.*$|^(pinned)?runningDebugTask.*$/ && !allowParallelRun","group":"inline@5"},{"command":"gradle.cancellingTreeItemTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^cancellingTask.*$/","group":"inline@6"},{"command":"gradle.pinTask","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^debugTask(WithTerminals)?.*$|^task(WithTerminals)?.*$/","group":"contextGroup3@0"},{"command":"gradle.pinTaskWithArgs","when":"view =~ /^gradleTasksView$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask(WithTerminals)?$|^(pinned)?task(WithTerminals)?$/","group":"contextGroup3@1"},{"command":"gradle.unpinTask","when":"view == gradleTasksView && viewItem =~ /^pinned.*$/","group":"contextGroup3@2"},{"command":"gradle.unpinAllTasks","when":"view == gradleTasksView && viewItem == PinnedTasks","group":"contextGroup3@3"},{"command":"gradle.removeRecentTask","when":"view == recentTasksView && viewItem =~ /^debugTask.*$|^task.*$/","group":"contextGroup4@0"},{"command":"gradle.stopDaemon","when":"view == gradleDaemonsView && viewItem =~ /^busy$|^idle$/","group":"inline@0"},{"command":"gradle.dependency.reveal","when":"view == gradleTasksView && viewItem == omitted","group":"inline@0"},{"command":"gradle.stopDaemon","when":"view == gradleDaemonsView && viewItem =~ /^busy$|^idle$/","group":"contextGroup1@0"},{"command":"gradle.openBuildFile","when":"view =~ /^gradleTasksView$$|^recentTasksView$/ && viewItem =~ /^(pinned)?debugTask.*$|^(pinned)?task.*$/","group":"contextGroup5@0"}],"explorer/context":[{"submenu":"explorer/gradle","when":"resourceFilename =~ /^.*\\.gradle(\\.kts)?$/","group":"1_javaactions@200"}],"editor/context":[{"when":"resourceFilename =~ /^((?!settings).)*\\.gradle(\\.kts)?$/","command":"gradle.showTasks","group":"gradle@0"}],"javaProject.gradle":[{"command":"gradle.runTasks","group":"gradle@20"},{"command":"gradle.openBuildFile","group":"gradle@30"}],"explorer/gradle":[{"when":"resourceFilename =~ /^((?!settings).)*\\.gradle(\\.kts)?$/","command":"gradle.showTasks","group":"gradle@10"}]},"configuration":{"id":"gradle","type":"object","title":"Gradle","properties":{"gradle.autoDetect":{"type":"string","enum":["off","on"],"default":"on","scope":"resource","description":"Controls whether Gradle tasks should be automatically detected"},"gradle.nestedProjects":{"anyOf":[{"type":"boolean","description":"Discover all nested projects","default":false},{"type":"array","description":"Discover specific nested projects (by directory name)","default":[]}],"scope":"window","default":false,"description":"Discover Gradle projects in nested sub-directories"},"gradle.reuseTerminals":{"enum":["task","off","all"],"enumDescriptions":["Use a dedicated terminal for a specific task. The terminal is not shared with other tasks.","Create a new terminal when a task is executed.","Share the terminal with other tasks."],"default":"task","scope":"window","markdownDescription":"Reuse task terminals behaviour, will be overridden to `off` if `gradle.allowParallelRun` is true."},"gradle.debug":{"type":"boolean","default":false,"scope":"window","description":"Show extra debug information in the output panel"},"gradle.disableConfirmations":{"type":"boolean","default":false,"scope":"window","description":"Disable the warning confirm messages when performing batch actions"},"gradle.focusTaskInExplorer":{"type":"boolean","default":true,"scope":"window","description":"Focus the task in the explorer when running a task"},"gradle.javaDebug.cleanOutput":{"type":"boolean","default":true,"scope":"window","description":"Clean the task output cache before debugging"},"gradle.javaDebug":{"type":"object","description":"Java debug options","deprecationMessage":"This setting will be removed in the future since the extension can automatically get debug tasks, for clean options, please see `gradle.javaDebug.cleanOutput`.","scope":"resource","properties":{"tasks":{"type":"array","default":["run","runBoot","test","intTest","integration"],"description":"List of JavaExec tasks to debug"},"clean":{"type":"boolean","default":true,"description":"Clean the task output cache before debugging"}},"required":["tasks"],"default":{"tasks":["run","runBoot","test","intTest","integration"]}},"gradle.showStoppedDaemons":{"type":"boolean","default":false,"scope":"application","description":"Show stopped daemons in the Gradle Daemons view"},"gradle.allowParallelRun":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Allow to run tasks in parallel, each running will create a new terminal. This configuration will override `gradle.reuseTerminals` and always create new task terminals when running or debugging a task."},"gradle.projectOpenBehaviour":{"default":"Interactive","type":"string","scope":"window","description":"Default method of opening newly created project.","enum":["Interactive","Open","Add to Workspace"]},"java.gradle.buildServer.enabled":{"type":"string","enum":["on","off"],"markdownDescription":"Whether to use build server to synchronize Gradle project. It will replace the original Buildship to import the Gradle when enabled.","default":"on"},"java.gradle.buildServer.openBuildOutput":{"type":"string","enum":["neverOpen","openOnBuildStart","openOnBuildFailure"],"enumDescriptions":["Never automatically open build output.","Open the build output when the build starts.","Open the build output when the build fails."],"default":"openOnBuildFailure","description":"Controls when the build output should open."}}},"jsonValidation":[{"fileMatch":"package.json","url":"https://schemastore.azurewebsites.net/schemas/json/package.json"}],"taskDefinitions":[{"type":"gradle","required":["id","script","description","group","project","buildFile","rootProject","projectFolder","workspaceFolder","args","javaDebug"],"properties":{"id":{"type":"string","description":"Unique identifier for this task"},"script":{"type":"string","description":"The task script name"},"description":{"type":"string","description":"Description of the task"},"group":{"type":"string","description":"Task group"},"project":{"type":"string","description":"The project this task belongs to"},"buildFile":{"type":"string","description":"The full path to task project build file"},"rootProject":{"type":"string","description":"The root project this task belongs to"},"projectFolder":{"type":"string","description":"The gradle project folder path"},"workspaceFolder":{"type":"string","description":"The workspace folder path"},"args":{"type":"string","description":"Task args"},"javaDebug":{"type":"boolean","description":"Debug JavaExec task when executing"}}}]},"scripts":{"test":"node ./out/test/runTests.js","lint":"npm run lint:prettier && npm run lint:eslint","lint:prettier":"prettier --check \"**/*.{ts,js,json,svg,md,yml}\"","lint:eslint":"eslint . --ext .js,.ts","lint:fix":"npm run lint:fix:prettier && npm run lint:eslint -- --fix","lint:fix:prettier":"prettier --write \"**/*.{ts,js,json,svg,md,yml}\"","compile":"tsc -p . && webpack --config webpack.config.js --mode production","compile:test":"tsc -p .","preinstall:ext":"vsce package","update-tpn":"node scripts/update-third-party-notice.js"},"devDependencies":{"@grpc/grpc-js":"^1.8.22","@types/fs-extra":"^11.0.1","@types/glob":"^8.1.0","@types/google-protobuf":"^3.15.6","@types/lodash":"^4.14.191","@types/mocha":"^10.0.1","@types/node":"^16.11.7","@types/sinon":"^10.0.13","@types/vscode":"^1.76.0","@typescript-eslint/eslint-plugin":"^5.54.0","@typescript-eslint/parser":"^5.54.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.18.0","eslint":"^8.35.0","eslint-config-prettier":"^8.6.0","eslint-plugin-prettier":"^4.2.1","google-protobuf":"^3.21.2","grpc-tools":"^1.12.4","mocha":"^10.2.0","prettier":"^2.8.4","sinon":"^15.0.1","ts-loader":"^9.4.2","ts-protoc-gen":"^0.15.0","typescript":"^4.9.5","webpack":"^5.76.0","webpack-cli":"^5.0.1"},"dependencies":{"await-lock":"^2.2.2","jdk-utils":"^0.4.4","fs-extra":"^11.1.0","get-port":"^5.1.1","lodash":"^4.17.21","minimatch":"^5.1.1","string-argv":"^0.3.1","tree-kill":"^1.2.2","vscode-extension-telemetry-wrapper":"0.14.0","vscode-languageclient":"7.0.0"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/vscjava.vscode-gradle-3.16.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878084,"pinned":false,"source":"gallery","id":"a226f06e-9b5e-493b-b92a-553d3572f969","publisherId":"bae08b87-578e-41ec-ab1c-0b036e7add88","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":47741498},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"visualstudioexptteam.vscodeintellicode","uuid":"876e8f93-74d0-4f4f-91b7-34a09f19f444"},"manifest":{"name":"vscodeintellicode","displayName":"IntelliCode","description":"AI-assisted development","version":"1.3.2","publisher":"VisualStudioExptTeam","author":{"name":"Microsoft"},"engines":{"vscode":"^1.94.0"},"repository":{"url":"https://github.com/MicrosoftDocs/intellicode"},"bugs":{"url":"https://go.microsoft.com/fwlink/?linkid=2005855"},"icon":"images/icon.png","categories":["Other"],"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","activationEvents":["onLanguage:python","onLanguage:sql","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:java"],"main":"./dist/intellicode","contributes":{"configuration":{"type":"object","title":"IntelliCode","properties":{"vsintellicode.python.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for Python"},"vsintellicode.sql.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for MSSQL"},"vsintellicode.java.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for Java"},"vsintellicode.typescript.completionsEnabled":{"type":"boolean","default":true,"description":"Enable Visual Studio IntelliCode completions for TypeScript and JavaScript"},"vsintellicode.modify.editor.suggestSelection":{"type":"string","default":"enabled","markdownDescription":"Control whether Visual Studio IntelliCode will modify `editor.suggestSelection` if it is set to a value (`recentlyUsed`) that will result in IntelliCode suggested completion items not being visible.","enum":["enabled","disabled","automaticallyOverrodeDefaultValue","choseToUpdateConfiguration"],"enumDescriptions":["Allows IntelliCode to modify the editor.suggestSelection setting on your behalf.","You've explicitly opted out of having this configuration controlled by IntelliCode.","(DO NOT SET THIS MANUALLY) IntelliCode will set this to record that configuration has been automatically modified to override a default value.","(DO NOT SET THIS MANUALLY) IntelliCode will set this to record that you've chosen to let IntelliCode change the configuration from a value that was explicitly set."]}}},"typescriptServerPlugins":[{"name":"@vsintellicode/typescript-intellicode-plugin","languages":[],"enableForWorkspaceTypeScriptVersions":true},{"name":"ms-vsintellicode-typescript"}],"javaExtensions":["dist/com.microsoft.jdtls.intellicode.core-0.7.1.jar"]},"importSort":{".js, .jsx, .ts, .tsx":{"style":"module"}},"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":{"supported":"limited","description":"Only typescript and javascript completions are supported. Settings do not work."}},"scripts":{"vscode:prepublish":"gulp prodBuild","build":"gulp devBuild","eslint":"eslint src --ext ts","format":"prettier --write \"src/**/*.{ts,tsx}\"","test":"node ./out/test/runTests.js","server-test":"node ./out/test/runServerTests.js","pretest":"npm run build","posttest":"rmdir /s /q .vscode-test","vscode:uninstall":"node ./dist/uninstall","compile-web":"webpack --config web.webpack.config.js","watch-web":"webpack --config web.webpack.config.js --watch","package-web":"webpack --mode production --devtool hidden-source-map --config web.webpack.config.js","run-in-web":"vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .","build:tsplugin":"npm run install:tsplugin && npm run compile-web --prefix ../ms-intellicode-typescript-plugin","install:tsplugin":"cd ../ms-intellicode-typescript-plugin && npm install","pack:tsplugin":"cd ../ms-intellicode-typescript-plugin/dist/web && npm pack","format:package-lock":"prettier package-lock.json -w --tab-width 4 --parser json"},"devDependencies":{"@types/chai":"^4.1.7","@types/mocha":"^8.2.3","@types/node":"^12.20.15","@types/request":"^2.48.5","@types/rimraf":"^2.0.2","@types/semver":"^5.5.0","@types/sinon":"^7.0.2","@types/sinon-chai":"^3.2.2","@types/vscode":"^1.94.0","@types/webpack-env":"^1.16.3","@typescript-eslint/eslint-plugin":"^6.3.0","@typescript-eslint/parser":"^6.0.0","@vscode/test-electron":"^2.3.9","@vscode/test-web":"^0.0.22","assert":"^2.0.0","chai":"^4.2.0","copy-webpack-plugin":"^11.0.0","del":"^4.1.1","eslint":"^7.32.0","eslint-config-prettier":"^7.1.0","eslint-plugin-prettier":"^3.4.1","gulp":"^4.0.0","gulp-filter":"^5.0.1","gulp-sourcemaps":"^2.6.5","gulp-typescript":"^5.0.0","import-sort-style-module":"^6.0.0","mocha":"^9.2.2","prettier":"^2.7.1","process":"^0.11.10","rimraf":"^2.6.3","sinon":"^7.2.2","sinon-chai":"^3.3.0","ts-loader":"^9.2.8","typemoq":"^2.1.0","typescript":"^4.4.3","vsce":"^2.10.2","vscode-nls-dev":"^3.2.6","webpack":"^5.72.0","webpack-cli":"^4.9.2","webpack-merge":"^5.8.0","webpack-stream":"^7.0.0"},"dependencies":{"@vscode/extension-telemetry":"^0.9.6","@vsintellicode/typescript-intellicode-plugin":"0.26.0","@vsintellicode/vscode-intellicode-api":"0.1.0-ci-main-20210923.1","@vsintellicode/vscode-intellicode-java":"0.7.1","@vsintellicode/vscode-intellicode-sql":"1.0.0-ci-master-4292976","request":"^2.88.2","request-progress":"3.0.0","semver":"5.5.0","tslib":"^2.0.0","vscode-nls":"4.1.1","vscode-tas-client":"^0.1.63"},"extensionPack":["visualstudioexptteam.intellicode-api-usage-examples"]},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/visualstudioexptteam.vscodeintellicode-1.3.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1736421878081,"pinned":false,"source":"gallery","id":"876e8f93-74d0-4f4f-91b7-34a09f19f444","publisherId":"e8db1608-52e8-4d8d-92a6-779c5db302a9","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":68728528},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"redhat.java","uuid":"198a707e-28af-4e84-8610-6e2f628dd12d"},"manifest":{"name":"java","displayName":"Language Support for Java(TM) by Red Hat","description":"Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...","author":"Red Hat","icon":"icons/icon128.png","license":"EPL-2.0","version":"1.38.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-java/issues","preview":false,"capabilities":{"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["java.jdt.ls.java.home","java.home","java.jdt.ls.vmargs","java.configuration.runtimes","java.import.gradle.java.home","java.import.gradle.home"]},"virtualWorkspaces":false},"engines":{"vscode":"^1.77.0"},"repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-java"},"categories":["Programming Languages","Linters","Formatters","Snippets"],"keywords":["multi-root ready"],"activationEvents":["onLanguage:java","workspaceContains:pom.xml","workspaceContains:*/pom.xml","workspaceContains:build.gradle","workspaceContains:*/build.gradle","workspaceContains:settings.gradle","workspaceContains:*/settings.gradle","workspaceContains:build.gradle.kts","workspaceContains:*/build.gradle.kts","workspaceContains:settings.gradle.kts","workspaceContains:*/settings.gradle.kts","workspaceContains:.classpath","workspaceContains:*/.classpath","onCommand:_java.templateVariables","onCommand:_java.metadataFilesGeneration"],"main":"./dist/extension","contributes":{"customEditors":[{"viewType":"decompiled.javaClass","displayName":"Decompiled Java Class File","selector":[{"filenamePattern":"file:/**/*.class"}]}],"javaBuildFilePatterns":["^pom\\.xml$",".*\\.gradle(\\.kts)?$"],"javaBuildTools":[{"displayName":"Maven","buildFileNames":["pom.xml"]},{"displayName":"Gradle","buildFileNames":["build.gradle","settings.gradle","build.gradle.kts","settings.gradle.kts"]}],"javaShortcuts":[{"title":"$(settings-gear) Open Java Settings","command":"workbench.action.openSettings","arguments":["java"]},{"title":"$(output) Open Logs","command":"java.open.logs"},{"title":"$(trash) Clean Workspace Cache...","command":"java.clean.workspace"},{"command":"java.change.searchScope","title":"$(search) Search Scope","category":"Java"}],"semanticTokenTypes":[{"id":"annotation","superType":"type","description":"Style for annotations."},{"id":"annotationMember","superType":"method","description":"Style for annotation members."},{"id":"modifier","superType":"keyword","description":"Style for modifier keywords."},{"id":"record","superType":"class","description":"Style for records."},{"id":"recordComponent","superType":"parameter","description":"Style for record components."}],"semanticTokenModifiers":[{"id":"public","description":"Style for symbols with the public access modifier."},{"id":"private","description":"Style for symbols with the private access modifier."},{"id":"protected","description":"Style for symbols with the protected access modifier."},{"id":"native","description":"Style for symbols with the native modifier."},{"id":"generic","description":"Style for symbols that are generic (have type parameters)."},{"id":"typeArgument","description":"Style for symbols that are type arguments for a generic symbol."},{"id":"importDeclaration","description":"Style for symbols that are part of an import declaration."},{"id":"constructor","description":"Style for symbols that are constructors."}],"semanticTokenScopes":[{"language":"java","scopes":{"annotation":["storage.type.annotation.java"],"annotationMember":["entity.name.annotationMember.java","constant.other.key.java"],"modifier":["storage.modifier.java"],"keyword.documentation":["keyword.other.documentation.javadoc.java"],"*.constructor":["entity.name.function.java"]}}],"languages":[{"id":"java","extensions":[".java",".class"],"configuration":"./language-support/java/language-configuration.json"},{"id":"java-properties","aliases":["Java Properties"],"extensions":[".properties"],"configuration":"./language-support/properties/java-properties-configuration.json"},{"id":"gradle-kotlin-dsl","aliases":["Gradle Kotlin DSL"],"extensions":[".gradle.kts"],"configuration":"./language-support/kotlin/language-configuration.json"}],"grammars":[{"language":"java","scopeName":"source.java","path":"./language-support/java/java.tmLanguage.json"},{"language":"java-properties","scopeName":"source.java-properties","path":"./language-support/properties/JavaProperties.tmLanguage.json"},{"language":"gradle-kotlin-dsl","scopeName":"source.gradle-kotlin-dsl","path":"./language-support/kotlin/kotlin.tmLanguage.json"},{"injectTo":["source.java"],"scopeName":"inline.sql","path":"./language-support/sql/inline-sql.json","embeddedLanguages":{"meta.embedded.block.sql":"sql"}},{"injectTo":["source.java"],"scopeName":"inline.json","path":"./language-support/json/inline-json.json","embeddedLanguages":{"meta.embedded.block.json":"json"}},{"injectTo":["source.java"],"scopeName":"inline.xml","path":"./language-support/xml/inline-xml.json","embeddedLanguages":{"meta.embedded.block.xml":"xml"}},{"injectTo":["source.java"],"scopeName":"inline.yaml","path":"./language-support/yaml/inline-yaml.json","embeddedLanguages":{"meta.embedded.block.yaml":"yaml"}},{"injectTo":["source.java"],"scopeName":"inline.html","path":"./language-support/html/inline-html.json","embeddedLanguages":{"meta.embedded.block.html":"html"}}],"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"}],"configuration":[{"id":"java-startup","title":"Startup","order":10,"properties":{"java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"","scope":"machine-overridable","deprecationMessage":"This setting is deprecated, please use 'java.jdt.ls.java.home' instead.","order":0},"java.jdt.ls.java.home":{"type":["string","null"],"default":null,"description":"Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server. This setting will replace the Java extension's embedded JRE to start the Java Language Server. \n\nOn Windows, backslashes must be escaped, i.e.\n\"java.jdt.ls.java.home\":\"C:\\\\Program Files\\\\Java\\\\jdk-17.0_3\"","scope":"machine-overridable","order":10},"java.jdt.ls.vmargs":{"type":["string","null"],"default":"-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable","description":"Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable` to optimize memory usage with the parallel garbage collector","scope":"machine-overridable","order":20},"java.server.launchMode":{"type":"string","enum":["Standard","LightWeight","Hybrid"],"enumDescriptions":["Provides full features such as intellisense, refactoring, building, Maven/Gradle support etc.","Starts a syntax server with lower start-up cost. Only provides syntax features such as outline, navigation, javadoc, syntax errors.","Provides full features with better responsiveness. It starts a standard language server and a secondary syntax server. The syntax server provides syntax features until the standard server is ready."],"description":"The launch mode for the Java extension","default":"Hybrid","scope":"window","order":30},"java.configuration.workspaceCacheLimit":{"type":["null","integer"],"default":90,"minimum":1,"description":"The number of days (if enabled) to keep unused workspace cache data. Beyond this limit, cached workspace data may be removed.","scope":"application","order":40},"java.sharedIndexes.enabled":{"type":"string","enum":["auto","on","off"],"default":"auto","markdownDescription":"[Experimental] Specify whether to share indexes between different workspaces. When set to `auto`, shared indexes will be enabled in Visual Studio Code - Insiders.","scope":"window","order":50},"java.sharedIndexes.location":{"type":"string","markdownDescription":"Specifies a common index location for all workspaces. See default values as follows:\n \nWindows: First use `\"$APPDATA\\\\.jdt\\\\index\"`, or `\"~\\\\.jdt\\\\index\"` if it does not exist\n \nmacOS: `\"~/Library/Caches/.jdt/index\"`\n \nLinux: First use `\"$XDG_CACHE_HOME/.jdt/index\"`, or `\"~/.cache/.jdt/index\"` if it does not exist","default":"","scope":"window","order":60},"java.jdt.ls.lombokSupport.enabled":{"type":"boolean","default":true,"description":"Whether to load lombok processors from project classpath","scope":"window","order":70},"java.jdt.ls.protobufSupport.enabled":{"type":"boolean","default":true,"markdownDescription":"Specify whether to automatically add Protobuf output source directories to the classpath.\n\n**Note:** Only works for Gradle `com.google.protobuf` plugin `0.8.4` or higher.","scope":"window","order":80},"java.jdt.ls.androidSupport.enabled":{"type":"string","enum":["auto","on","off"],"default":"auto","markdownDescription":"[Experimental] Specify whether to enable Android project importing. When set to `auto`, the Android support will be enabled in Visual Studio Code - Insiders.\n\n**Note:** Only works for Android Gradle Plugin `3.2.0` or higher.","scope":"window","order":90},"java.jdt.ls.javac.enabled":{"type":"string","enum":["on","off"],"default":"off","markdownDescription":"[Experimental] Specify whether to enable Javac-based compilation in the language server. Requires running this extension with Java 23","scope":"window","order":95},"java.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Java language server.","scope":"window"},"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window","tags":["usesOnlineServices","telemetry"]}}},{"id":"java-projectimport","title":"Project Import/Update","order":20,"properties":{"java.import.projectSelection":{"type":"string","enum":["manual","automatic"],"enumDescriptions":["Manually select the build configuration files.","Let extension automatically scan and select the build configuration files."],"default":"automatic","markdownDescription":"[Experimental] Specifies how to select build configuration files to import. \nNote: Currently, `Gradle` projects cannot be partially imported.","scope":"window","order":10},"java.configuration.updateBuildConfiguration":{"type":["string"],"enum":["disabled","interactive","automatic"],"default":"interactive","description":"Specifies how modifications on build files update the Java classpath/configuration","scope":"window","order":20},"java.import.exclusions":{"type":"array","description":"Configure glob patterns for excluding folders. Use `!` to negate patterns to allow subfolders imports. You have to include a parent directory. The order is important.","default":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"],"scope":"window"},"java.project.resourceFilters":{"type":"array","items":{"type":"string","pattern":"^(?!\\*).*"},"default":["node_modules","\\.git"],"markdownDescription":"Excludes files and folders from being refreshed by the Java Language Server, which can improve the overall performance. For example, [\"node_modules\",\"\\.git\"] will exclude all files and folders named `node_modules` or `.git`. Pattern expressions must be compatible with `java.util.regex.Pattern`. Defaults to [\"node_modules\",\"\\.git\"].","scope":"window"},"java.configuration.checkProjectSettingsExclusions":{"deprecationMessage":"Please use 'java.import.generatesMetadataFilesAtProjectRoot' to control whether to generate the project metadata files at the project root. And use 'files.exclude' to control whether to hide the project metadata files from the file explorer.","type":"boolean","default":false,"description":"Controls whether to exclude extension-generated project settings files (.project, .classpath, .factorypath, .settings/) from the file explorer.","scope":"window"},"java.import.generatesMetadataFilesAtProjectRoot":{"type":"boolean","markdownDescription":"Specify whether the project metadata files(.project, .classpath, .factorypath, .settings/) will be generated at the project root. Click [HERE](command:_java.metadataFilesGeneration) to learn how to change the setting to make it take effect.","default":false,"scope":"window"},"java.project.importOnFirstTimeStartup":{"type":"string","enum":["disabled","interactive","automatic"],"default":"automatic","description":"Specifies whether to import the Java projects, when opening the folder in Hybrid mode for the first time.","scope":"application"},"java.project.importHint":{"type":"boolean","description":"Enable/disable the server-mode switch information, when Java projects import is skipped on startup.","default":true,"scope":"application"},"java.showBuildStatusOnStart.enabled":{"anyOf":[{"enum":["notification","terminal","off"],"enumDescriptions":["Show the build status via progress notification on start","Show the build status via terminal on start","Do not show any build status on start"]},"boolean"],"description":"Automatically show build status on startup.","default":"notification","scope":"window"},"java.project.encoding":{"enum":["ignore","warning","setDefault"],"enumDescriptions":["Ignore project encoding settings","Show warning if a project has no explicit encoding set","Set the default workspace encoding settings"],"default":"ignore","markdownDescription":"Project encoding settings","scope":"window"}}},{"id":"java-unmanagedfolder","title":"Unmanaged Folder","order":30,"properties":{"java.project.sourcePaths":{"type":"array","items":{"type":"string"},"markdownDescription":"Relative paths to the workspace where stores the source files. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.","default":[],"scope":"window","order":10},"java.project.outputPath":{"type":["string","null"],"markdownDescription":"A relative path to the workspace where stores the compiled output. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.","default":"","scope":"window","order":20},"java.project.referencedLibraries":{"type":["array","object"],"description":"Configure glob patterns for referencing local libraries to a Java project.","default":["lib/**/*.jar"],"properties":{"include":{"type":"array"},"exclude":{"type":"array"},"sources":{"type":"object"}},"required":["include"],"additionalProperties":false,"scope":"window","order":30}}},{"id":"java-maven","title":"Maven","order":40,"properties":{"java.import.maven.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Maven importer.","scope":"window","order":10},"java.import.maven.offline.enabled":{"type":"boolean","default":false,"description":"Enable/disable the Maven offline mode.","scope":"window","order":20},"java.import.maven.disableTestClasspathFlag":{"type":"boolean","default":false,"description":"Enable/disable test classpath segregation. When enabled, this permits the usage of test resources within a Maven project as dependencies within the compile scope of other projects.","scope":"window","order":30},"java.maven.downloadSources":{"type":"boolean","default":false,"description":"Enable/disable download of Maven source artifacts as part of importing Maven projects.","scope":"window","order":40},"java.maven.updateSnapshots":{"type":"boolean","default":false,"description":"Force update of Snapshots/Releases.","scope":"window","order":50},"java.configuration.maven.userSettings":{"type":"string","default":null,"description":"Path to Maven's user settings.xml","scope":"window","order":60},"java.configuration.maven.globalSettings":{"type":"string","default":null,"description":"Path to Maven's global settings.xml","scope":"window","order":70},"java.configuration.maven.notCoveredPluginExecutionSeverity":{"type":"string","enum":["ignore","warning","error"],"default":"warning","description":"Specifies severity if the plugin execution is not covered by Maven build lifecycle.","scope":"window","order":80},"java.configuration.maven.defaultMojoExecutionAction":{"type":"string","enum":["ignore","warn","error","execute"],"default":"ignore","description":"Specifies default mojo execution action when no associated metadata can be detected.","scope":"window","order":90},"java.configuration.maven.lifecycleMappings":{"type":"string","default":null,"description":"Path to Maven's lifecycle mappings xml","scope":"window","order":100}}},{"id":"java-gradle","title":"Gradle","order":50,"properties":{"java.import.gradle.enabled":{"type":"boolean","default":true,"description":"Enable/disable the Gradle importer.","scope":"window","order":10},"java.import.gradle.wrapper.enabled":{"type":"boolean","default":true,"description":"Use Gradle from the 'gradle-wrapper.properties' file.","scope":"window","order":20},"java.import.gradle.version":{"type":"string","default":null,"description":"Use Gradle from the specific version if the Gradle wrapper is missing or disabled.","scope":"window","order":30},"java.import.gradle.home":{"type":"string","default":null,"description":"Use Gradle from the specified local installation directory or GRADLE_HOME if the Gradle wrapper is missing or disabled and no 'java.import.gradle.version' is specified.","scope":"machine-overridable","order":40},"java.import.gradle.java.home":{"type":"string","default":null,"description":"The location to the JVM used to run the Gradle daemon.","scope":"machine-overridable","order":50},"java.import.gradle.user.home":{"type":"string","default":null,"description":"Setting for GRADLE_USER_HOME.","scope":"machine-overridable","order":55},"java.import.gradle.offline.enabled":{"type":"boolean","default":false,"description":"Enable/disable the Gradle offline mode.","scope":"window","order":60},"java.import.gradle.arguments":{"type":"string","default":null,"description":"Arguments to pass to Gradle.","scope":"machine","order":70},"java.import.gradle.jvmArguments":{"type":"string","default":null,"description":"JVM arguments to pass to Gradle.","scope":"machine","order":80},"java.import.gradle.annotationProcessing.enabled":{"type":"boolean","default":true,"description":"Enable/disable the annotation processing on Gradle projects and delegate Annotation Processing to JDT APT. Only works for Gradle 5.2 or higher.","scope":"window","order":90},"java.imports.gradle.wrapper.checksums":{"type":"array","items":{"type":"object","default":{},"required":["sha256"],"properties":{"sha256":{"type":"string","label":"SHA-256 checksum."},"allowed":{"type":"boolean","default":true,"label":"Is allowed?"}},"additionalProperties":false,"uniqueItems":true},"description":"Defines allowed/disallowed SHA-256 checksums of Gradle Wrappers","default":[],"scope":"application"}}},{"id":"java-build","title":"Build","order":60,"properties":{"java.autobuild.enabled":{"type":"boolean","default":true,"description":"Enable/disable the 'auto build'","scope":"window","order":10},"java.maxConcurrentBuilds":{"type":"integer","default":1,"description":"Max simultaneous project builds","scope":"window","minimum":1,"order":20},"java.settings.url":{"type":"string","markdownDescription":"Specifies the url or file path to the workspace Java settings. See [Setting Global Preferences](https://github.com/redhat-developer/vscode-java/wiki/Settings-Global-Preferences)","default":null,"scope":"window","order":30},"java.compile.nullAnalysis.nonnull":{"type":"array","default":["javax.annotation.Nonnull","org.eclipse.jdt.annotation.NonNull","org.springframework.lang.NonNull"],"markdownDescription":"Specify the Nonnull annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`","scope":"window"},"java.compile.nullAnalysis.nullable":{"type":"array","default":["javax.annotation.Nullable","org.eclipse.jdt.annotation.Nullable","org.springframework.lang.Nullable"],"markdownDescription":"Specify the Nullable annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`","scope":"window"},"java.compile.nullAnalysis.nonnullbydefault":{"type":"array","default":["javax.annotation.ParametersAreNonnullByDefault","org.eclipse.jdt.annotation.NonNullByDefault","org.springframework.lang.NonNullApi"],"markdownDescription":"Specify the NonNullByDefault annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`","scope":"window"},"java.compile.nullAnalysis.mode":{"type":"string","enum":["disabled","interactive","automatic"],"default":"interactive","markdownDescription":"Specify how to enable the annotation-based null analysis.","scope":"window"},"java.errors.incompleteClasspath.severity":{"type":["string"],"enum":["ignore","info","warning","error"],"default":"warning","description":"Specifies the severity of the message when the classpath is incomplete for a Java file","scope":"window"}}},{"id":"java-jdks","title":"Installed JDKs","order":70,"properties":{"java.configuration.runtimes":{"type":"array","description":"Map Java Execution Environments to local JDKs.","items":{"type":"object","default":{},"required":["path","name"],"properties":{"name":{"type":"string","enum":["J2SE-1.5","JavaSE-1.6","JavaSE-1.7","JavaSE-1.8","JavaSE-9","JavaSE-10","JavaSE-11","JavaSE-12","JavaSE-13","JavaSE-14","JavaSE-15","JavaSE-16","JavaSE-17","JavaSE-18","JavaSE-19","JavaSE-20","JavaSE-21","JavaSE-22","JavaSE-23"],"description":"Java Execution Environment name. Must be unique."},"path":{"type":"string","pattern":".*(?<!\\/bin|\\/bin\\/|\\\\bin|\\\\bin\\\\)$","description":"JDK home path. Should be the JDK installation directory, not the Java bin path.\n On Windows, backslashes must be escaped, i.e.\n\"path\":\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"."},"sources":{"type":"string","description":"JDK sources path."},"javadoc":{"type":"string","description":"JDK javadoc path."},"default":{"type":"boolean","description":"Is default runtime? Only one runtime can be default."}},"additionalProperties":false},"default":[],"scope":"machine-overridable"},"java.configuration.detectJdksAtStart":{"type":"boolean","default":true,"markdownDescription":"Automatically detect JDKs installed on local machine at startup. If you have specified the same JDK version in `#java.configuration.runtimes#`, the extension will use that version first."}}},{"id":"java-formatting","title":"Formatting","order":80,"properties":{"java.format.enabled":{"type":"boolean","default":true,"description":"Enable/disable default Java formatter","scope":"window","order":10},"java.format.settings.url":{"type":"string","markdownDescription":"Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).","default":null,"scope":"window","order":20},"java.format.settings.profile":{"type":"string","description":"Optional formatter profile name from the Eclipse formatter settings.","default":null,"scope":"window","order":30},"java.format.comments.enabled":{"type":"boolean","description":"Includes the comments during code formatting.","default":true,"scope":"window"},"java.format.onType.enabled":{"type":"boolean","description":"Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`","default":true,"scope":"window"}}},{"id":"java-codecompletion","title":"Code Completion","order":90,"properties":{"java.completion.enabled":{"type":"boolean","default":true,"description":"Enable/disable code completion support","scope":"window","order":10},"java.completion.engine":{"type":"string","default":"ecj","description":"[Experimental] Select code completion engine","scope":"window","enum":["ecj","dom"],"markdownEnumDescriptions":["Use ECJ-based code completion engine (default)","Use (highly experimental) JDT DOM-based code completion engine (requires `java.jdt.ls.javac.enabled` to be `on`)"],"order":1000},"java.completion.postfix.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable/disable postfix completion support. `#editor.snippetSuggestions#` can be used to customize how postfix snippets are sorted.","scope":"window","order":20},"java.completion.chain.enabled":{"type":"boolean","default":false,"markdownDescription":"Enable/disable chain completion support. Chain completions are only available when completions are invoked by the completions shortcut","scope":"window","order":30},"java.completion.favoriteStaticMembers":{"type":"array","description":"Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.","default":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*","org.mockito.Mockito.*","org.mockito.ArgumentMatchers.*","org.mockito.Answers.*"],"scope":"window","order":40},"java.completion.filteredTypes":{"type":"array","description":"Defines the type filters. All types whose fully qualified name matches the selected filter strings will be ignored in content assist or quick fix proposals and when organizing imports. For example 'java.awt.*' will hide all types from the awt packages.","default":["java.awt.*","com.sun.*","sun.*","jdk.*","org.graalvm.*","io.micrometer.shaded.*"],"scope":"window","order":50},"java.completion.guessMethodArguments":{"type":["boolean","string"],"enum":["auto","off","insertParameterNames","insertBestGuessedArguments"],"enumDescriptions":["Use 'off' only when using Visual Studio Code - Insiders, other platform will defaults to 'insertBestGuessedArguments'.","Method arguments will not be inserted during completion.","The parameter names will be inserted during completion.","The best guessed arguments will be inserted during completion according to the code context."],"default":"auto","description":"Specify how the arguments will be filled during completion.","scope":"window","order":60},"java.completion.matchCase":{"type":"string","enum":["firstLetter","off"],"enumDescriptions":["Match case for the first letter when doing completion.","Do not match case when doing completion."],"default":"firstLetter","markdownDescription":"Specify whether to match case for code completion.","scope":"window","order":70},"java.completion.importOrder":{"type":"array","description":"Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group. As a result, the empty string (e.g. '') can be used to group all other imports. Static imports are prefixed with a '#'","default":["#","java","javax","org","com",""],"scope":"window","order":80},"java.completion.lazyResolveTextEdit.enabled":{"type":"boolean","default":true,"description":"[Experimental] Enable/disable lazily resolving text edits for code completion.","scope":"window"},"java.completion.maxResults":{"type":"integer","default":0,"markdownDescription":"Maximum number of completion results (not including snippets).\n`0` (the default value) disables the limit, all results are returned. In case of performance problems, consider setting a sensible limit.","scope":"window"},"java.signatureHelp.enabled":{"type":"boolean","default":true,"description":"Enable/disable the signature help.","scope":"window"},"java.signatureHelp.description.enabled":{"type":"boolean","default":false,"description":"Enable/disable to show the description in signature help.","scope":"window"},"java.completion.collapseCompletionItems":{"type":"boolean","default":false,"markdownDescription":"Enable/disable the collapse of overloaded methods in completion items. Overrides `#java.completion.guessMethodArguments#`.","scope":"window"}}},{"id":"java-codegeneration","title":"Code Generation","order":100,"properties":{"java.templates.fileHeader":{"type":"array","markdownDescription":"Specifies the file header comment for new Java file. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).","scope":"window","default":[],"order":10},"java.templates.typeComment":{"type":"array","markdownDescription":"Specifies the type comment for new Java type. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).","scope":"window","default":[],"order":20},"java.codeGeneration.insertionLocation":{"type":"string","enum":["afterCursor","beforeCursor","lastMember"],"enumDescriptions":["Insert the generated code after the member where the cursor is located.","Insert the generated code before the member where the cursor is located.","Insert the generated code as the last member of the target type."],"description":"Specifies the insertion location of the code generated by source actions.","default":"afterCursor","scope":"window","order":30},"java.codeGeneration.addFinalForNewDeclaration":{"type":"string","enum":["none","fields","variables","all"],"enumDescriptions":["Do not generate final modifier.","Generate 'final' modifier only for new field declarations.","Generate 'final' modifier only for new variable declarations.","Generate 'final' modifier for all new declarations."],"description":"Whether to generate the 'final' modifer for code actions that create new declarations.","default":"none","scope":"window"},"java.codeGeneration.hashCodeEquals.useJava7Objects":{"type":"boolean","description":"Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.","default":false,"scope":"window"},"java.codeGeneration.hashCodeEquals.useInstanceof":{"type":"boolean","description":"Use 'instanceof' to compare types when generating the hashCode and equals methods.","default":false,"scope":"window"},"java.codeGeneration.useBlocks":{"type":"boolean","description":"Use blocks in 'if' statements when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.generateComments":{"type":"boolean","description":"Generate method comments when generating the methods.","default":false,"scope":"window"},"java.codeGeneration.toString.template":{"type":"string","description":"The template for generating the toString method.","default":"${object.className} [${member.name()}=${member.value}, ${otherMembers}]"},"java.codeGeneration.toString.codeStyle":{"type":"string","enum":["STRING_CONCATENATION","STRING_BUILDER","STRING_BUILDER_CHAINED","STRING_FORMAT"],"enumDescriptions":["String concatenation","StringBuilder/StringBuffer","StringBuilder/StringBuffer - chained call","String.format/MessageFormat"],"description":"The code style for generating the toString method.","default":"STRING_CONCATENATION"},"java.codeGeneration.toString.skipNullValues":{"type":"boolean","description":"Skip null values when generating the toString method.","default":false,"scope":"window"},"java.codeGeneration.toString.listArrayContents":{"type":"boolean","description":"List contents of arrays instead of using native toString().","default":true,"scope":"window"},"java.codeGeneration.toString.limitElements":{"type":"integer","description":"Limit number of items in arrays/collections/maps to list, if 0 then list all.","default":0,"scope":"window"},"java.edit.smartSemicolonDetection.enabled":{"type":"boolean","default":false,"markdownDescription":"Defines the `smart semicolon` detection. Defaults to `false`.","scope":"window"}}},{"id":"java-codeaction","title":"Code Action","order":110,"properties":{"java.cleanup.actions":{"type":"array","markdownDescription":"The list of clean ups to be run on the current document when it's saved or when the cleanup command is issued. Clean ups can automatically fix code style or programming mistakes. Click [HERE](command:_java.learnMoreAboutCleanUps) to learn more about what each clean up does.","items":{"type":"string","enum":["qualifyMembers","qualifyStaticMembers","addOverride","addDeprecated","stringConcatToTextBlock","invertEquals","addFinalModifier","instanceofPatternMatch","lambdaExpressionFromAnonymousClass","lambdaExpression","switchExpression","tryWithResource","renameFileToType","organizeImports","renameUnusedLocalVariables"]},"default":["renameFileToType"],"scope":"window","order":10},"java.cleanup.actionsOnSave":{"type":"array","deprecationMessage":"Deprecated, please use 'java.cleanup.actions' instead.","items":{"type":"string","enum":["qualifyMembers","qualifyStaticMembers","addOverride","addDeprecated","stringConcatToTextBlock","invertEquals","addFinalModifier","instanceofPatternMatch","lambdaExpressionFromAnonymousClass","lambdaExpression","switchExpression","tryWithResource"]},"default":[],"scope":"window"},"java.saveActions.cleanup":{"type":"boolean","default":true,"description":"Enable/disable cleanup actions on save."},"java.saveActions.organizeImports":{"type":"boolean","default":false,"description":"Enable/disable auto organize imports on save action","scope":"window","order":20},"java.sources.organizeImports.starThreshold":{"type":"integer","description":"Specifies the number of imports added before a star-import declaration is used.","default":99,"scope":"window","minimum":1,"order":30},"java.sources.organizeImports.staticStarThreshold":{"type":"integer","description":"Specifies the number of static imports added before a star-import declaration is used.","default":99,"scope":"window","minimum":1,"order":40},"java.quickfix.showAt":{"type":"string","enum":["line","problem"],"default":"line","description":"Show quickfixes at the problem or line level.","scope":"window"},"java.codeAction.sortMembers.avoidVolatileChanges":{"type":"boolean","default":true,"description":"Reordering of fields, enum constants, and initializers can result in semantic and runtime changes due to different initialization and persistence order. This setting prevents this from occurring.","scope":"window"},"java.refactoring.extract.interface.replace":{"type":"boolean","markdownDescription":"Specify whether to replace all the occurrences of the subtype with the new extracted interface.","default":true}}},{"id":"java-codenagivation","title":"Code Navigation","order":120,"properties":{"java.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable the references code lens.","scope":"window","order":10},"java.implementationCodeLens":{"type":"string","enum":["none","types","methods","all"],"enumDescriptions":["Disable the implementations code lens","Enable the implementations code lens only for types","Enable the implementations code lens only for methods","Enable the implementations code lens for types and methods"],"default":"none","description":"Enable/disable the implementations code lens for the provided categories.","scope":"window","order":20},"java.references.includeAccessors":{"type":"boolean","default":true,"description":"Include getter, setter and builder/constructor when finding references.","scope":"window","order":30},"java.references.includeDeclarations":{"type":"boolean","default":true,"description":"Include declarations when finding references.","scope":"window","order":40},"java.references.includeDecompiledSources":{"type":"boolean","default":true,"description":"Include the decompiled sources when finding references.","scope":"window","order":50},"java.symbols.includeSourceMethodDeclarations":{"type":"boolean","markdownDescription":"Include method declarations from source files in symbol search.","default":false,"scope":"window","order":60},"java.typeHierarchy.lazyLoad":{"type":"boolean","default":false,"description":"Enable/disable lazy loading the content in type hierarchy. Lazy loading could save a lot of loading time but every type should be expanded manually to load its content.","scope":"window","order":70},"java.inlayHints.parameterNames.enabled":{"type":"string","enum":["none","literals","all"],"enumDescriptions":["Disable parameter name hints","Enable parameter name hints only for literal arguments","Enable parameter name hints for literal and non-literal arguments"],"default":"literals","markdownDescription":"Enable/disable inlay hints for parameter names:\n```java\n\nInteger.valueOf(/* s: */ '123', /* radix: */ 10)\n \n```\n `#java.inlayHints.parameterNames.exclusions#` can be used to disable the inlay hints for methods.","scope":"window","order":80},"java.inlayHints.parameterNames.exclusions":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"The patterns for the methods that will be disabled to show the inlay hints. Supported pattern examples:\n - `java.lang.Math.*` - All the methods from java.lang.Math.\n - `*.Arrays.asList` - Methods named as 'asList' in the types named as 'Arrays'.\n - `*.println(*)` - Methods named as 'println'.\n - `(from, to)` - Methods with two parameters named as 'from' and 'to'.\n - `(arg*)` - Methods with one parameter whose name starts with 'arg'.","scope":"window","order":90},"java.search.scope":{"type":"string","enum":["all","main"],"enumDescriptions":["Search on all classpath entries including reference libraries and projects.","All classpath entries excluding test classpath entries."],"default":"all","markdownDescription":"Specifies the scope which must be used for search operation like \n - Find Reference\n - Call Hierarchy\n - Workspace Symbols","scope":"window","order":100}}},{"id":"java-others","title":"Others","order":130,"properties":{"java.eclipse.downloadSources":{"type":"boolean","default":false,"description":"Enable/disable download of Maven source artifacts for Eclipse projects.","scope":"window"},"java.contentProvider.preferred":{"type":"string","description":"Preferred content provider (a 3rd party decompiler id, usually)","default":null,"scope":"window"},"java.foldingRange.enabled":{"type":"boolean","default":true,"description":"Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.","scope":"window"},"java.selectionRange.enabled":{"type":"boolean","default":true,"description":"Enable/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.","scope":"window"},"java.edit.validateAllOpenBuffersOnChanges":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to recheck all open Java files for diagnostics when editing a Java file.","scope":"window"},"java.diagnostic.filter":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies a list of file patterns for which matching documents should not have their diagnostics reported (eg. '**/Foo.java').","scope":"window"},"java.editor.reloadChangedSources":{"type":"string","enum":["ask","auto","manual"],"enumDescriptions":["Ask to reload the sources of the open class files","Automatically reload the sources of the open class files","Manually reload the sources of the open class files"],"default":"ask","markdownDescription":"Specifies whether to reload the sources of the open class files when their source jar files are changed.","scope":"window"}}}],"configurationDefaults":{"[java]":{"editor.suggest.snippetsPreventQuickSuggestions":false}},"commands":[{"command":"java.server.mode.switch","title":"Switch to Standard Mode","category":"Java"},{"command":"java.projectConfiguration.update","title":"Reload Projects","category":"Java"},{"command":"java.project.import.command","title":"Import Java Projects into Workspace","category":"Java"},{"command":"java.open.serverLog","title":"Open Java Language Server Log File","category":"Java"},{"command":"java.open.serverStdoutLog","title":"Open Java Language Server Output Log File"},{"command":"java.open.serverStderrLog","title":"Open Java Language Server Error Log File"},{"command":"java.open.clientLog","title":"Open Java Extension Log File","category":"Java"},{"command":"java.open.logs","title":"Open All Log Files","category":"Java"},{"command":"java.workspace.compile","title":"Force Java Compilation","category":"Java"},{"command":"java.project.build","title":"Rebuild Projects","category":"Java"},{"command":"java.open.formatter.settings","title":"Open Java Formatter Settings","category":"Java"},{"command":"java.clean.workspace","title":"Clean Java Language Server Workspace","category":"Java"},{"command":"java.project.updateSourceAttachment.command","title":"Attach Source...","category":"Java"},{"command":"java.project.addToSourcePath.command","title":"Add Folder to Java Source Path","category":"Java"},{"command":"java.project.removeFromSourcePath.command","title":"Remove Folder from Java Source Path","category":"Java"},{"command":"java.project.listSourcePaths.command","title":"List All Java Source Paths","category":"Java"},{"command":"java.show.server.task.status","title":"Show Build Job Status","category":"Java"},{"command":"java.action.navigateToSuperImplementation","title":"Go to Super Implementation","category":"Java"},{"command":"java.action.showTypeHierarchy","title":"Show Type Hierarchy","category":"Java"},{"command":"java.action.showClassHierarchy","title":"Show Class Hierarchy","icon":"$(type-hierarchy)","enablement":"typeHierarchyDirection != both && typeHierarchySymbolKind != 10","category":"Java"},{"command":"java.action.showSupertypeHierarchy","title":"Show Supertype Hierarchy","icon":"$(type-hierarchy-super)","enablement":"typeHierarchyDirection != parents","category":"Java"},{"command":"java.action.showSubtypeHierarchy","title":"Show Subtype Hierarchy","icon":"$(type-hierarchy-sub)","enablement":"typeHierarchyDirection != children","category":"Java"},{"command":"java.action.changeBaseType","title":"Base on this Type","category":"Java"},{"command":"java.project.createModuleInfo.command","title":"Create module-info.java","category":"Java"},{"command":"_java.learnMoreAboutCleanUps","title":"Learn more about Java Clean Ups","category":"Java"},{"command":"java.clean.sharedIndexes","title":"Clean Shared Indexes","category":"Java"},{"command":"java.server.restart","title":"Restart Java Language Server","category":"Java"},{"command":"java.action.filesExplorerPasteAction","title":"Paste Clipboard Text Into a File","category":"Java"},{"command":"java.action.doCleanup","title":"Performs Cleanup Actions","category":"Java"},{"command":"java.change.searchScope","title":"Change Search Scope","category":"Java"}],"keybindings":[{"command":"java.projectConfiguration.update","key":"shift+alt+u","when":"editorFocus"},{"command":"java.workspace.compile","key":"shift+alt+b"},{"command":"java.action.clipboardPasteAction","key":"ctrl+shift+v","mac":"cmd+shift+v","when":"javaLSReady && editorLangId == java"},{"command":"java.action.filesExplorerPasteAction","key":"ctrl+shift+v","mac":"cmd+shift+v","when":"explorerViewletFocus && config.editor.pasteAs.enabled"},{"command":"java.action.doCleanup","key":"ctrl+shift+alt+s","when":"javaLSReady && editorLangId == java"}],"menus":{"explorer/context":[{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/","group":"1_javaactions"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.addToSourcePath.command","group":"1_javaactions@1"},{"when":"explorerResourceIsFolder&&javaLSReady","command":"java.project.removeFromSourcePath.command","group":"1_javaactions@2"}],"editor/context":[{"command":"java.project.updateSourceAttachment.command","when":"editorReadonly && editorLangId == java","group":"1_javaactions"},{"command":"java.projectConfiguration.update","when":"resourceFilename =~ /(.*\\.gradle)|(.*\\.gradle\\.kts)|(pom\\.xml)$/","group":"1_javaactions"},{"command":"java.action.navigateToSuperImplementation","when":"javaLSReady && editorTextFocus && editorLangId == java","group":"navigation@90"},{"command":"java.action.showTypeHierarchy","when":"javaLSReady && editorTextFocus && editorLangId == java","group":"0_navigation@3"}],"commandPalette":[{"command":"java.projectConfiguration.update","when":"javaLSReady"},{"command":"java.project.import.command","when":"javaLSReady"},{"command":"java.open.serverStdoutLog","when":"false"},{"command":"java.open.serverStderrLog","when":"false"},{"command":"java.action.navigateToSuperImplementation","when":"javaLSReady && editorLangId == java"},{"command":"java.workspace.compile","when":"javaLSReady"},{"command":"java.project.build","when":"javaLSReady"},{"command":"java.project.listSourcePaths.command","when":"javaLSReady"},{"command":"java.action.showTypeHierarchy","when":"javaLSReady && editorIsOpen"},{"command":"java.action.showClassHierarchy","when":"false"},{"command":"java.action.showSubtypeHierarchy","when":"false"},{"command":"java.action.showSupertypeHierarchy","when":"false"},{"command":"java.action.changeBaseType","when":"false"},{"command":"java.project.updateSourceAttachment.command","when":"false"},{"command":"java.project.addToSourcePath.command","when":"false"},{"command":"java.project.removeFromSourcePath.command","when":"false"},{"command":"java.show.server.task.status","when":"java:serverMode != LightWeight"},{"command":"java.server.mode.switch","when":"java:serverMode == LightWeight"},{"command":"java.server.restart","when":"javaLSReady"},{"command":"java.action.filesExplorerPasteAction","when":"false"},{"command":"java.action.doCleanup","when":"false"}],"view/title":[{"command":"java.action.showClassHierarchy","group":"navigation@-1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy && typeHierarchySymbolKind != 10"},{"command":"java.action.showSupertypeHierarchy","group":"navigation@0","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy"},{"command":"java.action.showSubtypeHierarchy","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy"}],"view/item/context":[{"command":"java.action.changeBaseType","group":"1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == javaTypeHierarchy && viewItem != 'false'"}]}},"scripts":{"vscode:prepublish":"webpack --mode production","compile":"tsc -p ./&webpack --mode development","watch":"webpack --mode development --watch","pretest":"npm run compile","test":"node ./out/test/runtest.js","build-server":"./node_modules/.bin/gulp build_server","build":"./node_modules/.bin/gulp build_or_download","fast-build-server":"./node_modules/.bin/gulp dev_server","watch-server":"./node_modules/.bin/gulp watch_server","eslint":"eslint --ignore-path .eslintignore --ext .js,.ts,.tsx .","repo:check":"./node_modules/.bin/gulp repo_check","repo:fix":"./node_modules/.bin/gulp repo_fix"},"devDependencies":{"@types/fs-extra":"^8.0.0","@types/glob":"5.0.30","@types/lodash.findindex":"^4.6.6","@types/mocha":"^5.2.5","@types/node":"^18.17.1","@types/react":"^17.0.37","@types/react-dom":"^17.0.11","@types/semver":"^7.3.8","@types/sinon":"^10.0.12","@types/vscode":"^1.77.0","@types/vscode-webview":"^1.57.0","@types/winreg":"^1.2.30","@types/winston":"^2.4.4","@typescript-eslint/eslint-plugin":"^5.18.0","@typescript-eslint/parser":"^5.18.0","@vscode/test-electron":"^2.3.8","css-loader":"^6.7.3","eslint":"^8.13.0","eslint-webpack-plugin":"^3.2.0","gulp":"^5.0.0","gulp-decompress":"^3.0.0","gulp-download":"0.0.1","lodash.findindex":"^4.6.0","lodash.template":">=4.5.0","minimist":">=1.2.6","mocha":"^9.2.2","request":"^2.88.2","sinon":"^14.0.0","style-loader":"^3.3.1","ts-loader":"^9.4.2","typescript":"^4.6.4","webpack":"^5.94.0","webpack-cli":"^4.6.0"},"dependencies":{"@redhat-developer/vscode-extension-proposals":"0.0.23","@redhat-developer/vscode-redhat-telemetry":"^0.9.0","@vscode/codicons":"^0.0.32","@vscode/webview-ui-toolkit":"1.2.2","chokidar":"^3.5.3","expand-home-dir":"^0.0.3","fmtr":"^1.1.2","fs-extra":"^8.1.0","glob":"^7.1.3","htmlparser2":"6.0.1","jdk-utils":"^0.5.1","react":"^17.0.2","react-dom":"^17.0.2","semver":"^7.5.2","vscode-languageclient":"8.2.0-next.3","winreg-utf8":"^0.1.1","winston":"^3.2.1","winston-daily-rotate-file":"^4.7.1"},"overrides":{"vscode-languageserver-protocol":"3.17.6-next.1"},"segmentWriteKey":"Y7Y5Xk8dKEhVZHTmAkFZkqgdN4d7c4lt","segmentWriteKeyDebug":"BflPll7uuKOCm3y0g7JpfXLVBVFBivDE"},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/redhat.java-1.38.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Red Hat","metadata":{"installedTimestamp":1736421878083,"pinned":false,"source":"gallery","id":"198a707e-28af-4e84-8610-6e2f628dd12d","publisherId":"eed56242-9699-4317-8bc7-e9f4b9bdd3ff","publisherDisplayName":"Red Hat","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":146819031},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.29.0","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["onStartupFinished","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]","pattern":"^(.:.)?(,.:.)*$"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1,"maximum":10000},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VS Code to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":["#005f5f","#ffffff"]},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":["#5f0000","#ffffff"]},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":["#5f00af","#ffffff"]},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":["#005f87","#ffffff"]},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":["#86592d","#ffffff"]},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":["#00000","#ffffff"]},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":["#007acc","#ffffff"]},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `#vim.neovimConfigPath#`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `#vim.neovimUseConfigFile#` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""},"vim.langmap":{"type":"string","description":"Language map for alternate keyboard layouts. When you are typing text in Insert (or Replace, etc.) mode, the characters are inserted derectly. Otherwise, they are translated based on the provided map."}}},"languages":[{"id":"Vimscript","extensions":[".vim",".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"Vimscript","scopeName":"source.vimscript","path":"./syntaxes/vimscript.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"eslint .","lint:fix":"eslint . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"5.3.0","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.2.3","@types/diff-match-patch":"1.0.36","@types/glob":"8.1.0","@types/lodash":"4.17.13","@types/mocha":"10.0.10","@types/node":"22.10.1","@types/parsimmon":"1.10.9","@types/sinon":"17.0.3","@types/vscode":"1.74.0","@typescript-eslint/eslint-plugin":"^8.0.0","@typescript-eslint/parser":"^8.0.0","@vscode/test-electron":"2.4.1","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","eslint":"^8.52.0","eslint-config-prettier":"^9.0.0","eslint-plugin-jsdoc":"^50.0.0","eslint-plugin-prefer-arrow":"^1.2.3","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"9.0.2","gulp":"5.0.0","gulp-bump":"3.2.0","gulp-git":"2.11.0","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^9.0.0","lint-staged":"^15.0.0","minimist":"1.2.8","mocha":"11.0.1","plugin-error":"2.0.1","prettier":"3.4.2","sinon":"19.0.2","ts-loader":"9.5.1","typescript":"5.7.2","vsce":"2.15.0","webpack":"5.97.0","webpack-cli":"5.1.4","webpack-merge":"6.0.1","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.ts":"eslint --fix"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/vscodevim.vim-1.29.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vscodevim","metadata":{"installedTimestamp":1736422160570,"pinned":false,"source":"gallery","id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":3947344},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.23.2","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-release"},"bugs":{"url":"https://aka.ms/microsoft/vscode-copilot-release"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","engines":{"vscode":"^1.96.0-20241122","npm":">=9.0.0","node":">=20.0.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelChat:copilot","onUri","onFileSystem:ccreq","onFileSystem:ccsettings"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findFiles2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","chatParticipantAdditions","chatEditing","defaultChatParticipant","chatVariableResolver","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider","chatParticipantPrivate","chatProvider","contribDebugCreateConfiguration","inlineEdit","textSearchProvider2"],"contributes":{"languageModelTools":[{"name":"copilot_codebase","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","canBeReferencedInPrompt":true,"userDescription":"Reference relevant file chunks, symbols, and other information in your codebase.","modelDescription":"Search for relevant file chunks, symbols, and other info about the current workspace or codebase","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search the codebase for. Should contain all relevant context. Can be a full natural language sentence, or keywords."}},"required":["query"]}},{"name":"copilot_vscodeAPI","toolReferenceName":"vscodeAPI","displayName":"VS Code API","icon":"$(references)","userDescription":"Use VS Code API references to answer questions about VS Code extension development.","modelDescription":"Use VS Code API references to answer questions about VS Code extension development.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search vscode documentation for. Should contain all relevant context."}},"required":["query"]},"canBeReferencedInPrompt":true}],"chatParticipants":[{"id":"github.copilot.default","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["panel"],"disambiguation":[{"category":"generate_code_sample","description":"The user wants to generate code snippets without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Write an example of computing a SHA256 hash."]},{"category":"question_about_specific_files","description":"The user has a question about a specific file or code snippet that they have provided as part of their query, and the question does not require additional workspace context to answer.","examples":["What does this file do?"]}]},{"id":"github.copilot.editingSession","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["editing-session"]},{"id":"github.copilot.editor","name":"Copilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["editor"],"commands":[{"name":"doc","description":"Add documentation comment for this symbol"},{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code"},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"config.github.copilot.chat.fixTestFailure.enabled && github.copilot.chat.fixTestFailures.hasFailure"}]},{"id":"github.copilot.notebook","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["notebook"],"commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.workspace","name":"workspace","fullName":"Workspace","description":"Ask about your workspace","sampleRequest":"How do I build this project?","locations":["panel"],"disambiguation":[{"category":"workspace_project_questions","description":"The user wants to learn about or update the code or files in their current workspace. Questions in this category may be about understanding what the whole workspace does or locating the implementation of some code. This does not include generating or updating tests.","examples":["What does this project do?"]},{"category":"generate_with_workspace_context","description":"The user wants to generate code based on multiple files in the workspace and did not specify which files to reference.","examples":["Create a README for this project."]}],"commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"create_tests","description":"The user wants to generate unit tests.","examples":["Generate tests for my selection using pytest."]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new file or project in a workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true,"disambiguation":[{"category":"create_new_workspace_or_extension","description":"The user wants to create a complete workspace from scratch in Visual Studio Code, such as a new application or Visual Studio Code extension. The user may have specified individual files that you should refer to. The user may have also provided previously used requests, which you can ignore if they are not relevant to the latest user request. Do not use this category to update an existing project or generate individual methods or files.","examples":["Scaffold a Node server.","Create a sample project which uses the fileSystemProvider API.","New react application"]}]},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"How do I create a notebook to load data from a csv file?","disambiguation":[{"category":"create_jupyter_notebook","description":"The user wants to create a new Jupyter notebook in Visual Studio Code.","examples":["Create a notebook to analyze this CSV file."]}]},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"config.github.copilot.chat.fixTestFailure.enabled"},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"},{"name":"setupTests","description":"Set up tests in your project (Experimental)","sampleRequest":"add playwright tests to my project","when":"config.github.copilot.chat.setupTests.enabled","disambiguation":[{"category":"set_up_tests","description":"The user wants to configure project test setup, framework, or test runner.","examples":["Set up tests for this project."]}]}]},{"id":"github.copilot.vscode","name":"vscode","fullName":"VS Code","description":"Ask questions about VS Code","sampleRequest":"What is the command to open the integrated terminal?","locations":["panel"],"disambiguation":[{"category":"vscode_configuration_questions","description":"The user wants to learn about, use, or configure the Visual Studio Code editor, terminal, debugger, source control, tasks, extensions, commands, or settings. This category does not include creating VS Code extensions or generating and explaining code.","examples":["Switch to light mode."]},{"category":"configure_python_environment","description":"The user wants to set up their Python environment.","examples":["Create a virtual environment for my project."]}],"commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"startDebugging","description":"Generate launch config and start debugging in VS Code (Experimental)","sampleRequest":"Attach to node app at port 9229","when":"config.github.copilot.chat.startDebugging.enabled"}]},{"id":"github.copilot.terminal","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","sampleRequest":"How do I view all files within a directory including sub-directories?","isDefault":true,"locations":["terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]},{"id":"github.copilot.terminalPanel","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","sampleRequest":"How do I view all files within a directory including sub-directories?","locations":["panel"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command","disambiguation":[{"category":"terminal_state_questions","description":"The user wants to learn about specific state such as the selection, command, or failed command in the integrated terminal in Visual Studio Code.","examples":["Why did the latest terminal command fail?"]}]}]}],"languageModels":{"vendor":"copilot"},"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"debug","when":"github.copilot-chat.activated","contents":"Github Copilot Chat can help you start debugging, either based on a [terminal command](command:github.copilot.chat.startCopilotDebugCommand) or with [interactive chat](command:workbench.action.chat.open?%7B%22query%22%3A%22%40vscode%20%2FstartDebugging%20%22%2C%22isPartialQuery%22%3Atrue%7D)."}],"chatViewsWelcome":[{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in with GitHub to use GitHub Copilot, your AI pair programmer.\n\n[Sign in to GitHub.com](command:github.copilotChat.signIn)\n\n[Sign in with a GHE.com account](command:github.copilotChat.signInGHE)\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"config.github.copilot.advanced.authProvider != 'github-enterprise' && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in with GitHub to use GitHub Copilot, your AI pair programmer.\n\n[Sign in to GHE.com](command:github.copilotChat.signInGHE)\n\n[Sign in with a GitHub.com account](command:github.copilotChat.signIn)\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"config.github.copilot.advanced.authProvider == 'github-enterprise' && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Get started with GitHub Copilot.\n\n[Start GitHub Copilot Free](https://github.com/github-copilot/signup)\n\nIf you have a different account with a Copilot subscription, you can [sign in to that account](command:github.copilotChat.signInChoose?%22force%22).\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"github.copilot.interactiveSession.individual.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"You are currently offline. Please connect to the internet to use GitHub Copilot.\n\n[Retry Connection](command:github.copilot.refreshToken)","when":"github.copilot.offline"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"There seems to be a problem with your account. Please contact GitHub support.\n\n[Contact Support](https://support.github.com/?editor=vscode)","when":"github.copilot.interactiveSession.contactSupport"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"GitHub Copilot Chat is currently disabled for your account by an organization administrator. Contact an organization administrator to enable chat.\n\n[Learn More](https://docs.github.com/en/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-github-copilot-features-in-your-organization/managing-policies-for-copilot-in-your-organization)","when":"github.copilot.interactiveSession.chatDisabled"}],"commands":[{"command":"github.copilotChat.signIn","title":"Sign in to GitHub.com","enablement":"false"},{"command":"github.copilotChat.signInGHE","title":"Sign in to GHE.com","enablement":"false"},{"command":"github.copilotChat.signInChoose","title":"Sign in to...","enablement":"false"},{"command":"github.copilot.chat.explain","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.explain.palette","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.review","title":"Review and Comment","enablement":"github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.apply","title":"Apply","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.applyAndNext","title":"Apply and Go to Next","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discard","title":"Discard","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAndNext","title":"Discard and Go to Next","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAll","title":"Discard All","icon":"$(close-all)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.stagedChanges","title":"Copilot Code Review - Staged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.unstagedChanges","title":"Copilot Code Review - Unstaged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes","title":"Copilot Code Review - Uncommitted Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes.cancel","title":"Copilot Code Review - Cancel","icon":"$(stop-circle)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.previous","title":"Previous Suggestion","icon":"$(arrow-up)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.next","title":"Next Suggestion","icon":"$(arrow-down)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInInlineChat","title":"Discard and Copy to Inline Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInChat","title":"View in Chat Panel","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!(commentThread =~ /markedAsHelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!(commentThread =~ /markedAsUnhelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.generate","title":"Generate This","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.fix","title":"Fix","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.terminal.explainTerminalSelection","title":"Explain Terminal Selection","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","title":"Explain","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.terminal.attachTerminalSelection","title":"Add Terminal Selection to Chat","category":"GitHub Copilot"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message with Copilot","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration with Copilot","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure.fromInline","icon":"$(sparkle)","title":"Fix Test Failure"},{"command":"github.copilot.chat.attachFile","title":"Add File to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'"},{"command":"github.copilot.chat.attachSelection","title":"Add Selection to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"editorHasSelection && (resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata')"},{"command":"github.copilot.edits.attachSelection","title":"Add Selection to Copilot Edits","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"editorHasSelection && (resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata')"},{"command":"github.copilot.edits.attachFile","title":"Add File to Copilot Edits","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'"},{"command":"github.copilot.debug.collectDiagnostics","title":"GitHub Copilot Chat Diagnostics","category":"Developer"},{"command":"github.copilot.debug.generateSTest","title":"Generate STest From Last Chat Request","enablement":"github.copilot.debugReportFeedback","category":"GitHub Copilot Developer"},{"command":"github.copilot.debug.generateConfiguration","title":"Generate Debug Configuration with GitHub Copilot","category":"GitHub Copilot","enablement":"config.github.copilot.chat.startDebugging.enabled","tags":["experimental"]},{"command":"github.copilot.open.walkthrough","title":"Open Walkthrough","category":"GitHub Copilot"},{"command":"github.copilot.debug.generateInlineEditTests","title":"Generate Inline Edit Tests","category":"GitHub Copilot","enablement":"resourceScheme == 'ccreq'"},{"command":"github.copilot.buildLocalWorkspaceIndex","title":"Build Local Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.report","title":"Report Issue","category":"GitHub Copilot"},{"command":"github.copilot.chat.rerunWithCopilotDebug","title":"Debug Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.chat.startCopilotDebugCommand","title":"Start Copilot Debug"}],"configuration":[{"title":"GitHub Copilot Chat","id":"stable","properties":{"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Controls if Copilot commands are shown as Code Actions when available"},"github.copilot.renameSuggestions.triggerAutomatically":{"type":"boolean","default":true,"description":"Controls whether Copilot generates suggestions for renaming"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where chat queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection."},"github.copilot.chat.followUps":{"type":"string","default":"firstOnly","enum":["always","firstOnly","never"],"markdownDescription":"Whether to suggest follow-up messages in the chat.","markdownEnumDescriptions":["On every chat response","Only on the first response","Disables follow-up suggestions"]},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"},"github.copilot.chat.fixTestFailure.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/fixTestFailure` intent in chat and delegates certain `/fix` invocations automatically."}}},{"title":"Preview","id":"preview","properties":{"github.copilot.chat.codeGeneration.useInstructionFiles":{"type":"boolean","default":true,"markdownDescription":"Controls whether code instructions from `.github/copilot-instructions.md` are added to Copilot requests.\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","tags":["preview"]},"github.copilot.chat.startDebugging.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/startDebugging` intent in panel chat. Generates or finds launch config to match the query (if any), project structure, and more.","tags":["preview"]},"github.copilot.chat.reviewSelection.enabled":{"type":"boolean","default":true,"description":"Enables code review on current selection.","tags":["preview"]},"github.copilot.chat.reviewSelection.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Resolve all TODO tasks."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that provide code review for the current selection.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's effectiveness.","examples":[[{"file":".copilot-instructions.md"},{"text":"Resolve all TODO tasks."}]],"tags":["preview"]},"github.copilot.chat.copilotDebugCommand.enabled":{"type":"boolean","default":true,"tags":["preview"],"description":"Whether the `copilot-debug` command is enabled in the terminal."}}},{"title":"Experimental","id":"experimental","properties":{"github.copilot.chat.edits.suggestRelatedFilesFromGitHistory":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest related files from git history for the Copilot Edits working set."},"github.copilot.chat.edits.suggestRelatedFilesForTests":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest source files from test files for the Copilot Edits working set."},"github.copilot.chat.codeGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Always add a comment: 'Generated by Copilot'."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate code.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-instructions.md"},{"text":"Always add a comment: 'Generated by Copilot'."}]],"tags":["experimental"]},"github.copilot.chat.testGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-test-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-test-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use suite and test instead of describe and it."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Always try uniting related tests in a suite."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate tests.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-test-instructions.md"},{"text":"Always try uniting related tests in a suite."}]],"tags":["experimental"]},"github.copilot.chat.commitMessageGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate commit messages.","properties":{"file":{"type":"string","examples":[".copilot-commit-message-instructions.md"]}},"examples":[{"file":".copilot-commit-message-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate commit messages.","properties":{"text":{"type":"string","examples":["Use conventional commit message format."]}},"required":["text"],"examples":[{"text":"Use conventional commit message format."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate commit messages.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use conventional commit message format.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-commit-message-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.generateTests.codeLens":{"type":"boolean","default":false,"description":"Show 'Generate tests' code lens for symbols that are not covered by current test coverage information.","tags":["experimental"]},"github.copilot.chat.temporalContext.enabled":{"type":"boolean","default":false,"description":"Whether to include recently viewed and edited files with Copilot requests. This is currently only for the inline chat feature.","tags":["experimental"]},"github.copilot.chat.setupTests.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/setupTests` intent and prompting in `/tests` generation.","tags":["experimental"]},"github.copilot.chat.search.semanticTextResults":{"type":"boolean","default":false,"description":"Enables semantic search results in the search view. Disabling this setting requires reloading the window for the change to take effect.","tags":["experimental"]},"github.copilot.chat.completionContext.typescript.mode":{"type":"string","scope":"resource","enum":["off","sidecar","on"],"tags":["experimental"],"markdownDescription":"The execution mode of the TypeScript Copilot context provider."}}}],"submenus":[{"id":"copilot","label":"Copilot"},{"id":"explorer/copilot","label":"Copilot"},{"id":"terminal/copilot","label":"Copilot"},{"id":"copilot/reviewComment/additionalActions/applyAndNext","label":"Apply and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discardAndNext","label":"Discard and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discard","label":"Discard"}],"menus":{"explorer/context":[{"submenu":"explorer/copilot","group":"5_copilot@0","when":"!github.copilot.interactiveSession.disabled"}],"editor/context":[{"submenu":"copilot","when":"!github.copilot.interactiveSession.disabled","group":"1_copilot@0"}],"editor/title":[{"command":"github.copilot.debug.generateInlineEditTests","when":"resourceScheme == 'ccreq'"}],"explorer/copilot":[{"command":"github.copilot.chat.attachFile","when":"!explorerResourceIsFolder && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@1"},{"command":"github.copilot.edits.attachFile","when":"!explorerResourceIsFolder && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@2"}],"copilot":[{"command":"github.copilot.chat.attachFile","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zContext@2"},{"command":"github.copilot.chat.attachSelection","when":"editorHasSelection && (resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata')","group":"zContext@1"},{"command":"github.copilot.edits.attachSelection","when":"editorHasSelection && (resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata')","group":"zEditContext@1"},{"command":"github.copilot.edits.attachFile","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zEditContext@2"},{"command":"inlineChat.start","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilot@1"},{"command":"github.copilot.chat.explain","when":"!github.copilot.interactiveSession.disabled","group":"copilotAction@1"},{"command":"github.copilot.chat.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@2"},{"command":"github.copilot.chat.review","when":"github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","group":"copilotAction@3"},{"command":"github.copilot.chat.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@4"},{"command":"github.copilot.chat.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@5"}],"terminal/context":[{"submenu":"terminal/copilot","when":"!github.copilot.interactiveSession.disabled","group":"2_copilot@0"}],"terminal/copilot":[{"command":"workbench.action.terminal.chat.start","group":"copilot@1"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","group":"copilotAction@1"},{"command":"github.copilot.terminal.attachTerminalSelection","group":"zEditContext@1"}],"testing/item/result":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated && config.github.copilot.chat.fixTestFailure.enabled","group":"inline@2"}],"testing/item/context":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated && config.github.copilot.chat.fixTestFailure.enabled","group":"inline@2"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.chat.rerunWithCopilotDebug","when":"false"},{"command":"github.copilot.chat.startCopilotDebugCommand","when":"false"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.chat.explain","when":"false"},{"command":"github.copilot.chat.review","when":"!github.copilot.interactiveSession.disabled"},{"command":"github.copilot.chat.review.apply","when":"false"},{"command":"github.copilot.chat.review.applyAndNext","when":"false"},{"command":"github.copilot.chat.review.discard","when":"false"},{"command":"github.copilot.chat.review.discardAndNext","when":"false"},{"command":"github.copilot.chat.review.discardAll","when":"false"},{"command":"github.copilot.chat.review.stagedChanges","when":"false"},{"command":"github.copilot.chat.review.unstagedChanges","when":"false"},{"command":"github.copilot.chat.review.changes","when":"false"},{"command":"github.copilot.chat.review.changes.cancel","when":"false"},{"command":"github.copilot.chat.review.previous","when":"false"},{"command":"github.copilot.chat.review.next","when":"false"},{"command":"github.copilot.chat.review.continueInInlineChat","when":"false"},{"command":"github.copilot.chat.review.continueInChat","when":"false"},{"command":"github.copilot.chat.review.markHelpful","when":"false"},{"command":"github.copilot.chat.review.markUnhelpful","when":"false"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"},{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"false"}],"view/title":[{"command":"github.copilot.interactiveSession.feedback","when":"view == workbench.panel.chat.view.copilot"}],"comments/comment/title":[{"command":"github.copilot.chat.review.markHelpful","group":"inline@0","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.markUnhelpful","group":"inline@1","when":"commentController == github-copilot-review"}],"commentsView/commentThread/context":[{"command":"github.copilot.chat.review.apply","group":"context@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"context@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"context@3","when":"commentController == github-copilot-review"}],"comments/commentThread/additionalActions":[{"submenu":"copilot/reviewComment/additionalActions/applyAndNext","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"command":"github.copilot.chat.review.apply","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"},{"submenu":"copilot/reviewComment/additionalActions/discardAndNext","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"submenu":"copilot/reviewComment/additionalActions/discard","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"}],"copilot/reviewComment/additionalActions/applyAndNext":[{"command":"github.copilot.chat.review.applyAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.apply","group":"inline@2","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discardAndNext":[{"command":"github.copilot.chat.review.discardAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discard":[{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"comments/commentThread/title":[{"command":"github.copilot.chat.review.previous","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.next","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInChat","group":"inline@3","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"inline@4","when":"commentController == github-copilot-review"}],"scm/title":[{"command":"github.copilot.chat.review.changes","group":"navigation","when":"github.copilot.chat.reviewDiff.enabled && !github.copilot.chat.review.sourceControlProgress && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"},{"command":"github.copilot.chat.review.changes.cancel","group":"navigation","when":"github.copilot.chat.reviewDiff.enabled && github.copilot.chat.review.sourceControlProgress && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri && config.github.copilot.chat.fixTestFailure.enabled","group":"inline@1"}],"debug/createConfiguration":[{"command":"github.copilot.debug.generateConfiguration","group":"z_commands","when":"config.github.copilot.chat.startDebugging.enabled"}],"issue/reporter":[{"command":"github.copilot.report"}]},"icons":{"copilot-logo":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"Github Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}},{"id":"copilot-chat.terminalToDebugging","commandLineMatcher":".+","kind":"explain","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}},{"id":"copilot-chat.terminalToDebuggingSuccess","commandLineMatcher":".+","kind":"explain","commandExitResult":"success","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"],"aliases":[]},{"id":"markdown","extensions":[".copilotmd"]}],"views":{"copilot-chat":[{"id":"copilot-chat","name":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.debug"}]},"viewsContainers":{"activitybar":[{"id":"copilot-chat","title":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.debug"}]},"configurationDefaults":{"workbench.editorAssociations":{"*.copilotmd":"vscode.markdown.preview.editor"}},"keybindings":[{"command":"inlineChat.startWithCurrentLine","when":"github.copilot.chat.editor.enableLineTrigger && editorFocus","key":"ctrl+i","mac":"cmd+i"},{"command":"github.copilot.chat.rerunWithCopilotDebug","key":"ctrl+alt+.","mac":"cmd+alt+.","when":"github.copilot-chat.activated && terminalShellIntegrationEnabled && terminalFocus && !terminalAltBufferActive"}],"walkthroughs":[{"id":"copilotWelcome","title":"GitHub Copilot","description":"Your AI pair programmer to write code faster and smarter","when":"!isWeb","steps":[{"id":"copilot.signIn","title":"Sign in with GitHub","description":"To get started with Copilot, sign in with your GitHub account.\nMake sure you're using the correct GitHub account. You can also sign in later using the account menu.\n\n[Sign In](command:github.copilot.signIn)","when":"!config.chat.experimental.offerSetup && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled","media":{"svg":"assets/walkthrough/sign-in.svg","altText":"Sign in to GitHub via this walkthrough or VS Code's account menu"}},{"id":"copilot.setup.signIn","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Get Started for Free](command:workbench.action.chat.triggerSetup)","when":"config.chat.experimental.offerSetup && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"svg":"assets/walkthrough/copilot-chat.svg","altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.setup.signUp","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Get Started for Free](command:workbench.action.chat.triggerSetup)","when":"config.chat.experimental.offerSetup && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"svg":"assets/walkthrough/copilot-chat.svg","altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.panelChat","title":"Chat about your code","description":"Ask Copilot programming questions or get help with your code using **@workspace**.\n Type **@** to see all available chat participants that you can chat with directly, each with their own expertise.\n[Chat with Copilot](command:workbench.action.chat.open)","when":"!github.copilot.interactiveSession.disabled && github.copilot-chat.activated","media":{"svg":"assets/walkthrough/copilot-chat.svg","altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.edits","title":"Make changes using natural language","description":"Use **Copilot Edits** to select files you want to work with and describe changes you want to make. Copilot applies them directly to your files.\n[Edit with Copilot](command:workbench.action.chat.openEditSession)","when":"!github.copilot.interactiveSession.disabled && github.copilot-chat.activated","media":{"svg":"assets/walkthrough/copilot-edits.svg","altText":"Copilot Edits view in the sidebar"}},{"id":"copilot.firstSuggest","title":"AI-suggested code completions","description":"As you type in the editor, Copilot suggests code to help you complete what you started.","when":"!github.copilot.interactiveSession.disabled && github.copilot-chat.activated","media":{"svg":"assets/walkthrough/ai-powered-suggestions.svg","altText":"Different types of Copilot suggestions in the editor"}},{"id":"copilot.inlineChatNotMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Ctrl+I``** to open **Inline Chat**.","when":"!isMac && !github.copilot.interactiveSession.disabled && github.copilot-chat.activated","media":{"svg":"assets/walkthrough/copilot-inline-chat.svg","altText":"Inline Chat view in the editor"}},{"id":"copilot.inlineChatMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Cmd+I``** to open **Inline Chat**.","when":"isMac && !github.copilot.interactiveSession.disabled && github.copilot-chat.activated","media":{"svg":"assets/walkthrough/copilot-inline-chat.svg","altText":"Inline Chat view in the editor"}},{"id":"copilot.sparkle","title":"Look out for smart actions","description":"Copilot enhances your coding experience with AI-powered smart actions throughout the VS Code interface.\nLook for $(sparkle) icons, such as in the [Source Control view](command:workbench.view.scm), where Copilot generates commit messages and PR descriptions based on code changes.\n\n[Discover Tips and Tricks](https://code.visualstudio.com/docs/copilot/copilot-vscode-features)","when":"!github.copilot.interactiveSession.disabled && github.copilot-chat.activated","media":{"svg":"assets/walkthrough/copilot-sparkle.svg","altText":"Sparkle icon in various places in VS Code"}}]}],"jsonValidation":[{"fileMatch":"settings.json","url":"ccsettings://root/schema.json"}],"typescriptServerPlugins":[{"name":"@vscode/copilot-typescript-server-plugin","enableForWorkspaceTypeScriptVersions":true}]},"extensionPack":["GitHub.copilot"],"overrides":{"@aminya/node-gyp-build":"npm:node-gyp-build@4.8.1","string_decoder":"npm:string_decoder@1.2.0"},"isPreRelease":false,"originalEnabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findFiles2@2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","chatParticipantAdditions","chatEditing","defaultChatParticipant@2","chatVariableResolver","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider@2","chatParticipantPrivate@2","chatProvider","contribDebugCreateConfiguration","inlineEdit","textSearchProvider2"]},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/github.copilot-chat-0.23.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"installedTimestamp":1736422173709,"pinned":false,"source":"gallery","id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":37466345},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"github.copilot","uuid":"23c4aeee-f844-43cd-b53e-1113e483f1a6"},"manifest":{"name":"copilot","displayName":"GitHub Copilot","description":"Your AI pair programmer","version":"1.256.0","build":"1303","buildType":"prod","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot?editor=vscode","license":"https://docs.github.com/en/site-policy/github-terms/github-terms-for-additional-products-and-features","bugs":{"url":"https://github.com/community/community/discussions/categories/copilot"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","extensionPack":["GitHub.copilot-chat"],"engines":{"vscode":"^1.96.0","node":">=18.0.0","npm":">=9.0.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"main":"./dist/extension","enabledApiProposals":["inlineCompletionsAdditions"],"contributes":{"commands":[{"command":"github.copilot.acceptCursorPanelSolution","title":"Accept panel suggestion at the cursor","category":"GitHub Copilot"},{"command":"github.copilot.signIn","title":"Sign In","category":"GitHub Copilot","enablement":"!github.copilot.activated"},{"command":"github.copilot.previousPanelSolution","title":"Navigate to the previous panel suggestion","category":"GitHub Copilot"},{"command":"github.copilot.nextPanelSolution","title":"Navigate to the next panel suggestion","category":"GitHub Copilot"},{"command":"github.copilot.generate","title":"Open Completions Panel","category":"GitHub Copilot"},{"command":"github.copilot.toggleCopilot","title":"Enable/Disable Copilot completions","category":"GitHub Copilot"},{"command":"github.copilot.sendFeedback","title":"Send Feedback","category":"GitHub Copilot"},{"command":"github.copilot.collectDiagnostics","title":"Collect Diagnostics","category":"GitHub Copilot"},{"command":"github.copilot.openLogs","title":"Open Logs","category":"GitHub Copilot"}],"keybindings":[{"command":"github.copilot.generate","key":"ctrl+enter","mac":"ctrl+enter","when":"editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused && !commentEditorFocused"},{"command":"github.copilot.acceptCursorPanelSolution","key":"ctrl+/","mac":"ctrl+/","when":"github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.previousPanelSolution","key":"alt+[","mac":"alt+[","when":"github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.nextPanelSolution","key":"alt+]","mac":"alt+]","when":"github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"editor.action.inlineSuggest.trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && config.github.copilot.inlineSuggest.enable && !inlineSuggestionsVisible"}],"menus":{"editor/inlineCompletions/actions":[{"command":"github.copilot.generate","when":"github.copilot.activated"}],"commandPalette":[{"command":"github.copilot.generate","when":"github.copilot.activated"},{"command":"github.copilot.toggleCopilot","when":"github.copilot.activated"},{"command":"github.copilot.sendFeedback","when":"github.copilot.activated"},{"command":"github.copilot.collectDiagnostics"}]},"configuration":[{"title":"GitHub Copilot","properties":{"github.copilot.advanced":{"type":"object","title":"Advanced Settings","properties":{"authProvider":{"type":"string","enum":["github","github-enterprise"],"enumDescriptions":["GitHub.com","GitHub Enterprise"],"default":"github","description":"The GitHub identity to use for Copilot"},"useLanguageServer":{"type":"boolean","default":false,"description":"Experimental: Use language server"},"debug.overrideEngine":{"type":"string","default":"","description":"Override engine name"},"debug.overrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy full URL"},"debug.testOverrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy URL when running tests"},"debug.overrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API full URL"},"debug.testOverrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API URL when running tests"},"debug.filterLogCategories":{"type":"array","default":[],"description":"Show only log categories listed in this setting. If an array is empty, show all loggers"}}},"github.copilot.enable":{"type":"object","default":{"*":true,"plaintext":false,"markdown":false,"scminput":false},"additionalProperties":{"type":"boolean"},"markdownDescription":"Enable or disable Copilot completions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)"},"github.copilot.inlineSuggest.enable":{"type":"boolean","default":true,"deprecationMessage":"Deprecated: Please use github.copilot.editor.enableAutoCompletions instead.","description":"Show inline suggestions"},"github.copilot.editor.enableAutoCompletions":{"type":"boolean","scope":"language-overridable","default":true,"description":"Automatically show inline completions"}}}],"configurationDefaults":{"editor.tokenColorCustomizations":{"[*Light*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#000"}}]},"[*Dark*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#fff"}}]}}},"languages":[{"id":"code-referencing"}],"grammars":[{"language":"code-referencing","scopeName":"text.ref","path":"./syntaxes/ref.tmGrammar.json"}],"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}},"copilot-chat":{"description":"GitHub Copilot chat icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\F101"}},"copilot-blocked":{"description":"GitHub Copilot blocked icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0045"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}]},"scripts":{"build":"tsx esbuild.ts","clean":"./script/build/clean.sh","compress":"tsx ./script/compressTokenizer.ts","forbid-sources-content:extension":"node script/forbid-sources-content.js --extension","generate_languages":"ts-node script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","get_token":"ts-node script/getToken.ts","lint":"run-p --aggregate-output \"lint:*\"","lint:deps":"depcruise -c .dependency-cruiser.js .","lint:eslint":"eslint -f visualstudio --quiet --cache .","lint:prettier":"prettier --check . 2>&1","lint:types":"tsc --noEmit && tsc --noEmit -p extension/src/copilotPanel/webview","prebuild":"npm install","pretest":"npm run build","pretest:headless":"npm run build","pretest:extension":"npm run build","pretest:lsp-client":"npm run build","pretest:lib-e2e":"npm run build","prewatch":"npm run build","start":"npm run watch","test":"npm-run-all \"test:extension --ignore-scripts\" \"test:headless --ignore-scripts\" lint","test:headless":"npm-run-all test:lib test:agent \"test:lib-e2e --ignore-scripts\" test:prompt \"test:lsp-client --ignore-scripts\" lint","test:agent":"mocha \"agent/src/**/*.test.ts\"","test:extension":"tsx extension/test/runTest.ts","test:lib":"mocha \"lib/src/**/*.test.ts\" --exclude \"lib/src/prompt/integration-test/**/*.test.ts\"","test:lib-e2e":"mocha \"lib/e2e/src/**/*.test.ts\"","test:lib-e2e-no-ci":"mocha \"lib/e2e/no-ci/**/*.test.ts\"","test:lib-prompt-e2e":"mocha --delay \"lib/src/prompt/integration-test/prompt.test.ts\"","test:lib-prompt-e2e-perf":"INCLUDE_PERFORMANCE=true npm run test:lib-prompt-e2e","test:lsp-client":"mocha \"lsp-client/test/*.test.ts\"","test:prompt":"npm -C prompt run test","vscode-dts":"vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"run-s \"build --ignore-scripts\" forbid-sources-content:extension","vscode:uninstall":"node dist/extensionUninstalled.js","vsix":"vsce package --allow-missing-repository","watch":"run-p watch:*","watch:root":"tsx esbuild.ts --watch","watch:types":"tsc --noEmit --watch --preserveWatchOutput"},"devDependencies":{"@datadog/datadog-ci":"^2.46.2","@eslint/eslintrc":"^3.2.0","@eslint/js":"^9.17.0","@github/prettier-config":"0.0.6","@limegrass/eslint-plugin-import-alias":"^1.5.0","@types/benchmark":"^2.1.5","@types/crypto-js":"^4.2.2","@types/diff":"^6.0.0","@types/git-url-parse":"^9.0.3","@types/js-yaml":"^4.0.6","@types/kerberos":"^1.1.2","@types/mocha":"^10.0.10","@types/node":"~18.11.0","@types/semver":"^7.5.8","@types/sinon":"^17.0.3","@types/uuid":"^10.0.0","@types/vscode":"1.96.0","@types/yargs":"^17.0.24","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.21.0","benchmark":"^2.1.4","boxen":"^8.0.1","chalk":"^5.4.0","dependency-cruiser":"^16.8.0","electron":"^28.1.4","esbuild":"^0.24.2","esbuild-plugin-copy":"^2.1.1","esbuild-plugin-summary":"^0.0.2","eslint":"^9.17.0","eslint-formatter-visualstudio":"^8.40.0","eslint-plugin-no-only-tests":"^3.1.0","fantasticon":"^3.0.0","glob":"^10.3.4","globals":"^15.14.0","js-yaml":"^4.1.0","mocha":"^10.8.2","mocha-junit-reporter":"^2.2.1","mocha-multi-reporters":"^1.5.1","npm-run-all":"^4.1.5","pkg":"^5.8.1","prettier":"^3.4.2","prettier-plugin-organize-imports":"^4.1.0","proxy":"^2.1.1","sinon":"^19.0.2","ts-dedent":"^2.2.0","ts-mocha":"^10.0.0","ts-node":"^10.9.1","tsconfig-paths":"^4.2.0","tsx":"^4.19.2","typed-emitter":"^2.1.0","typescript":"^5.7.2","typescript-eslint":"^8.18.2","vscode-dts":"^0.3.3"},"dependencies":{"@adobe/helix-fetch":"github:devm33/helix-fetch#1088e599270f36632703f138d88c2100cbe468db","@github/memoize":"1.1.5","@microsoft/1ds-post-js":"^4.3.4","@microsoft/applicationinsights-web-basic":"^3.3.4","@microsoft/tiktokenizer":"^1.0.9","@sinclair/typebox":"^0.34.11","@types/vscode-webview":"^1.57.4","@vscode/webview-ui-toolkit":"^1.3.1","crypto-js":"^4.2.0","diff":"^7.0.0","dldr":"^0.0.10","get-stream":"^6.0.1","git-url-parse":"^16.0.0","ignore":"^6.0.2","kerberos":"^2.2.0","mac-ca":"^3.1.0","microjob":"^0.7.0","minimatch":"^9.0.3","open":"^8.4.2","semver":"^7.6.3","shiki":"~1.15.0","source-map-support":"^0.5.21","sqlite3":"^5.1.7","uuid":"^11.0.3","vscode-languageclient":"^9.0.0","vscode-languageserver":"^9.0.0","vscode-languageserver-protocol":"^3.17","vscode-languageserver-textdocument":"~1.0.11","vscode-uri":"^3.0.7","web-tree-sitter":"^0.20.8","windows-ca-certs":"^0.1.0","yargs":"^17.7.2"},"overrides":{"fsevents":"<0","bindings":"npm:bundled-bindings@^1.5.0"}},"location":{"$mid":1,"path":"/home/lxrdxe7o/.vscode/extensions/github.copilot-1.256.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"installedTimestamp":1736422177155,"pinned":false,"source":"gallery","id":"23c4aeee-f844-43cd-b53e-1113e483f1a6","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":53871467},"isValid":true,"validations":[],"preRelease":false}]}